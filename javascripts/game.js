(function(){var THREE={REVISION:"71"};"object"===typeof module&&(module.exports=THREE);void 0===Math.sign&&(Math.sign=function(a){return 0>a?-1:0<a?1:+a});THREE.log=function(){console.log.apply(console,arguments)};THREE.warn=function(){console.warn.apply(console,arguments)};THREE.error=function(){console.error.apply(console,arguments)};THREE.MOUSE={LEFT:0,MIDDLE:1,RIGHT:2};THREE.CullFaceNone=0;THREE.CullFaceBack=1;THREE.CullFaceFront=2;THREE.CullFaceFrontBack=3;THREE.FrontFaceDirectionCW=0;
THREE.FrontFaceDirectionCCW=1;THREE.BasicShadowMap=0;THREE.PCFShadowMap=1;THREE.PCFSoftShadowMap=2;THREE.FrontSide=0;THREE.BackSide=1;THREE.DoubleSide=2;THREE.NoShading=0;THREE.FlatShading=1;THREE.SmoothShading=2;THREE.NoColors=0;THREE.FaceColors=1;THREE.VertexColors=2;THREE.NoBlending=0;THREE.NormalBlending=1;THREE.AdditiveBlending=2;THREE.SubtractiveBlending=3;THREE.MultiplyBlending=4;THREE.CustomBlending=5;THREE.AddEquation=100;THREE.SubtractEquation=101;THREE.ReverseSubtractEquation=102;
THREE.MinEquation=103;THREE.MaxEquation=104;THREE.ZeroFactor=200;THREE.OneFactor=201;THREE.SrcColorFactor=202;THREE.OneMinusSrcColorFactor=203;THREE.SrcAlphaFactor=204;THREE.OneMinusSrcAlphaFactor=205;THREE.DstAlphaFactor=206;THREE.OneMinusDstAlphaFactor=207;THREE.DstColorFactor=208;THREE.OneMinusDstColorFactor=209;THREE.SrcAlphaSaturateFactor=210;THREE.MultiplyOperation=0;THREE.MixOperation=1;THREE.AddOperation=2;THREE.UVMapping=300;THREE.CubeReflectionMapping=301;THREE.CubeRefractionMapping=302;
THREE.EquirectangularReflectionMapping=303;THREE.EquirectangularRefractionMapping=304;THREE.SphericalReflectionMapping=305;THREE.RepeatWrapping=1E3;THREE.ClampToEdgeWrapping=1001;THREE.MirroredRepeatWrapping=1002;THREE.NearestFilter=1003;THREE.NearestMipMapNearestFilter=1004;THREE.NearestMipMapLinearFilter=1005;THREE.LinearFilter=1006;THREE.LinearMipMapNearestFilter=1007;THREE.LinearMipMapLinearFilter=1008;THREE.UnsignedByteType=1009;THREE.ByteType=1010;THREE.ShortType=1011;
THREE.UnsignedShortType=1012;THREE.IntType=1013;THREE.UnsignedIntType=1014;THREE.FloatType=1015;THREE.HalfFloatType=1025;THREE.UnsignedShort4444Type=1016;THREE.UnsignedShort5551Type=1017;THREE.UnsignedShort565Type=1018;THREE.AlphaFormat=1019;THREE.RGBFormat=1020;THREE.RGBAFormat=1021;THREE.LuminanceFormat=1022;THREE.LuminanceAlphaFormat=1023;THREE.RGBEFormat=THREE.RGBAFormat;THREE.RGB_S3TC_DXT1_Format=2001;THREE.RGBA_S3TC_DXT1_Format=2002;THREE.RGBA_S3TC_DXT3_Format=2003;
THREE.RGBA_S3TC_DXT5_Format=2004;THREE.RGB_PVRTC_4BPPV1_Format=2100;THREE.RGB_PVRTC_2BPPV1_Format=2101;THREE.RGBA_PVRTC_4BPPV1_Format=2102;THREE.RGBA_PVRTC_2BPPV1_Format=2103;
THREE.Projector=function(){THREE.error("THREE.Projector has been moved to /examples/js/renderers/Projector.js.");this.projectVector=function(a,b){THREE.warn("THREE.Projector: .projectVector() is now vector.project().");a.project(b)};this.unprojectVector=function(a,b){THREE.warn("THREE.Projector: .unprojectVector() is now vector.unproject().");a.unproject(b)};this.pickingRay=function(a,b){THREE.error("THREE.Projector: .pickingRay() is now raycaster.setFromCamera().")}};
THREE.CanvasRenderer=function(){THREE.error("THREE.CanvasRenderer has been moved to /examples/js/renderers/CanvasRenderer.js");this.domElement=document.createElement("canvas");this.clear=function(){};this.render=function(){};this.setClearColor=function(){};this.setSize=function(){}};THREE.Color=function(a){return 3===arguments.length?this.setRGB(arguments[0],arguments[1],arguments[2]):this.set(a)};
THREE.Color.prototype={constructor:THREE.Color,r:1,g:1,b:1,set:function(a){a instanceof THREE.Color?this.copy(a):"number"===typeof a?this.setHex(a):"string"===typeof a&&this.setStyle(a);return this},setHex:function(a){a=Math.floor(a);this.r=(a>>16&255)/255;this.g=(a>>8&255)/255;this.b=(a&255)/255;return this},setRGB:function(a,b,d){this.r=a;this.g=b;this.b=d;return this},setHSL:function(a,b,d){if(0===b)this.r=this.g=this.b=d;else{var e=function(a,b,d){0>d&&(d+=1);1<d&&--d;return d<1/6?a+6*(b-a)*d:
.5>d?b:d<2/3?a+6*(b-a)*(2/3-d):a};b=.5>=d?d*(1+b):d+b-d*b;d=2*d-b;this.r=e(d,b,a+1/3);this.g=e(d,b,a);this.b=e(d,b,a-1/3)}return this},setStyle:function(a){if(/^rgb\((\d+), ?(\d+), ?(\d+)\)$/i.test(a))return a=/^rgb\((\d+), ?(\d+), ?(\d+)\)$/i.exec(a),this.r=Math.min(255,parseInt(a[1],10))/255,this.g=Math.min(255,parseInt(a[2],10))/255,this.b=Math.min(255,parseInt(a[3],10))/255,this;if(/^rgb\((\d+)\%, ?(\d+)\%, ?(\d+)\%\)$/i.test(a))return a=/^rgb\((\d+)\%, ?(\d+)\%, ?(\d+)\%\)$/i.exec(a),this.r=
Math.min(100,parseInt(a[1],10))/100,this.g=Math.min(100,parseInt(a[2],10))/100,this.b=Math.min(100,parseInt(a[3],10))/100,this;if(/^\#([0-9a-f]{6})$/i.test(a))return a=/^\#([0-9a-f]{6})$/i.exec(a),this.setHex(parseInt(a[1],16)),this;if(/^\#([0-9a-f])([0-9a-f])([0-9a-f])$/i.test(a))return a=/^\#([0-9a-f])([0-9a-f])([0-9a-f])$/i.exec(a),this.setHex(parseInt(a[1]+a[1]+a[2]+a[2]+a[3]+a[3],16)),this;if(/^(\w+)$/i.test(a))return this.setHex(THREE.ColorKeywords[a]),this},copy:function(a){this.r=a.r;this.g=
a.g;this.b=a.b;return this},copyGammaToLinear:function(a,b){void 0===b&&(b=2);this.r=Math.pow(a.r,b);this.g=Math.pow(a.g,b);this.b=Math.pow(a.b,b);return this},copyLinearToGamma:function(a,b){void 0===b&&(b=2);var d=0<b?1/b:1;this.r=Math.pow(a.r,d);this.g=Math.pow(a.g,d);this.b=Math.pow(a.b,d);return this},convertGammaToLinear:function(){var a=this.r,b=this.g,d=this.b;this.r=a*a;this.g=b*b;this.b=d*d;return this},convertLinearToGamma:function(){this.r=Math.sqrt(this.r);this.g=Math.sqrt(this.g);this.b=
Math.sqrt(this.b);return this},getHex:function(){return 255*this.r<<16^255*this.g<<8^255*this.b<<0},getHexString:function(){return("000000"+this.getHex().toString(16)).slice(-6)},getHSL:function(a){a=a||{h:0,s:0,l:0};var b=this.r,d=this.g,e=this.b,f=Math.max(b,d,e),g=Math.min(b,d,e),h,k=(g+f)/2;if(g===f)g=h=0;else{var l=f-g,g=.5>=k?l/(f+g):l/(2-f-g);switch(f){case b:h=(d-e)/l+(d<e?6:0);break;case d:h=(e-b)/l+2;break;case e:h=(b-d)/l+4}h/=6}a.h=h;a.s=g;a.l=k;return a},getStyle:function(){return"rgb("+
(255*this.r|0)+","+(255*this.g|0)+","+(255*this.b|0)+")"},offsetHSL:function(a,b,d){var e=this.getHSL();e.h+=a;e.s+=b;e.l+=d;this.setHSL(e.h,e.s,e.l);return this},add:function(a){this.r+=a.r;this.g+=a.g;this.b+=a.b;return this},addColors:function(a,b){this.r=a.r+b.r;this.g=a.g+b.g;this.b=a.b+b.b;return this},addScalar:function(a){this.r+=a;this.g+=a;this.b+=a;return this},multiply:function(a){this.r*=a.r;this.g*=a.g;this.b*=a.b;return this},multiplyScalar:function(a){this.r*=a;this.g*=a;this.b*=a;
return this},lerp:function(a,b){this.r+=(a.r-this.r)*b;this.g+=(a.g-this.g)*b;this.b+=(a.b-this.b)*b;return this},equals:function(a){return a.r===this.r&&a.g===this.g&&a.b===this.b},fromArray:function(a){this.r=a[0];this.g=a[1];this.b=a[2];return this},toArray:function(a,b){void 0===a&&(a=[]);void 0===b&&(b=0);a[b]=this.r;a[b+1]=this.g;a[b+2]=this.b;return a},clone:function(){return(new THREE.Color).setRGB(this.r,this.g,this.b)}};
THREE.ColorKeywords={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,
darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,
grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,
lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,
palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,
tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074};THREE.Quaternion=function(a,b,d,e){this._x=a||0;this._y=b||0;this._z=d||0;this._w=void 0!==e?e:1};
THREE.Quaternion.prototype={constructor:THREE.Quaternion,_x:0,_y:0,_z:0,_w:0,get x(){return this._x},set x(a){this._x=a;this.onChangeCallback()},get y(){return this._y},set y(a){this._y=a;this.onChangeCallback()},get z(){return this._z},set z(a){this._z=a;this.onChangeCallback()},get w(){return this._w},set w(a){this._w=a;this.onChangeCallback()},set:function(a,b,d,e){this._x=a;this._y=b;this._z=d;this._w=e;this.onChangeCallback();return this},copy:function(a){this._x=a.x;this._y=a.y;this._z=a.z;
this._w=a.w;this.onChangeCallback();return this},setFromEuler:function(a,b){if(!1===a instanceof THREE.Euler)throw Error("THREE.Quaternion: .setFromEuler() now expects a Euler rotation rather than a Vector3 and order.");var d=Math.cos(a._x/2),e=Math.cos(a._y/2),f=Math.cos(a._z/2),g=Math.sin(a._x/2),h=Math.sin(a._y/2),k=Math.sin(a._z/2);"XYZ"===a.order?(this._x=g*e*f+d*h*k,this._y=d*h*f-g*e*k,this._z=d*e*k+g*h*f,this._w=d*e*f-g*h*k):"YXZ"===a.order?(this._x=g*e*f+d*h*k,this._y=d*h*f-g*e*k,this._z=
d*e*k-g*h*f,this._w=d*e*f+g*h*k):"ZXY"===a.order?(this._x=g*e*f-d*h*k,this._y=d*h*f+g*e*k,this._z=d*e*k+g*h*f,this._w=d*e*f-g*h*k):"ZYX"===a.order?(this._x=g*e*f-d*h*k,this._y=d*h*f+g*e*k,this._z=d*e*k-g*h*f,this._w=d*e*f+g*h*k):"YZX"===a.order?(this._x=g*e*f+d*h*k,this._y=d*h*f+g*e*k,this._z=d*e*k-g*h*f,this._w=d*e*f-g*h*k):"XZY"===a.order&&(this._x=g*e*f-d*h*k,this._y=d*h*f-g*e*k,this._z=d*e*k+g*h*f,this._w=d*e*f+g*h*k);if(!1!==b)this.onChangeCallback();return this},setFromAxisAngle:function(a,
b){var d=b/2,e=Math.sin(d);this._x=a.x*e;this._y=a.y*e;this._z=a.z*e;this._w=Math.cos(d);this.onChangeCallback();return this},setFromRotationMatrix:function(a){var b=a.elements,d=b[0];a=b[4];var e=b[8],f=b[1],g=b[5],h=b[9],k=b[2],l=b[6],b=b[10],m=d+g+b;0<m?(d=.5/Math.sqrt(m+1),this._w=.25/d,this._x=(l-h)*d,this._y=(e-k)*d,this._z=(f-a)*d):d>g&&d>b?(d=2*Math.sqrt(1+d-g-b),this._w=(l-h)/d,this._x=.25*d,this._y=(a+f)/d,this._z=(e+k)/d):g>b?(d=2*Math.sqrt(1+g-d-b),this._w=(e-k)/d,this._x=(a+f)/d,this._y=
.25*d,this._z=(h+l)/d):(d=2*Math.sqrt(1+b-d-g),this._w=(f-a)/d,this._x=(e+k)/d,this._y=(h+l)/d,this._z=.25*d);this.onChangeCallback();return this},setFromUnitVectors:function(){var a,b;return function(d,e){void 0===a&&(a=new THREE.Vector3);b=d.dot(e)+1;1E-6>b?(b=0,Math.abs(d.x)>Math.abs(d.z)?a.set(-d.y,d.x,0):a.set(0,-d.z,d.y)):a.crossVectors(d,e);this._x=a.x;this._y=a.y;this._z=a.z;this._w=b;this.normalize();return this}}(),inverse:function(){this.conjugate().normalize();return this},conjugate:function(){this._x*=
-1;this._y*=-1;this._z*=-1;this.onChangeCallback();return this},dot:function(a){return this._x*a._x+this._y*a._y+this._z*a._z+this._w*a._w},lengthSq:function(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w},length:function(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)},normalize:function(){var a=this.length();0===a?(this._z=this._y=this._x=0,this._w=1):(a=1/a,this._x*=a,this._y*=a,this._z*=a,this._w*=a);this.onChangeCallback();return this},
multiply:function(a,b){return void 0!==b?(THREE.warn("THREE.Quaternion: .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead."),this.multiplyQuaternions(a,b)):this.multiplyQuaternions(this,a)},multiplyQuaternions:function(a,b){var d=a._x,e=a._y,f=a._z,g=a._w,h=b._x,k=b._y,l=b._z,m=b._w;this._x=d*m+g*h+e*l-f*k;this._y=e*m+g*k+f*h-d*l;this._z=f*m+g*l+d*k-e*h;this._w=g*m-d*h-e*k-f*l;this.onChangeCallback();return this},multiplyVector3:function(a){THREE.warn("THREE.Quaternion: .multiplyVector3() has been removed. Use is now vector.applyQuaternion( quaternion ) instead.");
return a.applyQuaternion(this)},slerp:function(a,b){if(0===b)return this;if(1===b)return this.copy(a);var d=this._x,e=this._y,f=this._z,g=this._w,h=g*a._w+d*a._x+e*a._y+f*a._z;0>h?(this._w=-a._w,this._x=-a._x,this._y=-a._y,this._z=-a._z,h=-h):this.copy(a);if(1<=h)return this._w=g,this._x=d,this._y=e,this._z=f,this;var k=Math.acos(h),l=Math.sqrt(1-h*h);if(.001>Math.abs(l))return this._w=.5*(g+this._w),this._x=.5*(d+this._x),this._y=.5*(e+this._y),this._z=.5*(f+this._z),this;h=Math.sin((1-b)*k)/l;k=
Math.sin(b*k)/l;this._w=g*h+this._w*k;this._x=d*h+this._x*k;this._y=e*h+this._y*k;this._z=f*h+this._z*k;this.onChangeCallback();return this},equals:function(a){return a._x===this._x&&a._y===this._y&&a._z===this._z&&a._w===this._w},fromArray:function(a,b){void 0===b&&(b=0);this._x=a[b];this._y=a[b+1];this._z=a[b+2];this._w=a[b+3];this.onChangeCallback();return this},toArray:function(a,b){void 0===a&&(a=[]);void 0===b&&(b=0);a[b]=this._x;a[b+1]=this._y;a[b+2]=this._z;a[b+3]=this._w;return a},onChange:function(a){this.onChangeCallback=
a;return this},onChangeCallback:function(){},clone:function(){return new THREE.Quaternion(this._x,this._y,this._z,this._w)}};THREE.Quaternion.slerp=function(a,b,d,e){return d.copy(a).slerp(b,e)};THREE.Vector2=function(a,b){this.x=a||0;this.y=b||0};
THREE.Vector2.prototype={constructor:THREE.Vector2,set:function(a,b){this.x=a;this.y=b;return this},setX:function(a){this.x=a;return this},setY:function(a){this.y=a;return this},setComponent:function(a,b){switch(a){case 0:this.x=b;break;case 1:this.y=b;break;default:throw Error("index is out of range: "+a);}},getComponent:function(a){switch(a){case 0:return this.x;case 1:return this.y;default:throw Error("index is out of range: "+a);}},copy:function(a){this.x=a.x;this.y=a.y;return this},add:function(a,
b){if(void 0!==b)return THREE.warn("THREE.Vector2: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(a,b);this.x+=a.x;this.y+=a.y;return this},addScalar:function(a){this.x+=a;this.y+=a;return this},addVectors:function(a,b){this.x=a.x+b.x;this.y=a.y+b.y;return this},sub:function(a,b){if(void 0!==b)return THREE.warn("THREE.Vector2: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(a,b);this.x-=a.x;this.y-=a.y;return this},
subScalar:function(a){this.x-=a;this.y-=a;return this},subVectors:function(a,b){this.x=a.x-b.x;this.y=a.y-b.y;return this},multiply:function(a){this.x*=a.x;this.y*=a.y;return this},multiplyScalar:function(a){this.x*=a;this.y*=a;return this},divide:function(a){this.x/=a.x;this.y/=a.y;return this},divideScalar:function(a){0!==a?(a=1/a,this.x*=a,this.y*=a):this.y=this.x=0;return this},min:function(a){this.x>a.x&&(this.x=a.x);this.y>a.y&&(this.y=a.y);return this},max:function(a){this.x<a.x&&(this.x=a.x);
this.y<a.y&&(this.y=a.y);return this},clamp:function(a,b){this.x<a.x?this.x=a.x:this.x>b.x&&(this.x=b.x);this.y<a.y?this.y=a.y:this.y>b.y&&(this.y=b.y);return this},clampScalar:function(){var a,b;return function(d,e){void 0===a&&(a=new THREE.Vector2,b=new THREE.Vector2);a.set(d,d);b.set(e,e);return this.clamp(a,b)}}(),floor:function(){this.x=Math.floor(this.x);this.y=Math.floor(this.y);return this},ceil:function(){this.x=Math.ceil(this.x);this.y=Math.ceil(this.y);return this},round:function(){this.x=
Math.round(this.x);this.y=Math.round(this.y);return this},roundToZero:function(){this.x=0>this.x?Math.ceil(this.x):Math.floor(this.x);this.y=0>this.y?Math.ceil(this.y):Math.floor(this.y);return this},negate:function(){this.x=-this.x;this.y=-this.y;return this},dot:function(a){return this.x*a.x+this.y*a.y},lengthSq:function(){return this.x*this.x+this.y*this.y},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y)},normalize:function(){return this.divideScalar(this.length())},distanceTo:function(a){return Math.sqrt(this.distanceToSquared(a))},
distanceToSquared:function(a){var b=this.x-a.x;a=this.y-a.y;return b*b+a*a},setLength:function(a){var b=this.length();0!==b&&a!==b&&this.multiplyScalar(a/b);return this},lerp:function(a,b){this.x+=(a.x-this.x)*b;this.y+=(a.y-this.y)*b;return this},lerpVectors:function(a,b,d){this.subVectors(b,a).multiplyScalar(d).add(a);return this},equals:function(a){return a.x===this.x&&a.y===this.y},fromArray:function(a,b){void 0===b&&(b=0);this.x=a[b];this.y=a[b+1];return this},toArray:function(a,b){void 0===
a&&(a=[]);void 0===b&&(b=0);a[b]=this.x;a[b+1]=this.y;return a},fromAttribute:function(a,b,d){void 0===d&&(d=0);b=b*a.itemSize+d;this.x=a.array[b];this.y=a.array[b+1];return this},clone:function(){return new THREE.Vector2(this.x,this.y)}};THREE.Vector3=function(a,b,d){this.x=a||0;this.y=b||0;this.z=d||0};
THREE.Vector3.prototype={constructor:THREE.Vector3,set:function(a,b,d){this.x=a;this.y=b;this.z=d;return this},setX:function(a){this.x=a;return this},setY:function(a){this.y=a;return this},setZ:function(a){this.z=a;return this},setComponent:function(a,b){switch(a){case 0:this.x=b;break;case 1:this.y=b;break;case 2:this.z=b;break;default:throw Error("index is out of range: "+a);}},getComponent:function(a){switch(a){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw Error("index is out of range: "+
a);}},copy:function(a){this.x=a.x;this.y=a.y;this.z=a.z;return this},add:function(a,b){if(void 0!==b)return THREE.warn("THREE.Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(a,b);this.x+=a.x;this.y+=a.y;this.z+=a.z;return this},addScalar:function(a){this.x+=a;this.y+=a;this.z+=a;return this},addVectors:function(a,b){this.x=a.x+b.x;this.y=a.y+b.y;this.z=a.z+b.z;return this},sub:function(a,b){if(void 0!==b)return THREE.warn("THREE.Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),
this.subVectors(a,b);this.x-=a.x;this.y-=a.y;this.z-=a.z;return this},subScalar:function(a){this.x-=a;this.y-=a;this.z-=a;return this},subVectors:function(a,b){this.x=a.x-b.x;this.y=a.y-b.y;this.z=a.z-b.z;return this},multiply:function(a,b){if(void 0!==b)return THREE.warn("THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead."),this.multiplyVectors(a,b);this.x*=a.x;this.y*=a.y;this.z*=a.z;return this},multiplyScalar:function(a){this.x*=a;this.y*=a;this.z*=
a;return this},multiplyVectors:function(a,b){this.x=a.x*b.x;this.y=a.y*b.y;this.z=a.z*b.z;return this},applyEuler:function(){var a;return function(b){!1===b instanceof THREE.Euler&&THREE.error("THREE.Vector3: .applyEuler() now expects a Euler rotation rather than a Vector3 and order.");void 0===a&&(a=new THREE.Quaternion);this.applyQuaternion(a.setFromEuler(b));return this}}(),applyAxisAngle:function(){var a;return function(b,d){void 0===a&&(a=new THREE.Quaternion);this.applyQuaternion(a.setFromAxisAngle(b,
d));return this}}(),applyMatrix3:function(a){var b=this.x,d=this.y,e=this.z;a=a.elements;this.x=a[0]*b+a[3]*d+a[6]*e;this.y=a[1]*b+a[4]*d+a[7]*e;this.z=a[2]*b+a[5]*d+a[8]*e;return this},applyMatrix4:function(a){var b=this.x,d=this.y,e=this.z;a=a.elements;this.x=a[0]*b+a[4]*d+a[8]*e+a[12];this.y=a[1]*b+a[5]*d+a[9]*e+a[13];this.z=a[2]*b+a[6]*d+a[10]*e+a[14];return this},applyProjection:function(a){var b=this.x,d=this.y,e=this.z;a=a.elements;var f=1/(a[3]*b+a[7]*d+a[11]*e+a[15]);this.x=(a[0]*b+a[4]*
d+a[8]*e+a[12])*f;this.y=(a[1]*b+a[5]*d+a[9]*e+a[13])*f;this.z=(a[2]*b+a[6]*d+a[10]*e+a[14])*f;return this},applyQuaternion:function(a){var b=this.x,d=this.y,e=this.z,f=a.x,g=a.y,h=a.z;a=a.w;var k=a*b+g*e-h*d,l=a*d+h*b-f*e,m=a*e+f*d-g*b,b=-f*b-g*d-h*e;this.x=k*a+b*-f+l*-h-m*-g;this.y=l*a+b*-g+m*-f-k*-h;this.z=m*a+b*-h+k*-g-l*-f;return this},project:function(){var a;return function(b){void 0===a&&(a=new THREE.Matrix4);a.multiplyMatrices(b.projectionMatrix,a.getInverse(b.matrixWorld));return this.applyProjection(a)}}(),
unproject:function(){var a;return function(b){void 0===a&&(a=new THREE.Matrix4);a.multiplyMatrices(b.matrixWorld,a.getInverse(b.projectionMatrix));return this.applyProjection(a)}}(),transformDirection:function(a){var b=this.x,d=this.y,e=this.z;a=a.elements;this.x=a[0]*b+a[4]*d+a[8]*e;this.y=a[1]*b+a[5]*d+a[9]*e;this.z=a[2]*b+a[6]*d+a[10]*e;this.normalize();return this},divide:function(a){this.x/=a.x;this.y/=a.y;this.z/=a.z;return this},divideScalar:function(a){0!==a?(a=1/a,this.x*=a,this.y*=a,this.z*=
a):this.z=this.y=this.x=0;return this},min:function(a){this.x>a.x&&(this.x=a.x);this.y>a.y&&(this.y=a.y);this.z>a.z&&(this.z=a.z);return this},max:function(a){this.x<a.x&&(this.x=a.x);this.y<a.y&&(this.y=a.y);this.z<a.z&&(this.z=a.z);return this},clamp:function(a,b){this.x<a.x?this.x=a.x:this.x>b.x&&(this.x=b.x);this.y<a.y?this.y=a.y:this.y>b.y&&(this.y=b.y);this.z<a.z?this.z=a.z:this.z>b.z&&(this.z=b.z);return this},clampScalar:function(){var a,b;return function(d,e){void 0===a&&(a=new THREE.Vector3,
b=new THREE.Vector3);a.set(d,d,d);b.set(e,e,e);return this.clamp(a,b)}}(),floor:function(){this.x=Math.floor(this.x);this.y=Math.floor(this.y);this.z=Math.floor(this.z);return this},ceil:function(){this.x=Math.ceil(this.x);this.y=Math.ceil(this.y);this.z=Math.ceil(this.z);return this},round:function(){this.x=Math.round(this.x);this.y=Math.round(this.y);this.z=Math.round(this.z);return this},roundToZero:function(){this.x=0>this.x?Math.ceil(this.x):Math.floor(this.x);this.y=0>this.y?Math.ceil(this.y):
Math.floor(this.y);this.z=0>this.z?Math.ceil(this.z):Math.floor(this.z);return this},negate:function(){this.x=-this.x;this.y=-this.y;this.z=-this.z;return this},dot:function(a){return this.x*a.x+this.y*a.y+this.z*a.z},lengthSq:function(){return this.x*this.x+this.y*this.y+this.z*this.z},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)},lengthManhattan:function(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)},normalize:function(){return this.divideScalar(this.length())},
setLength:function(a){var b=this.length();0!==b&&a!==b&&this.multiplyScalar(a/b);return this},lerp:function(a,b){this.x+=(a.x-this.x)*b;this.y+=(a.y-this.y)*b;this.z+=(a.z-this.z)*b;return this},lerpVectors:function(a,b,d){this.subVectors(b,a).multiplyScalar(d).add(a);return this},cross:function(a,b){if(void 0!==b)return THREE.warn("THREE.Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead."),this.crossVectors(a,b);var d=this.x,e=this.y,f=this.z;this.x=e*a.z-f*a.y;this.y=
f*a.x-d*a.z;this.z=d*a.y-e*a.x;return this},crossVectors:function(a,b){var d=a.x,e=a.y,f=a.z,g=b.x,h=b.y,k=b.z;this.x=e*k-f*h;this.y=f*g-d*k;this.z=d*h-e*g;return this},projectOnVector:function(){var a,b;return function(d){void 0===a&&(a=new THREE.Vector3);a.copy(d).normalize();b=this.dot(a);return this.copy(a).multiplyScalar(b)}}(),projectOnPlane:function(){var a;return function(b){void 0===a&&(a=new THREE.Vector3);a.copy(this).projectOnVector(b);return this.sub(a)}}(),reflect:function(){var a;return function(b){void 0===
a&&(a=new THREE.Vector3);return this.sub(a.copy(b).multiplyScalar(2*this.dot(b)))}}(),angleTo:function(a){a=this.dot(a)/(this.length()*a.length());return Math.acos(THREE.Math.clamp(a,-1,1))},distanceTo:function(a){return Math.sqrt(this.distanceToSquared(a))},distanceToSquared:function(a){var b=this.x-a.x,d=this.y-a.y;a=this.z-a.z;return b*b+d*d+a*a},setEulerFromRotationMatrix:function(a,b){THREE.error("THREE.Vector3: .setEulerFromRotationMatrix() has been removed. Use Euler.setFromRotationMatrix() instead.")},
setEulerFromQuaternion:function(a,b){THREE.error("THREE.Vector3: .setEulerFromQuaternion() has been removed. Use Euler.setFromQuaternion() instead.")},getPositionFromMatrix:function(a){THREE.warn("THREE.Vector3: .getPositionFromMatrix() has been renamed to .setFromMatrixPosition().");return this.setFromMatrixPosition(a)},getScaleFromMatrix:function(a){THREE.warn("THREE.Vector3: .getScaleFromMatrix() has been renamed to .setFromMatrixScale().");return this.setFromMatrixScale(a)},getColumnFromMatrix:function(a,
b){THREE.warn("THREE.Vector3: .getColumnFromMatrix() has been renamed to .setFromMatrixColumn().");return this.setFromMatrixColumn(a,b)},setFromMatrixPosition:function(a){this.x=a.elements[12];this.y=a.elements[13];this.z=a.elements[14];return this},setFromMatrixScale:function(a){var b=this.set(a.elements[0],a.elements[1],a.elements[2]).length(),d=this.set(a.elements[4],a.elements[5],a.elements[6]).length();a=this.set(a.elements[8],a.elements[9],a.elements[10]).length();this.x=b;this.y=d;this.z=a;
return this},setFromMatrixColumn:function(a,b){var d=4*a,e=b.elements;this.x=e[d];this.y=e[d+1];this.z=e[d+2];return this},equals:function(a){return a.x===this.x&&a.y===this.y&&a.z===this.z},fromArray:function(a,b){void 0===b&&(b=0);this.x=a[b];this.y=a[b+1];this.z=a[b+2];return this},toArray:function(a,b){void 0===a&&(a=[]);void 0===b&&(b=0);a[b]=this.x;a[b+1]=this.y;a[b+2]=this.z;return a},fromAttribute:function(a,b,d){void 0===d&&(d=0);b=b*a.itemSize+d;this.x=a.array[b];this.y=a.array[b+1];this.z=
a.array[b+2];return this},clone:function(){return new THREE.Vector3(this.x,this.y,this.z)}};THREE.Vector4=function(a,b,d,e){this.x=a||0;this.y=b||0;this.z=d||0;this.w=void 0!==e?e:1};
THREE.Vector4.prototype={constructor:THREE.Vector4,set:function(a,b,d,e){this.x=a;this.y=b;this.z=d;this.w=e;return this},setX:function(a){this.x=a;return this},setY:function(a){this.y=a;return this},setZ:function(a){this.z=a;return this},setW:function(a){this.w=a;return this},setComponent:function(a,b){switch(a){case 0:this.x=b;break;case 1:this.y=b;break;case 2:this.z=b;break;case 3:this.w=b;break;default:throw Error("index is out of range: "+a);}},getComponent:function(a){switch(a){case 0:return this.x;
case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw Error("index is out of range: "+a);}},copy:function(a){this.x=a.x;this.y=a.y;this.z=a.z;this.w=void 0!==a.w?a.w:1;return this},add:function(a,b){if(void 0!==b)return THREE.warn("THREE.Vector4: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(a,b);this.x+=a.x;this.y+=a.y;this.z+=a.z;this.w+=a.w;return this},addScalar:function(a){this.x+=a;this.y+=a;this.z+=a;this.w+=a;return this},addVectors:function(a,
b){this.x=a.x+b.x;this.y=a.y+b.y;this.z=a.z+b.z;this.w=a.w+b.w;return this},sub:function(a,b){if(void 0!==b)return THREE.warn("THREE.Vector4: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(a,b);this.x-=a.x;this.y-=a.y;this.z-=a.z;this.w-=a.w;return this},subScalar:function(a){this.x-=a;this.y-=a;this.z-=a;this.w-=a;return this},subVectors:function(a,b){this.x=a.x-b.x;this.y=a.y-b.y;this.z=a.z-b.z;this.w=a.w-b.w;return this},multiplyScalar:function(a){this.x*=
a;this.y*=a;this.z*=a;this.w*=a;return this},applyMatrix4:function(a){var b=this.x,d=this.y,e=this.z,f=this.w;a=a.elements;this.x=a[0]*b+a[4]*d+a[8]*e+a[12]*f;this.y=a[1]*b+a[5]*d+a[9]*e+a[13]*f;this.z=a[2]*b+a[6]*d+a[10]*e+a[14]*f;this.w=a[3]*b+a[7]*d+a[11]*e+a[15]*f;return this},divideScalar:function(a){0!==a?(a=1/a,this.x*=a,this.y*=a,this.z*=a,this.w*=a):(this.z=this.y=this.x=0,this.w=1);return this},setAxisAngleFromQuaternion:function(a){this.w=2*Math.acos(a.w);var b=Math.sqrt(1-a.w*a.w);1E-4>
b?(this.x=1,this.z=this.y=0):(this.x=a.x/b,this.y=a.y/b,this.z=a.z/b);return this},setAxisAngleFromRotationMatrix:function(a){var b,d,e;a=a.elements;var f=a[0];e=a[4];var g=a[8],h=a[1],k=a[5],l=a[9];d=a[2];b=a[6];var m=a[10];if(.01>Math.abs(e-h)&&.01>Math.abs(g-d)&&.01>Math.abs(l-b)){if(.1>Math.abs(e+h)&&.1>Math.abs(g+d)&&.1>Math.abs(l+b)&&.1>Math.abs(f+k+m-3))return this.set(1,0,0,0),this;a=Math.PI;f=(f+1)/2;k=(k+1)/2;m=(m+1)/2;e=(e+h)/4;g=(g+d)/4;l=(l+b)/4;f>k&&f>m?.01>f?(b=0,e=d=.707106781):(b=
Math.sqrt(f),d=e/b,e=g/b):k>m?.01>k?(b=.707106781,d=0,e=.707106781):(d=Math.sqrt(k),b=e/d,e=l/d):.01>m?(d=b=.707106781,e=0):(e=Math.sqrt(m),b=g/e,d=l/e);this.set(b,d,e,a);return this}a=Math.sqrt((b-l)*(b-l)+(g-d)*(g-d)+(h-e)*(h-e));.001>Math.abs(a)&&(a=1);this.x=(b-l)/a;this.y=(g-d)/a;this.z=(h-e)/a;this.w=Math.acos((f+k+m-1)/2);return this},min:function(a){this.x>a.x&&(this.x=a.x);this.y>a.y&&(this.y=a.y);this.z>a.z&&(this.z=a.z);this.w>a.w&&(this.w=a.w);return this},max:function(a){this.x<a.x&&
(this.x=a.x);this.y<a.y&&(this.y=a.y);this.z<a.z&&(this.z=a.z);this.w<a.w&&(this.w=a.w);return this},clamp:function(a,b){this.x<a.x?this.x=a.x:this.x>b.x&&(this.x=b.x);this.y<a.y?this.y=a.y:this.y>b.y&&(this.y=b.y);this.z<a.z?this.z=a.z:this.z>b.z&&(this.z=b.z);this.w<a.w?this.w=a.w:this.w>b.w&&(this.w=b.w);return this},clampScalar:function(){var a,b;return function(d,e){void 0===a&&(a=new THREE.Vector4,b=new THREE.Vector4);a.set(d,d,d,d);b.set(e,e,e,e);return this.clamp(a,b)}}(),floor:function(){this.x=
Math.floor(this.x);this.y=Math.floor(this.y);this.z=Math.floor(this.z);this.w=Math.floor(this.w);return this},ceil:function(){this.x=Math.ceil(this.x);this.y=Math.ceil(this.y);this.z=Math.ceil(this.z);this.w=Math.ceil(this.w);return this},round:function(){this.x=Math.round(this.x);this.y=Math.round(this.y);this.z=Math.round(this.z);this.w=Math.round(this.w);return this},roundToZero:function(){this.x=0>this.x?Math.ceil(this.x):Math.floor(this.x);this.y=0>this.y?Math.ceil(this.y):Math.floor(this.y);
this.z=0>this.z?Math.ceil(this.z):Math.floor(this.z);this.w=0>this.w?Math.ceil(this.w):Math.floor(this.w);return this},negate:function(){this.x=-this.x;this.y=-this.y;this.z=-this.z;this.w=-this.w;return this},dot:function(a){return this.x*a.x+this.y*a.y+this.z*a.z+this.w*a.w},lengthSq:function(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)},lengthManhattan:function(){return Math.abs(this.x)+
Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)},normalize:function(){return this.divideScalar(this.length())},setLength:function(a){var b=this.length();0!==b&&a!==b&&this.multiplyScalar(a/b);return this},lerp:function(a,b){this.x+=(a.x-this.x)*b;this.y+=(a.y-this.y)*b;this.z+=(a.z-this.z)*b;this.w+=(a.w-this.w)*b;return this},lerpVectors:function(a,b,d){this.subVectors(b,a).multiplyScalar(d).add(a);return this},equals:function(a){return a.x===this.x&&a.y===this.y&&a.z===this.z&&a.w===this.w},
fromArray:function(a,b){void 0===b&&(b=0);this.x=a[b];this.y=a[b+1];this.z=a[b+2];this.w=a[b+3];return this},toArray:function(a,b){void 0===a&&(a=[]);void 0===b&&(b=0);a[b]=this.x;a[b+1]=this.y;a[b+2]=this.z;a[b+3]=this.w;return a},fromAttribute:function(a,b,d){void 0===d&&(d=0);b=b*a.itemSize+d;this.x=a.array[b];this.y=a.array[b+1];this.z=a.array[b+2];this.w=a.array[b+3];return this},clone:function(){return new THREE.Vector4(this.x,this.y,this.z,this.w)}};
THREE.Euler=function(a,b,d,e){this._x=a||0;this._y=b||0;this._z=d||0;this._order=e||THREE.Euler.DefaultOrder};THREE.Euler.RotationOrders="XYZ YZX ZXY XZY YXZ ZYX".split(" ");THREE.Euler.DefaultOrder="XYZ";
THREE.Euler.prototype={constructor:THREE.Euler,_x:0,_y:0,_z:0,_order:THREE.Euler.DefaultOrder,get x(){return this._x},set x(a){this._x=a;this.onChangeCallback()},get y(){return this._y},set y(a){this._y=a;this.onChangeCallback()},get z(){return this._z},set z(a){this._z=a;this.onChangeCallback()},get order(){return this._order},set order(a){this._order=a;this.onChangeCallback()},set:function(a,b,d,e){this._x=a;this._y=b;this._z=d;this._order=e||this._order;this.onChangeCallback();return this},copy:function(a){this._x=
a._x;this._y=a._y;this._z=a._z;this._order=a._order;this.onChangeCallback();return this},setFromRotationMatrix:function(a,b,d){var e=THREE.Math.clamp,f=a.elements;a=f[0];var g=f[4],h=f[8],k=f[1],l=f[5],m=f[9],q=f[2],r=f[6],f=f[10];b=b||this._order;"XYZ"===b?(this._y=Math.asin(e(h,-1,1)),.99999>Math.abs(h)?(this._x=Math.atan2(-m,f),this._z=Math.atan2(-g,a)):(this._x=Math.atan2(r,l),this._z=0)):"YXZ"===b?(this._x=Math.asin(-e(m,-1,1)),.99999>Math.abs(m)?(this._y=Math.atan2(h,f),this._z=Math.atan2(k,
l)):(this._y=Math.atan2(-q,a),this._z=0)):"ZXY"===b?(this._x=Math.asin(e(r,-1,1)),.99999>Math.abs(r)?(this._y=Math.atan2(-q,f),this._z=Math.atan2(-g,l)):(this._y=0,this._z=Math.atan2(k,a))):"ZYX"===b?(this._y=Math.asin(-e(q,-1,1)),.99999>Math.abs(q)?(this._x=Math.atan2(r,f),this._z=Math.atan2(k,a)):(this._x=0,this._z=Math.atan2(-g,l))):"YZX"===b?(this._z=Math.asin(e(k,-1,1)),.99999>Math.abs(k)?(this._x=Math.atan2(-m,l),this._y=Math.atan2(-q,a)):(this._x=0,this._y=Math.atan2(h,f))):"XZY"===b?(this._z=
Math.asin(-e(g,-1,1)),.99999>Math.abs(g)?(this._x=Math.atan2(r,l),this._y=Math.atan2(h,a)):(this._x=Math.atan2(-m,f),this._y=0)):THREE.warn("THREE.Euler: .setFromRotationMatrix() given unsupported order: "+b);this._order=b;if(!1!==d)this.onChangeCallback();return this},setFromQuaternion:function(){var a;return function(b,d,e){void 0===a&&(a=new THREE.Matrix4);a.makeRotationFromQuaternion(b);this.setFromRotationMatrix(a,d,e);return this}}(),setFromVector3:function(a,b){return this.set(a.x,a.y,a.z,
b||this._order)},reorder:function(){var a=new THREE.Quaternion;return function(b){a.setFromEuler(this);this.setFromQuaternion(a,b)}}(),equals:function(a){return a._x===this._x&&a._y===this._y&&a._z===this._z&&a._order===this._order},fromArray:function(a){this._x=a[0];this._y=a[1];this._z=a[2];void 0!==a[3]&&(this._order=a[3]);this.onChangeCallback();return this},toArray:function(a,b){void 0===a&&(a=[]);void 0===b&&(b=0);a[b]=this._x;a[b+1]=this._y;a[b+2]=this._z;a[b+3]=this._order;return a},toVector3:function(a){return a?
a.set(this._x,this._y,this._z):new THREE.Vector3(this._x,this._y,this._z)},onChange:function(a){this.onChangeCallback=a;return this},onChangeCallback:function(){},clone:function(){return new THREE.Euler(this._x,this._y,this._z,this._order)}};THREE.Line3=function(a,b){this.start=void 0!==a?a:new THREE.Vector3;this.end=void 0!==b?b:new THREE.Vector3};
THREE.Line3.prototype={constructor:THREE.Line3,set:function(a,b){this.start.copy(a);this.end.copy(b);return this},copy:function(a){this.start.copy(a.start);this.end.copy(a.end);return this},center:function(a){return(a||new THREE.Vector3).addVectors(this.start,this.end).multiplyScalar(.5)},delta:function(a){return(a||new THREE.Vector3).subVectors(this.end,this.start)},distanceSq:function(){return this.start.distanceToSquared(this.end)},distance:function(){return this.start.distanceTo(this.end)},at:function(a,
b){var d=b||new THREE.Vector3;return this.delta(d).multiplyScalar(a).add(this.start)},closestPointToPointParameter:function(){var a=new THREE.Vector3,b=new THREE.Vector3;return function(d,e){a.subVectors(d,this.start);b.subVectors(this.end,this.start);var f=b.dot(b),f=b.dot(a)/f;e&&(f=THREE.Math.clamp(f,0,1));return f}}(),closestPointToPoint:function(a,b,d){a=this.closestPointToPointParameter(a,b);d=d||new THREE.Vector3;return this.delta(d).multiplyScalar(a).add(this.start)},applyMatrix4:function(a){this.start.applyMatrix4(a);
this.end.applyMatrix4(a);return this},equals:function(a){return a.start.equals(this.start)&&a.end.equals(this.end)},clone:function(){return(new THREE.Line3).copy(this)}};THREE.Box2=function(a,b){this.min=void 0!==a?a:new THREE.Vector2(Infinity,Infinity);this.max=void 0!==b?b:new THREE.Vector2(-Infinity,-Infinity)};
THREE.Box2.prototype={constructor:THREE.Box2,set:function(a,b){this.min.copy(a);this.max.copy(b);return this},setFromPoints:function(a){this.makeEmpty();for(var b=0,d=a.length;b<d;b++)this.expandByPoint(a[b]);return this},setFromCenterAndSize:function(){var a=new THREE.Vector2;return function(b,d){var e=a.copy(d).multiplyScalar(.5);this.min.copy(b).sub(e);this.max.copy(b).add(e);return this}}(),copy:function(a){this.min.copy(a.min);this.max.copy(a.max);return this},makeEmpty:function(){this.min.x=
this.min.y=Infinity;this.max.x=this.max.y=-Infinity;return this},empty:function(){return this.max.x<this.min.x||this.max.y<this.min.y},center:function(a){return(a||new THREE.Vector2).addVectors(this.min,this.max).multiplyScalar(.5)},size:function(a){return(a||new THREE.Vector2).subVectors(this.max,this.min)},expandByPoint:function(a){this.min.min(a);this.max.max(a);return this},expandByVector:function(a){this.min.sub(a);this.max.add(a);return this},expandByScalar:function(a){this.min.addScalar(-a);
this.max.addScalar(a);return this},containsPoint:function(a){return a.x<this.min.x||a.x>this.max.x||a.y<this.min.y||a.y>this.max.y?!1:!0},containsBox:function(a){return this.min.x<=a.min.x&&a.max.x<=this.max.x&&this.min.y<=a.min.y&&a.max.y<=this.max.y?!0:!1},getParameter:function(a,b){return(b||new THREE.Vector2).set((a.x-this.min.x)/(this.max.x-this.min.x),(a.y-this.min.y)/(this.max.y-this.min.y))},isIntersectionBox:function(a){return a.max.x<this.min.x||a.min.x>this.max.x||a.max.y<this.min.y||a.min.y>
this.max.y?!1:!0},clampPoint:function(a,b){return(b||new THREE.Vector2).copy(a).clamp(this.min,this.max)},distanceToPoint:function(){var a=new THREE.Vector2;return function(b){return a.copy(b).clamp(this.min,this.max).sub(b).length()}}(),intersect:function(a){this.min.max(a.min);this.max.min(a.max);return this},union:function(a){this.min.min(a.min);this.max.max(a.max);return this},translate:function(a){this.min.add(a);this.max.add(a);return this},equals:function(a){return a.min.equals(this.min)&&
a.max.equals(this.max)},clone:function(){return(new THREE.Box2).copy(this)}};THREE.Box3=function(a,b){this.min=void 0!==a?a:new THREE.Vector3(Infinity,Infinity,Infinity);this.max=void 0!==b?b:new THREE.Vector3(-Infinity,-Infinity,-Infinity)};
THREE.Box3.prototype={constructor:THREE.Box3,set:function(a,b){this.min.copy(a);this.max.copy(b);return this},setFromPoints:function(a){this.makeEmpty();for(var b=0,d=a.length;b<d;b++)this.expandByPoint(a[b]);return this},setFromCenterAndSize:function(){var a=new THREE.Vector3;return function(b,d){var e=a.copy(d).multiplyScalar(.5);this.min.copy(b).sub(e);this.max.copy(b).add(e);return this}}(),setFromObject:function(){var a=new THREE.Vector3;return function(b){var d=this;b.updateMatrixWorld(!0);
this.makeEmpty();b.traverse(function(b){var f=b.geometry;if(void 0!==f)if(f instanceof THREE.Geometry)for(var g=f.vertices,f=0,h=g.length;f<h;f++)a.copy(g[f]),a.applyMatrix4(b.matrixWorld),d.expandByPoint(a);else if(f instanceof THREE.BufferGeometry&&void 0!==f.attributes.position)for(g=f.attributes.position.array,f=0,h=g.length;f<h;f+=3)a.set(g[f],g[f+1],g[f+2]),a.applyMatrix4(b.matrixWorld),d.expandByPoint(a)});return this}}(),copy:function(a){this.min.copy(a.min);this.max.copy(a.max);return this},
makeEmpty:function(){this.min.x=this.min.y=this.min.z=Infinity;this.max.x=this.max.y=this.max.z=-Infinity;return this},empty:function(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z},center:function(a){return(a||new THREE.Vector3).addVectors(this.min,this.max).multiplyScalar(.5)},size:function(a){return(a||new THREE.Vector3).subVectors(this.max,this.min)},expandByPoint:function(a){this.min.min(a);this.max.max(a);return this},expandByVector:function(a){this.min.sub(a);
this.max.add(a);return this},expandByScalar:function(a){this.min.addScalar(-a);this.max.addScalar(a);return this},containsPoint:function(a){return a.x<this.min.x||a.x>this.max.x||a.y<this.min.y||a.y>this.max.y||a.z<this.min.z||a.z>this.max.z?!1:!0},containsBox:function(a){return this.min.x<=a.min.x&&a.max.x<=this.max.x&&this.min.y<=a.min.y&&a.max.y<=this.max.y&&this.min.z<=a.min.z&&a.max.z<=this.max.z?!0:!1},getParameter:function(a,b){return(b||new THREE.Vector3).set((a.x-this.min.x)/(this.max.x-
this.min.x),(a.y-this.min.y)/(this.max.y-this.min.y),(a.z-this.min.z)/(this.max.z-this.min.z))},isIntersectionBox:function(a){return a.max.x<this.min.x||a.min.x>this.max.x||a.max.y<this.min.y||a.min.y>this.max.y||a.max.z<this.min.z||a.min.z>this.max.z?!1:!0},clampPoint:function(a,b){return(b||new THREE.Vector3).copy(a).clamp(this.min,this.max)},distanceToPoint:function(){var a=new THREE.Vector3;return function(b){return a.copy(b).clamp(this.min,this.max).sub(b).length()}}(),getBoundingSphere:function(){var a=
new THREE.Vector3;return function(b){b=b||new THREE.Sphere;b.center=this.center();b.radius=.5*this.size(a).length();return b}}(),intersect:function(a){this.min.max(a.min);this.max.min(a.max);return this},union:function(a){this.min.min(a.min);this.max.max(a.max);return this},applyMatrix4:function(){var a=[new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3];return function(b){a[0].set(this.min.x,this.min.y,
this.min.z).applyMatrix4(b);a[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(b);a[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(b);a[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(b);a[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(b);a[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(b);a[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(b);a[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(b);this.makeEmpty();this.setFromPoints(a);return this}}(),translate:function(a){this.min.add(a);
this.max.add(a);return this},equals:function(a){return a.min.equals(this.min)&&a.max.equals(this.max)},clone:function(){return(new THREE.Box3).copy(this)}};THREE.Matrix3=function(){this.elements=new Float32Array([1,0,0,0,1,0,0,0,1]);0<arguments.length&&THREE.error("THREE.Matrix3: the constructor no longer reads arguments. use .set() instead.")};
THREE.Matrix3.prototype={constructor:THREE.Matrix3,set:function(a,b,d,e,f,g,h,k,l){var m=this.elements;m[0]=a;m[3]=b;m[6]=d;m[1]=e;m[4]=f;m[7]=g;m[2]=h;m[5]=k;m[8]=l;return this},identity:function(){this.set(1,0,0,0,1,0,0,0,1);return this},copy:function(a){a=a.elements;this.set(a[0],a[3],a[6],a[1],a[4],a[7],a[2],a[5],a[8]);return this},multiplyVector3:function(a){THREE.warn("THREE.Matrix3: .multiplyVector3() has been removed. Use vector.applyMatrix3( matrix ) instead.");return a.applyMatrix3(this)},
multiplyVector3Array:function(a){THREE.warn("THREE.Matrix3: .multiplyVector3Array() has been renamed. Use matrix.applyToVector3Array( array ) instead.");return this.applyToVector3Array(a)},applyToVector3Array:function(){var a=new THREE.Vector3;return function(b,d,e){void 0===d&&(d=0);void 0===e&&(e=b.length);for(var f=0;f<e;f+=3,d+=3)a.x=b[d],a.y=b[d+1],a.z=b[d+2],a.applyMatrix3(this),b[d]=a.x,b[d+1]=a.y,b[d+2]=a.z;return b}}(),multiplyScalar:function(a){var b=this.elements;b[0]*=a;b[3]*=a;b[6]*=
a;b[1]*=a;b[4]*=a;b[7]*=a;b[2]*=a;b[5]*=a;b[8]*=a;return this},determinant:function(){var a=this.elements,b=a[0],d=a[1],e=a[2],f=a[3],g=a[4],h=a[5],k=a[6],l=a[7],a=a[8];return b*g*a-b*h*l-d*f*a+d*h*k+e*f*l-e*g*k},getInverse:function(a,b){var d=a.elements,e=this.elements;e[0]=d[10]*d[5]-d[6]*d[9];e[1]=-d[10]*d[1]+d[2]*d[9];e[2]=d[6]*d[1]-d[2]*d[5];e[3]=-d[10]*d[4]+d[6]*d[8];e[4]=d[10]*d[0]-d[2]*d[8];e[5]=-d[6]*d[0]+d[2]*d[4];e[6]=d[9]*d[4]-d[5]*d[8];e[7]=-d[9]*d[0]+d[1]*d[8];e[8]=d[5]*d[0]-d[1]*d[4];
d=d[0]*e[0]+d[1]*e[3]+d[2]*e[6];if(0===d){if(b)throw Error("Matrix3.getInverse(): can't invert matrix, determinant is 0");THREE.warn("Matrix3.getInverse(): can't invert matrix, determinant is 0");this.identity();return this}this.multiplyScalar(1/d);return this},transpose:function(){var a,b=this.elements;a=b[1];b[1]=b[3];b[3]=a;a=b[2];b[2]=b[6];b[6]=a;a=b[5];b[5]=b[7];b[7]=a;return this},flattenToArrayOffset:function(a,b){var d=this.elements;a[b]=d[0];a[b+1]=d[1];a[b+2]=d[2];a[b+3]=d[3];a[b+4]=d[4];
a[b+5]=d[5];a[b+6]=d[6];a[b+7]=d[7];a[b+8]=d[8];return a},getNormalMatrix:function(a){this.getInverse(a).transpose();return this},transposeIntoArray:function(a){var b=this.elements;a[0]=b[0];a[1]=b[3];a[2]=b[6];a[3]=b[1];a[4]=b[4];a[5]=b[7];a[6]=b[2];a[7]=b[5];a[8]=b[8];return this},fromArray:function(a){this.elements.set(a);return this},toArray:function(){var a=this.elements;return[a[0],a[1],a[2],a[3],a[4],a[5],a[6],a[7],a[8]]},clone:function(){return(new THREE.Matrix3).fromArray(this.elements)}};
THREE.Matrix4=function(){this.elements=new Float32Array([1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1]);0<arguments.length&&THREE.error("THREE.Matrix4: the constructor no longer reads arguments. use .set() instead.")};
THREE.Matrix4.prototype={constructor:THREE.Matrix4,set:function(a,b,d,e,f,g,h,k,l,m,q,r,p,v,t,u){var w=this.elements;w[0]=a;w[4]=b;w[8]=d;w[12]=e;w[1]=f;w[5]=g;w[9]=h;w[13]=k;w[2]=l;w[6]=m;w[10]=q;w[14]=r;w[3]=p;w[7]=v;w[11]=t;w[15]=u;return this},identity:function(){this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1);return this},copy:function(a){this.elements.set(a.elements);return this},extractPosition:function(a){THREE.warn("THREE.Matrix4: .extractPosition() has been renamed to .copyPosition().");return this.copyPosition(a)},
copyPosition:function(a){var b=this.elements;a=a.elements;b[12]=a[12];b[13]=a[13];b[14]=a[14];return this},extractBasis:function(a,b,d){var e=this.elements;a.set(e[0],e[1],e[2]);b.set(e[4],e[5],e[6]);d.set(e[8],e[9],e[10]);return this},makeBasis:function(a,b,d){this.set(a.x,b.x,d.x,0,a.y,b.y,d.y,0,a.z,b.z,d.z,0,0,0,0,1);return this},extractRotation:function(){var a=new THREE.Vector3;return function(b){var d=this.elements;b=b.elements;var e=1/a.set(b[0],b[1],b[2]).length(),f=1/a.set(b[4],b[5],b[6]).length(),
g=1/a.set(b[8],b[9],b[10]).length();d[0]=b[0]*e;d[1]=b[1]*e;d[2]=b[2]*e;d[4]=b[4]*f;d[5]=b[5]*f;d[6]=b[6]*f;d[8]=b[8]*g;d[9]=b[9]*g;d[10]=b[10]*g;return this}}(),makeRotationFromEuler:function(a){!1===a instanceof THREE.Euler&&THREE.error("THREE.Matrix: .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.");var b=this.elements,d=a.x,e=a.y,f=a.z,g=Math.cos(d),d=Math.sin(d),h=Math.cos(e),e=Math.sin(e),k=Math.cos(f),f=Math.sin(f);if("XYZ"===a.order){a=g*k;var l=g*f,
m=d*k,q=d*f;b[0]=h*k;b[4]=-h*f;b[8]=e;b[1]=l+m*e;b[5]=a-q*e;b[9]=-d*h;b[2]=q-a*e;b[6]=m+l*e;b[10]=g*h}else"YXZ"===a.order?(a=h*k,l=h*f,m=e*k,q=e*f,b[0]=a+q*d,b[4]=m*d-l,b[8]=g*e,b[1]=g*f,b[5]=g*k,b[9]=-d,b[2]=l*d-m,b[6]=q+a*d,b[10]=g*h):"ZXY"===a.order?(a=h*k,l=h*f,m=e*k,q=e*f,b[0]=a-q*d,b[4]=-g*f,b[8]=m+l*d,b[1]=l+m*d,b[5]=g*k,b[9]=q-a*d,b[2]=-g*e,b[6]=d,b[10]=g*h):"ZYX"===a.order?(a=g*k,l=g*f,m=d*k,q=d*f,b[0]=h*k,b[4]=m*e-l,b[8]=a*e+q,b[1]=h*f,b[5]=q*e+a,b[9]=l*e-m,b[2]=-e,b[6]=d*h,b[10]=g*h):"YZX"===
a.order?(a=g*h,l=g*e,m=d*h,q=d*e,b[0]=h*k,b[4]=q-a*f,b[8]=m*f+l,b[1]=f,b[5]=g*k,b[9]=-d*k,b[2]=-e*k,b[6]=l*f+m,b[10]=a-q*f):"XZY"===a.order&&(a=g*h,l=g*e,m=d*h,q=d*e,b[0]=h*k,b[4]=-f,b[8]=e*k,b[1]=a*f+q,b[5]=g*k,b[9]=l*f-m,b[2]=m*f-l,b[6]=d*k,b[10]=q*f+a);b[3]=0;b[7]=0;b[11]=0;b[12]=0;b[13]=0;b[14]=0;b[15]=1;return this},setRotationFromQuaternion:function(a){THREE.warn("THREE.Matrix4: .setRotationFromQuaternion() has been renamed to .makeRotationFromQuaternion().");return this.makeRotationFromQuaternion(a)},
makeRotationFromQuaternion:function(a){var b=this.elements,d=a.x,e=a.y,f=a.z,g=a.w,h=d+d,k=e+e,l=f+f;a=d*h;var m=d*k,d=d*l,q=e*k,e=e*l,f=f*l,h=g*h,k=g*k,g=g*l;b[0]=1-(q+f);b[4]=m-g;b[8]=d+k;b[1]=m+g;b[5]=1-(a+f);b[9]=e-h;b[2]=d-k;b[6]=e+h;b[10]=1-(a+q);b[3]=0;b[7]=0;b[11]=0;b[12]=0;b[13]=0;b[14]=0;b[15]=1;return this},lookAt:function(){var a=new THREE.Vector3,b=new THREE.Vector3,d=new THREE.Vector3;return function(e,f,g){var h=this.elements;d.subVectors(e,f).normalize();0===d.length()&&(d.z=1);a.crossVectors(g,
d).normalize();0===a.length()&&(d.x+=1E-4,a.crossVectors(g,d).normalize());b.crossVectors(d,a);h[0]=a.x;h[4]=b.x;h[8]=d.x;h[1]=a.y;h[5]=b.y;h[9]=d.y;h[2]=a.z;h[6]=b.z;h[10]=d.z;return this}}(),multiply:function(a,b){return void 0!==b?(THREE.warn("THREE.Matrix4: .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead."),this.multiplyMatrices(a,b)):this.multiplyMatrices(this,a)},multiplyMatrices:function(a,b){var d=a.elements,e=b.elements,f=this.elements,g=d[0],h=d[4],k=d[8],
l=d[12],m=d[1],q=d[5],r=d[9],p=d[13],v=d[2],t=d[6],u=d[10],w=d[14],x=d[3],z=d[7],F=d[11],d=d[15],y=e[0],A=e[4],C=e[8],G=e[12],I=e[1],H=e[5],B=e[9],K=e[13],W=e[2],O=e[6],J=e[10],N=e[14],R=e[3],P=e[7],T=e[11],e=e[15];f[0]=g*y+h*I+k*W+l*R;f[4]=g*A+h*H+k*O+l*P;f[8]=g*C+h*B+k*J+l*T;f[12]=g*G+h*K+k*N+l*e;f[1]=m*y+q*I+r*W+p*R;f[5]=m*A+q*H+r*O+p*P;f[9]=m*C+q*B+r*J+p*T;f[13]=m*G+q*K+r*N+p*e;f[2]=v*y+t*I+u*W+w*R;f[6]=v*A+t*H+u*O+w*P;f[10]=v*C+t*B+u*J+w*T;f[14]=v*G+t*K+u*N+w*e;f[3]=x*y+z*I+F*W+d*R;f[7]=x*A+
z*H+F*O+d*P;f[11]=x*C+z*B+F*J+d*T;f[15]=x*G+z*K+F*N+d*e;return this},multiplyToArray:function(a,b,d){var e=this.elements;this.multiplyMatrices(a,b);d[0]=e[0];d[1]=e[1];d[2]=e[2];d[3]=e[3];d[4]=e[4];d[5]=e[5];d[6]=e[6];d[7]=e[7];d[8]=e[8];d[9]=e[9];d[10]=e[10];d[11]=e[11];d[12]=e[12];d[13]=e[13];d[14]=e[14];d[15]=e[15];return this},multiplyScalar:function(a){var b=this.elements;b[0]*=a;b[4]*=a;b[8]*=a;b[12]*=a;b[1]*=a;b[5]*=a;b[9]*=a;b[13]*=a;b[2]*=a;b[6]*=a;b[10]*=a;b[14]*=a;b[3]*=a;b[7]*=a;b[11]*=
a;b[15]*=a;return this},multiplyVector3:function(a){THREE.warn("THREE.Matrix4: .multiplyVector3() has been removed. Use vector.applyMatrix4( matrix ) or vector.applyProjection( matrix ) instead.");return a.applyProjection(this)},multiplyVector4:function(a){THREE.warn("THREE.Matrix4: .multiplyVector4() has been removed. Use vector.applyMatrix4( matrix ) instead.");return a.applyMatrix4(this)},multiplyVector3Array:function(a){THREE.warn("THREE.Matrix4: .multiplyVector3Array() has been renamed. Use matrix.applyToVector3Array( array ) instead.");
return this.applyToVector3Array(a)},applyToVector3Array:function(){var a=new THREE.Vector3;return function(b,d,e){void 0===d&&(d=0);void 0===e&&(e=b.length);for(var f=0;f<e;f+=3,d+=3)a.x=b[d],a.y=b[d+1],a.z=b[d+2],a.applyMatrix4(this),b[d]=a.x,b[d+1]=a.y,b[d+2]=a.z;return b}}(),rotateAxis:function(a){THREE.warn("THREE.Matrix4: .rotateAxis() has been removed. Use Vector3.transformDirection( matrix ) instead.");a.transformDirection(this)},crossVector:function(a){THREE.warn("THREE.Matrix4: .crossVector() has been removed. Use vector.applyMatrix4( matrix ) instead.");
return a.applyMatrix4(this)},determinant:function(){var a=this.elements,b=a[0],d=a[4],e=a[8],f=a[12],g=a[1],h=a[5],k=a[9],l=a[13],m=a[2],q=a[6],r=a[10],p=a[14];return a[3]*(+f*k*q-e*l*q-f*h*r+d*l*r+e*h*p-d*k*p)+a[7]*(+b*k*p-b*l*r+f*g*r-e*g*p+e*l*m-f*k*m)+a[11]*(+b*l*q-b*h*p-f*g*q+d*g*p+f*h*m-d*l*m)+a[15]*(-e*h*m-b*k*q+b*h*r+e*g*q-d*g*r+d*k*m)},transpose:function(){var a=this.elements,b;b=a[1];a[1]=a[4];a[4]=b;b=a[2];a[2]=a[8];a[8]=b;b=a[6];a[6]=a[9];a[9]=b;b=a[3];a[3]=a[12];a[12]=b;b=a[7];a[7]=a[13];
a[13]=b;b=a[11];a[11]=a[14];a[14]=b;return this},flattenToArrayOffset:function(a,b){var d=this.elements;a[b]=d[0];a[b+1]=d[1];a[b+2]=d[2];a[b+3]=d[3];a[b+4]=d[4];a[b+5]=d[5];a[b+6]=d[6];a[b+7]=d[7];a[b+8]=d[8];a[b+9]=d[9];a[b+10]=d[10];a[b+11]=d[11];a[b+12]=d[12];a[b+13]=d[13];a[b+14]=d[14];a[b+15]=d[15];return a},getPosition:function(){var a=new THREE.Vector3;return function(){THREE.warn("THREE.Matrix4: .getPosition() has been removed. Use Vector3.setFromMatrixPosition( matrix ) instead.");var b=
this.elements;return a.set(b[12],b[13],b[14])}}(),setPosition:function(a){var b=this.elements;b[12]=a.x;b[13]=a.y;b[14]=a.z;return this},getInverse:function(a,b){var d=this.elements,e=a.elements,f=e[0],g=e[4],h=e[8],k=e[12],l=e[1],m=e[5],q=e[9],r=e[13],p=e[2],v=e[6],t=e[10],u=e[14],w=e[3],x=e[7],z=e[11],e=e[15];d[0]=q*u*x-r*t*x+r*v*z-m*u*z-q*v*e+m*t*e;d[4]=k*t*x-h*u*x-k*v*z+g*u*z+h*v*e-g*t*e;d[8]=h*r*x-k*q*x+k*m*z-g*r*z-h*m*e+g*q*e;d[12]=k*q*v-h*r*v-k*m*t+g*r*t+h*m*u-g*q*u;d[1]=r*t*w-q*u*w-r*p*z+
l*u*z+q*p*e-l*t*e;d[5]=h*u*w-k*t*w+k*p*z-f*u*z-h*p*e+f*t*e;d[9]=k*q*w-h*r*w-k*l*z+f*r*z+h*l*e-f*q*e;d[13]=h*r*p-k*q*p+k*l*t-f*r*t-h*l*u+f*q*u;d[2]=m*u*w-r*v*w+r*p*x-l*u*x-m*p*e+l*v*e;d[6]=k*v*w-g*u*w-k*p*x+f*u*x+g*p*e-f*v*e;d[10]=g*r*w-k*m*w+k*l*x-f*r*x-g*l*e+f*m*e;d[14]=k*m*p-g*r*p-k*l*v+f*r*v+g*l*u-f*m*u;d[3]=q*v*w-m*t*w-q*p*x+l*t*x+m*p*z-l*v*z;d[7]=g*t*w-h*v*w+h*p*x-f*t*x-g*p*z+f*v*z;d[11]=h*m*w-g*q*w-h*l*x+f*q*x+g*l*z-f*m*z;d[15]=g*q*p-h*m*p+h*l*v-f*q*v-g*l*t+f*m*t;d=f*d[0]+l*d[4]+p*d[8]+w*d[12];
if(0==d){if(b)throw Error("THREE.Matrix4.getInverse(): can't invert matrix, determinant is 0");THREE.warn("THREE.Matrix4.getInverse(): can't invert matrix, determinant is 0");this.identity();return this}this.multiplyScalar(1/d);return this},translate:function(a){THREE.error("THREE.Matrix4: .translate() has been removed.")},rotateX:function(a){THREE.error("THREE.Matrix4: .rotateX() has been removed.")},rotateY:function(a){THREE.error("THREE.Matrix4: .rotateY() has been removed.")},rotateZ:function(a){THREE.error("THREE.Matrix4: .rotateZ() has been removed.")},
rotateByAxis:function(a,b){THREE.error("THREE.Matrix4: .rotateByAxis() has been removed.")},scale:function(a){var b=this.elements,d=a.x,e=a.y;a=a.z;b[0]*=d;b[4]*=e;b[8]*=a;b[1]*=d;b[5]*=e;b[9]*=a;b[2]*=d;b[6]*=e;b[10]*=a;b[3]*=d;b[7]*=e;b[11]*=a;return this},getMaxScaleOnAxis:function(){var a=this.elements;return Math.sqrt(Math.max(a[0]*a[0]+a[1]*a[1]+a[2]*a[2],Math.max(a[4]*a[4]+a[5]*a[5]+a[6]*a[6],a[8]*a[8]+a[9]*a[9]+a[10]*a[10])))},makeTranslation:function(a,b,d){this.set(1,0,0,a,0,1,0,b,0,0,1,
d,0,0,0,1);return this},makeRotationX:function(a){var b=Math.cos(a);a=Math.sin(a);this.set(1,0,0,0,0,b,-a,0,0,a,b,0,0,0,0,1);return this},makeRotationY:function(a){var b=Math.cos(a);a=Math.sin(a);this.set(b,0,a,0,0,1,0,0,-a,0,b,0,0,0,0,1);return this},makeRotationZ:function(a){var b=Math.cos(a);a=Math.sin(a);this.set(b,-a,0,0,a,b,0,0,0,0,1,0,0,0,0,1);return this},makeRotationAxis:function(a,b){var d=Math.cos(b),e=Math.sin(b),f=1-d,g=a.x,h=a.y,k=a.z,l=f*g,m=f*h;this.set(l*g+d,l*h-e*k,l*k+e*h,0,l*h+
e*k,m*h+d,m*k-e*g,0,l*k-e*h,m*k+e*g,f*k*k+d,0,0,0,0,1);return this},makeScale:function(a,b,d){this.set(a,0,0,0,0,b,0,0,0,0,d,0,0,0,0,1);return this},compose:function(a,b,d){this.makeRotationFromQuaternion(b);this.scale(d);this.setPosition(a);return this},decompose:function(){var a=new THREE.Vector3,b=new THREE.Matrix4;return function(d,e,f){var g=this.elements,h=a.set(g[0],g[1],g[2]).length(),k=a.set(g[4],g[5],g[6]).length(),l=a.set(g[8],g[9],g[10]).length();0>this.determinant()&&(h=-h);d.x=g[12];
d.y=g[13];d.z=g[14];b.elements.set(this.elements);d=1/h;var g=1/k,m=1/l;b.elements[0]*=d;b.elements[1]*=d;b.elements[2]*=d;b.elements[4]*=g;b.elements[5]*=g;b.elements[6]*=g;b.elements[8]*=m;b.elements[9]*=m;b.elements[10]*=m;e.setFromRotationMatrix(b);f.x=h;f.y=k;f.z=l;return this}}(),makeFrustum:function(a,b,d,e,f,g){var h=this.elements;h[0]=2*f/(b-a);h[4]=0;h[8]=(b+a)/(b-a);h[12]=0;h[1]=0;h[5]=2*f/(e-d);h[9]=(e+d)/(e-d);h[13]=0;h[2]=0;h[6]=0;h[10]=-(g+f)/(g-f);h[14]=-2*g*f/(g-f);h[3]=0;h[7]=0;
h[11]=-1;h[15]=0;return this},makePerspective:function(a,b,d,e){a=d*Math.tan(THREE.Math.degToRad(.5*a));var f=-a;return this.makeFrustum(f*b,a*b,f,a,d,e)},makeOrthographic:function(a,b,d,e,f,g){var h=this.elements,k=b-a,l=d-e,m=g-f;h[0]=2/k;h[4]=0;h[8]=0;h[12]=-((b+a)/k);h[1]=0;h[5]=2/l;h[9]=0;h[13]=-((d+e)/l);h[2]=0;h[6]=0;h[10]=-2/m;h[14]=-((g+f)/m);h[3]=0;h[7]=0;h[11]=0;h[15]=1;return this},fromArray:function(a){this.elements.set(a);return this},toArray:function(){var a=this.elements;return[a[0],
a[1],a[2],a[3],a[4],a[5],a[6],a[7],a[8],a[9],a[10],a[11],a[12],a[13],a[14],a[15]]},clone:function(){return(new THREE.Matrix4).fromArray(this.elements)}};THREE.Ray=function(a,b){this.origin=void 0!==a?a:new THREE.Vector3;this.direction=void 0!==b?b:new THREE.Vector3};
THREE.Ray.prototype={constructor:THREE.Ray,set:function(a,b){this.origin.copy(a);this.direction.copy(b);return this},copy:function(a){this.origin.copy(a.origin);this.direction.copy(a.direction);return this},at:function(a,b){return(b||new THREE.Vector3).copy(this.direction).multiplyScalar(a).add(this.origin)},recast:function(){var a=new THREE.Vector3;return function(b){this.origin.copy(this.at(b,a));return this}}(),closestPointToPoint:function(a,b){var d=b||new THREE.Vector3;d.subVectors(a,this.origin);
var e=d.dot(this.direction);return 0>e?d.copy(this.origin):d.copy(this.direction).multiplyScalar(e).add(this.origin)},distanceToPoint:function(){var a=new THREE.Vector3;return function(b){var d=a.subVectors(b,this.origin).dot(this.direction);if(0>d)return this.origin.distanceTo(b);a.copy(this.direction).multiplyScalar(d).add(this.origin);return a.distanceTo(b)}}(),distanceSqToSegment:function(){var a=new THREE.Vector3,b=new THREE.Vector3,d=new THREE.Vector3;return function(e,f,g,h){a.copy(e).add(f).multiplyScalar(.5);
b.copy(f).sub(e).normalize();d.copy(this.origin).sub(a);var k=.5*e.distanceTo(f),l=-this.direction.dot(b),m=d.dot(this.direction),q=-d.dot(b),r=d.lengthSq(),p=Math.abs(1-l*l),v;0<p?(e=l*q-m,f=l*m-q,v=k*p,0<=e?f>=-v?f<=v?(k=1/p,e*=k,f*=k,l=e*(e+l*f+2*m)+f*(l*e+f+2*q)+r):(f=k,e=Math.max(0,-(l*f+m)),l=-e*e+f*(f+2*q)+r):(f=-k,e=Math.max(0,-(l*f+m)),l=-e*e+f*(f+2*q)+r):f<=-v?(e=Math.max(0,-(-l*k+m)),f=0<e?-k:Math.min(Math.max(-k,-q),k),l=-e*e+f*(f+2*q)+r):f<=v?(e=0,f=Math.min(Math.max(-k,-q),k),l=f*(f+
2*q)+r):(e=Math.max(0,-(l*k+m)),f=0<e?k:Math.min(Math.max(-k,-q),k),l=-e*e+f*(f+2*q)+r)):(f=0<l?-k:k,e=Math.max(0,-(l*f+m)),l=-e*e+f*(f+2*q)+r);g&&g.copy(this.direction).multiplyScalar(e).add(this.origin);h&&h.copy(b).multiplyScalar(f).add(a);return l}}(),isIntersectionSphere:function(a){return this.distanceToPoint(a.center)<=a.radius},intersectSphere:function(){var a=new THREE.Vector3;return function(b,d){a.subVectors(b.center,this.origin);var e=a.dot(this.direction),f=a.dot(a)-e*e,g=b.radius*b.radius;
if(f>g)return null;g=Math.sqrt(g-f);f=e-g;e+=g;return 0>f&&0>e?null:0>f?this.at(e,d):this.at(f,d)}}(),isIntersectionPlane:function(a){var b=a.distanceToPoint(this.origin);return 0===b||0>a.normal.dot(this.direction)*b?!0:!1},distanceToPlane:function(a){var b=a.normal.dot(this.direction);if(0==b)return 0==a.distanceToPoint(this.origin)?0:null;a=-(this.origin.dot(a.normal)+a.constant)/b;return 0<=a?a:null},intersectPlane:function(a,b){var d=this.distanceToPlane(a);return null===d?null:this.at(d,b)},
isIntersectionBox:function(){var a=new THREE.Vector3;return function(b){return null!==this.intersectBox(b,a)}}(),intersectBox:function(a,b){var d,e,f,g,h;e=1/this.direction.x;g=1/this.direction.y;h=1/this.direction.z;var k=this.origin;0<=e?(d=(a.min.x-k.x)*e,e*=a.max.x-k.x):(d=(a.max.x-k.x)*e,e*=a.min.x-k.x);0<=g?(f=(a.min.y-k.y)*g,g*=a.max.y-k.y):(f=(a.max.y-k.y)*g,g*=a.min.y-k.y);if(d>g||f>e)return null;if(f>d||d!==d)d=f;if(g<e||e!==e)e=g;0<=h?(f=(a.min.z-k.z)*h,h*=a.max.z-k.z):(f=(a.max.z-k.z)*
h,h*=a.min.z-k.z);if(d>h||f>e)return null;if(f>d||d!==d)d=f;if(h<e||e!==e)e=h;return 0>e?null:this.at(0<=d?d:e,b)},intersectTriangle:function(){var a=new THREE.Vector3,b=new THREE.Vector3,d=new THREE.Vector3,e=new THREE.Vector3;return function(f,g,h,k,l){b.subVectors(g,f);d.subVectors(h,f);e.crossVectors(b,d);g=this.direction.dot(e);if(0<g){if(k)return null;k=1}else if(0>g)k=-1,g=-g;else return null;a.subVectors(this.origin,f);f=k*this.direction.dot(d.crossVectors(a,d));if(0>f)return null;h=k*this.direction.dot(b.cross(a));
if(0>h||f+h>g)return null;f=-k*a.dot(e);return 0>f?null:this.at(f/g,l)}}(),applyMatrix4:function(a){this.direction.add(this.origin).applyMatrix4(a);this.origin.applyMatrix4(a);this.direction.sub(this.origin);this.direction.normalize();return this},equals:function(a){return a.origin.equals(this.origin)&&a.direction.equals(this.direction)},clone:function(){return(new THREE.Ray).copy(this)}};THREE.Sphere=function(a,b){this.center=void 0!==a?a:new THREE.Vector3;this.radius=void 0!==b?b:0};
THREE.Sphere.prototype={constructor:THREE.Sphere,set:function(a,b){this.center.copy(a);this.radius=b;return this},setFromPoints:function(){var a=new THREE.Box3;return function(b,d){var e=this.center;void 0!==d?e.copy(d):a.setFromPoints(b).center(e);for(var f=0,g=0,h=b.length;g<h;g++)f=Math.max(f,e.distanceToSquared(b[g]));this.radius=Math.sqrt(f);return this}}(),copy:function(a){this.center.copy(a.center);this.radius=a.radius;return this},empty:function(){return 0>=this.radius},containsPoint:function(a){return a.distanceToSquared(this.center)<=
this.radius*this.radius},distanceToPoint:function(a){return a.distanceTo(this.center)-this.radius},intersectsSphere:function(a){var b=this.radius+a.radius;return a.center.distanceToSquared(this.center)<=b*b},clampPoint:function(a,b){var d=this.center.distanceToSquared(a),e=b||new THREE.Vector3;e.copy(a);d>this.radius*this.radius&&(e.sub(this.center).normalize(),e.multiplyScalar(this.radius).add(this.center));return e},getBoundingBox:function(a){a=a||new THREE.Box3;a.set(this.center,this.center);a.expandByScalar(this.radius);
return a},applyMatrix4:function(a){this.center.applyMatrix4(a);this.radius*=a.getMaxScaleOnAxis();return this},translate:function(a){this.center.add(a);return this},equals:function(a){return a.center.equals(this.center)&&a.radius===this.radius},clone:function(){return(new THREE.Sphere).copy(this)}};
THREE.Frustum=function(a,b,d,e,f,g){this.planes=[void 0!==a?a:new THREE.Plane,void 0!==b?b:new THREE.Plane,void 0!==d?d:new THREE.Plane,void 0!==e?e:new THREE.Plane,void 0!==f?f:new THREE.Plane,void 0!==g?g:new THREE.Plane]};
THREE.Frustum.prototype={constructor:THREE.Frustum,set:function(a,b,d,e,f,g){var h=this.planes;h[0].copy(a);h[1].copy(b);h[2].copy(d);h[3].copy(e);h[4].copy(f);h[5].copy(g);return this},copy:function(a){for(var b=this.planes,d=0;6>d;d++)b[d].copy(a.planes[d]);return this},setFromMatrix:function(a){var b=this.planes,d=a.elements;a=d[0];var e=d[1],f=d[2],g=d[3],h=d[4],k=d[5],l=d[6],m=d[7],q=d[8],r=d[9],p=d[10],v=d[11],t=d[12],u=d[13],w=d[14],d=d[15];b[0].setComponents(g-a,m-h,v-q,d-t).normalize();b[1].setComponents(g+
a,m+h,v+q,d+t).normalize();b[2].setComponents(g+e,m+k,v+r,d+u).normalize();b[3].setComponents(g-e,m-k,v-r,d-u).normalize();b[4].setComponents(g-f,m-l,v-p,d-w).normalize();b[5].setComponents(g+f,m+l,v+p,d+w).normalize();return this},intersectsObject:function(){var a=new THREE.Sphere;return function(b){var d=b.geometry;null===d.boundingSphere&&d.computeBoundingSphere();a.copy(d.boundingSphere);a.applyMatrix4(b.matrixWorld);return this.intersectsSphere(a)}}(),intersectsSphere:function(a){var b=this.planes,
d=a.center;a=-a.radius;for(var e=0;6>e;e++)if(b[e].distanceToPoint(d)<a)return!1;return!0},intersectsBox:function(){var a=new THREE.Vector3,b=new THREE.Vector3;return function(d){for(var e=this.planes,f=0;6>f;f++){var g=e[f];a.x=0<g.normal.x?d.min.x:d.max.x;b.x=0<g.normal.x?d.max.x:d.min.x;a.y=0<g.normal.y?d.min.y:d.max.y;b.y=0<g.normal.y?d.max.y:d.min.y;a.z=0<g.normal.z?d.min.z:d.max.z;b.z=0<g.normal.z?d.max.z:d.min.z;var h=g.distanceToPoint(a),g=g.distanceToPoint(b);if(0>h&&0>g)return!1}return!0}}(),
containsPoint:function(a){for(var b=this.planes,d=0;6>d;d++)if(0>b[d].distanceToPoint(a))return!1;return!0},clone:function(){return(new THREE.Frustum).copy(this)}};THREE.Plane=function(a,b){this.normal=void 0!==a?a:new THREE.Vector3(1,0,0);this.constant=void 0!==b?b:0};
THREE.Plane.prototype={constructor:THREE.Plane,set:function(a,b){this.normal.copy(a);this.constant=b;return this},setComponents:function(a,b,d,e){this.normal.set(a,b,d);this.constant=e;return this},setFromNormalAndCoplanarPoint:function(a,b){this.normal.copy(a);this.constant=-b.dot(this.normal);return this},setFromCoplanarPoints:function(){var a=new THREE.Vector3,b=new THREE.Vector3;return function(d,e,f){e=a.subVectors(f,e).cross(b.subVectors(d,e)).normalize();this.setFromNormalAndCoplanarPoint(e,
d);return this}}(),copy:function(a){this.normal.copy(a.normal);this.constant=a.constant;return this},normalize:function(){var a=1/this.normal.length();this.normal.multiplyScalar(a);this.constant*=a;return this},negate:function(){this.constant*=-1;this.normal.negate();return this},distanceToPoint:function(a){return this.normal.dot(a)+this.constant},distanceToSphere:function(a){return this.distanceToPoint(a.center)-a.radius},projectPoint:function(a,b){return this.orthoPoint(a,b).sub(a).negate()},orthoPoint:function(a,
b){var d=this.distanceToPoint(a);return(b||new THREE.Vector3).copy(this.normal).multiplyScalar(d)},isIntersectionLine:function(a){var b=this.distanceToPoint(a.start);a=this.distanceToPoint(a.end);return 0>b&&0<a||0>a&&0<b},intersectLine:function(){var a=new THREE.Vector3;return function(b,d){var e=d||new THREE.Vector3,f=b.delta(a),g=this.normal.dot(f);if(0==g){if(0==this.distanceToPoint(b.start))return e.copy(b.start)}else return g=-(b.start.dot(this.normal)+this.constant)/g,0>g||1<g?void 0:e.copy(f).multiplyScalar(g).add(b.start)}}(),
coplanarPoint:function(a){return(a||new THREE.Vector3).copy(this.normal).multiplyScalar(-this.constant)},applyMatrix4:function(){var a=new THREE.Vector3,b=new THREE.Vector3,d=new THREE.Matrix3;return function(e,f){var g=f||d.getNormalMatrix(e),g=a.copy(this.normal).applyMatrix3(g),h=this.coplanarPoint(b);h.applyMatrix4(e);this.setFromNormalAndCoplanarPoint(g,h);return this}}(),translate:function(a){this.constant-=a.dot(this.normal);return this},equals:function(a){return a.normal.equals(this.normal)&&
a.constant==this.constant},clone:function(){return(new THREE.Plane).copy(this)}};
THREE.Math={generateUUID:function(){var a="0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz".split(""),b=Array(36),d=0,e;return function(){for(var f=0;36>f;f++)8==f||13==f||18==f||23==f?b[f]="-":14==f?b[f]="4":(2>=d&&(d=33554432+16777216*Math.random()|0),e=d&15,d>>=4,b[f]=a[19==f?e&3|8:e]);return b.join("")}}(),clamp:function(a,b,d){return a<b?b:a>d?d:a},clampBottom:function(a,b){return a<b?b:a},mapLinear:function(a,b,d,e,f){return e+(a-b)*(f-e)/(d-b)},smoothstep:function(a,b,d){if(a<=
b)return 0;if(a>=d)return 1;a=(a-b)/(d-b);return a*a*(3-2*a)},smootherstep:function(a,b,d){if(a<=b)return 0;if(a>=d)return 1;a=(a-b)/(d-b);return a*a*a*(a*(6*a-15)+10)},random16:function(){return(65280*Math.random()+255*Math.random())/65535},randInt:function(a,b){return Math.floor(this.randFloat(a,b))},randFloat:function(a,b){return a+Math.random()*(b-a)},randFloatSpread:function(a){return a*(.5-Math.random())},degToRad:function(){var a=Math.PI/180;return function(b){return b*a}}(),radToDeg:function(){var a=
180/Math.PI;return function(b){return b*a}}(),isPowerOfTwo:function(a){return 0===(a&a-1)&&0!==a},nextPowerOfTwo:function(a){a--;a|=a>>1;a|=a>>2;a|=a>>4;a|=a>>8;a|=a>>16;a++;return a}};
THREE.Spline=function(a){function b(a,b,d,e,f,g,h){a=.5*(d-a);e=.5*(e-b);return(2*(b-d)+a+e)*h+(-3*(b-d)-2*a-e)*g+a*f+b}this.points=a;var d=[],e={x:0,y:0,z:0},f,g,h,k,l,m,q,r,p;this.initFromArray=function(a){this.points=[];for(var b=0;b<a.length;b++)this.points[b]={x:a[b][0],y:a[b][1],z:a[b][2]}};this.getPoint=function(a){f=(this.points.length-1)*a;g=Math.floor(f);h=f-g;d[0]=0===g?g:g-1;d[1]=g;d[2]=g>this.points.length-2?this.points.length-1:g+1;d[3]=g>this.points.length-3?this.points.length-1:g+
2;m=this.points[d[0]];q=this.points[d[1]];r=this.points[d[2]];p=this.points[d[3]];k=h*h;l=h*k;e.x=b(m.x,q.x,r.x,p.x,h,k,l);e.y=b(m.y,q.y,r.y,p.y,h,k,l);e.z=b(m.z,q.z,r.z,p.z,h,k,l);return e};this.getControlPointsArray=function(){var a,b,d=this.points.length,e=[];for(a=0;a<d;a++)b=this.points[a],e[a]=[b.x,b.y,b.z];return e};this.getLength=function(a){var b,d,e,f=b=b=0,g=new THREE.Vector3,h=new THREE.Vector3,k=[],l=0;k[0]=0;a||(a=100);d=this.points.length*a;g.copy(this.points[0]);for(a=1;a<d;a++)b=
a/d,e=this.getPoint(b),h.copy(e),l+=h.distanceTo(g),g.copy(e),b*=this.points.length-1,b=Math.floor(b),b!=f&&(k[b]=l,f=b);k[k.length]=l;return{chunks:k,total:l}};this.reparametrizeByArcLength=function(a){var b,d,e,f,g,h,k=[],l=new THREE.Vector3,p=this.getLength();k.push(l.copy(this.points[0]).clone());for(b=1;b<this.points.length;b++){d=p.chunks[b]-p.chunks[b-1];h=Math.ceil(a*d/p.total);f=(b-1)/(this.points.length-1);g=b/(this.points.length-1);for(d=1;d<h-1;d++)e=f+1/h*d*(g-f),e=this.getPoint(e),k.push(l.copy(e).clone());
k.push(l.copy(this.points[b]).clone())}this.points=k}};THREE.Triangle=function(a,b,d){this.a=void 0!==a?a:new THREE.Vector3;this.b=void 0!==b?b:new THREE.Vector3;this.c=void 0!==d?d:new THREE.Vector3};THREE.Triangle.normal=function(){var a=new THREE.Vector3;return function(b,d,e,f){f=f||new THREE.Vector3;f.subVectors(e,d);a.subVectors(b,d);f.cross(a);b=f.lengthSq();return 0<b?f.multiplyScalar(1/Math.sqrt(b)):f.set(0,0,0)}}();
THREE.Triangle.barycoordFromPoint=function(){var a=new THREE.Vector3,b=new THREE.Vector3,d=new THREE.Vector3;return function(e,f,g,h,k){a.subVectors(h,f);b.subVectors(g,f);d.subVectors(e,f);e=a.dot(a);f=a.dot(b);g=a.dot(d);var l=b.dot(b);h=b.dot(d);var m=e*l-f*f;k=k||new THREE.Vector3;if(0==m)return k.set(-2,-1,-1);m=1/m;l=(l*g-f*h)*m;e=(e*h-f*g)*m;return k.set(1-l-e,e,l)}}();
THREE.Triangle.containsPoint=function(){var a=new THREE.Vector3;return function(b,d,e,f){b=THREE.Triangle.barycoordFromPoint(b,d,e,f,a);return 0<=b.x&&0<=b.y&&1>=b.x+b.y}}();
THREE.Triangle.prototype={constructor:THREE.Triangle,set:function(a,b,d){this.a.copy(a);this.b.copy(b);this.c.copy(d);return this},setFromPointsAndIndices:function(a,b,d,e){this.a.copy(a[b]);this.b.copy(a[d]);this.c.copy(a[e]);return this},copy:function(a){this.a.copy(a.a);this.b.copy(a.b);this.c.copy(a.c);return this},area:function(){var a=new THREE.Vector3,b=new THREE.Vector3;return function(){a.subVectors(this.c,this.b);b.subVectors(this.a,this.b);return.5*a.cross(b).length()}}(),midpoint:function(a){return(a||
new THREE.Vector3).addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)},normal:function(a){return THREE.Triangle.normal(this.a,this.b,this.c,a)},plane:function(a){return(a||new THREE.Plane).setFromCoplanarPoints(this.a,this.b,this.c)},barycoordFromPoint:function(a,b){return THREE.Triangle.barycoordFromPoint(a,this.a,this.b,this.c,b)},containsPoint:function(a){return THREE.Triangle.containsPoint(a,this.a,this.b,this.c)},equals:function(a){return a.a.equals(this.a)&&a.b.equals(this.b)&&a.c.equals(this.c)},
clone:function(){return(new THREE.Triangle).copy(this)}};THREE.Clock=function(a){this.autoStart=void 0!==a?a:!0;this.elapsedTime=this.oldTime=this.startTime=0;this.running=!1};
THREE.Clock.prototype={constructor:THREE.Clock,start:function(){this.oldTime=this.startTime=void 0!==self.performance&&void 0!==self.performance.now?self.performance.now():Date.now();this.running=!0},stop:function(){this.getElapsedTime();this.running=!1},getElapsedTime:function(){this.getDelta();return this.elapsedTime},getDelta:function(){var a=0;this.autoStart&&!this.running&&this.start();if(this.running){var b=void 0!==self.performance&&void 0!==self.performance.now?self.performance.now():Date.now(),
a=.001*(b-this.oldTime);this.oldTime=b;this.elapsedTime+=a}return a}};THREE.EventDispatcher=function(){};
THREE.EventDispatcher.prototype={constructor:THREE.EventDispatcher,apply:function(a){a.addEventListener=THREE.EventDispatcher.prototype.addEventListener;a.hasEventListener=THREE.EventDispatcher.prototype.hasEventListener;a.removeEventListener=THREE.EventDispatcher.prototype.removeEventListener;a.dispatchEvent=THREE.EventDispatcher.prototype.dispatchEvent},addEventListener:function(a,b){void 0===this._listeners&&(this._listeners={});var d=this._listeners;void 0===d[a]&&(d[a]=[]);-1===d[a].indexOf(b)&&
d[a].push(b)},hasEventListener:function(a,b){if(void 0===this._listeners)return!1;var d=this._listeners;return void 0!==d[a]&&-1!==d[a].indexOf(b)?!0:!1},removeEventListener:function(a,b){if(void 0!==this._listeners){var d=this._listeners[a];if(void 0!==d){var e=d.indexOf(b);-1!==e&&d.splice(e,1)}}},dispatchEvent:function(a){if(void 0!==this._listeners){var b=this._listeners[a.type];if(void 0!==b){a.target=this;for(var d=[],e=b.length,f=0;f<e;f++)d[f]=b[f];for(f=0;f<e;f++)d[f].call(this,a)}}}};
(function(a){a.Raycaster=function(b,d,g,h){this.ray=new a.Ray(b,d);this.near=g||0;this.far=h||Infinity;this.params={Sprite:{},Mesh:{},PointCloud:{threshold:1},LOD:{},Line:{}}};var b=function(a,b){return a.distance-b.distance},d=function(a,b,g,h){a.raycast(b,g);if(!0===h){a=a.children;h=0;for(var k=a.length;h<k;h++)d(a[h],b,g,!0)}};a.Raycaster.prototype={constructor:a.Raycaster,precision:1E-4,linePrecision:1,set:function(a,b){this.ray.set(a,b)},setFromCamera:function(b,d){d instanceof a.PerspectiveCamera?
(this.ray.origin.copy(d.position),this.ray.direction.set(b.x,b.y,.5).unproject(d).sub(d.position).normalize()):d instanceof a.OrthographicCamera?(this.ray.origin.set(b.x,b.y,-1).unproject(d),this.ray.direction.set(0,0,-1).transformDirection(d.matrixWorld)):a.error("THREE.Raycaster: Unsupported camera type.")},intersectObject:function(a,f){var g=[];d(a,this,g,f);g.sort(b);return g},intersectObjects:function(e,f){var g=[];if(!1===e instanceof Array)return a.warn("THREE.Raycaster.intersectObjects: objects is not an Array."),
g;for(var h=0,k=e.length;h<k;h++)d(e[h],this,g,f);g.sort(b);return g}}})(THREE);
THREE.Object3D=function(){Object.defineProperty(this,"id",{value:THREE.Object3DIdCount++});this.uuid=THREE.Math.generateUUID();this.name="";this.type="Object3D";this.parent=void 0;this.children=[];this.up=THREE.Object3D.DefaultUp.clone();var a=new THREE.Vector3,b=new THREE.Euler,d=new THREE.Quaternion,e=new THREE.Vector3(1,1,1);b.onChange(function(){d.setFromEuler(b,!1)});d.onChange(function(){b.setFromQuaternion(d,void 0,!1)});Object.defineProperties(this,{position:{enumerable:!0,value:a},rotation:{enumerable:!0,
value:b},quaternion:{enumerable:!0,value:d},scale:{enumerable:!0,value:e}});this.rotationAutoUpdate=!0;this.matrix=new THREE.Matrix4;this.matrixWorld=new THREE.Matrix4;this.matrixAutoUpdate=!0;this.matrixWorldNeedsUpdate=!1;this.visible=!0;this.receiveShadow=this.castShadow=!1;this.frustumCulled=!0;this.renderOrder=0;this.userData={}};THREE.Object3D.DefaultUp=new THREE.Vector3(0,1,0);
THREE.Object3D.prototype={constructor:THREE.Object3D,get eulerOrder(){THREE.warn("THREE.Object3D: .eulerOrder has been moved to .rotation.order.");return this.rotation.order},set eulerOrder(a){THREE.warn("THREE.Object3D: .eulerOrder has been moved to .rotation.order.");this.rotation.order=a},get useQuaternion(){THREE.warn("THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.")},set useQuaternion(a){THREE.warn("THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.")},
applyMatrix:function(a){this.matrix.multiplyMatrices(a,this.matrix);this.matrix.decompose(this.position,this.quaternion,this.scale)},setRotationFromAxisAngle:function(a,b){this.quaternion.setFromAxisAngle(a,b)},setRotationFromEuler:function(a){this.quaternion.setFromEuler(a,!0)},setRotationFromMatrix:function(a){this.quaternion.setFromRotationMatrix(a)},setRotationFromQuaternion:function(a){this.quaternion.copy(a)},rotateOnAxis:function(){var a=new THREE.Quaternion;return function(b,d){a.setFromAxisAngle(b,
d);this.quaternion.multiply(a);return this}}(),rotateX:function(){var a=new THREE.Vector3(1,0,0);return function(b){return this.rotateOnAxis(a,b)}}(),rotateY:function(){var a=new THREE.Vector3(0,1,0);return function(b){return this.rotateOnAxis(a,b)}}(),rotateZ:function(){var a=new THREE.Vector3(0,0,1);return function(b){return this.rotateOnAxis(a,b)}}(),translateOnAxis:function(){var a=new THREE.Vector3;return function(b,d){a.copy(b).applyQuaternion(this.quaternion);this.position.add(a.multiplyScalar(d));
return this}}(),translate:function(a,b){THREE.warn("THREE.Object3D: .translate() has been removed. Use .translateOnAxis( axis, distance ) instead.");return this.translateOnAxis(b,a)},translateX:function(){var a=new THREE.Vector3(1,0,0);return function(b){return this.translateOnAxis(a,b)}}(),translateY:function(){var a=new THREE.Vector3(0,1,0);return function(b){return this.translateOnAxis(a,b)}}(),translateZ:function(){var a=new THREE.Vector3(0,0,1);return function(b){return this.translateOnAxis(a,
b)}}(),localToWorld:function(a){return a.applyMatrix4(this.matrixWorld)},worldToLocal:function(){var a=new THREE.Matrix4;return function(b){return b.applyMatrix4(a.getInverse(this.matrixWorld))}}(),lookAt:function(){var a=new THREE.Matrix4;return function(b){a.lookAt(b,this.position,this.up);this.quaternion.setFromRotationMatrix(a)}}(),add:function(a){if(1<arguments.length){for(var b=0;b<arguments.length;b++)this.add(arguments[b]);return this}if(a===this)return THREE.error("THREE.Object3D.add: object can't be added as a child of itself.",
a),this;a instanceof THREE.Object3D?(void 0!==a.parent&&a.parent.remove(a),a.parent=this,a.dispatchEvent({type:"added"}),this.children.push(a)):THREE.error("THREE.Object3D.add: object not an instance of THREE.Object3D.",a);return this},remove:function(a){if(1<arguments.length)for(var b=0;b<arguments.length;b++)this.remove(arguments[b]);b=this.children.indexOf(a);-1!==b&&(a.parent=void 0,a.dispatchEvent({type:"removed"}),this.children.splice(b,1))},getChildByName:function(a){THREE.warn("THREE.Object3D: .getChildByName() has been renamed to .getObjectByName().");
return this.getObjectByName(a)},getObjectById:function(a){return this.getObjectByProperty("id",a)},getObjectByName:function(a){return this.getObjectByProperty("name",a)},getObjectByProperty:function(a,b){if(this[a]===b)return this;for(var d=0,e=this.children.length;d<e;d++){var f=this.children[d].getObjectByProperty(a,b);if(void 0!==f)return f}},getWorldPosition:function(a){a=a||new THREE.Vector3;this.updateMatrixWorld(!0);return a.setFromMatrixPosition(this.matrixWorld)},getWorldQuaternion:function(){var a=
new THREE.Vector3,b=new THREE.Vector3;return function(d){d=d||new THREE.Quaternion;this.updateMatrixWorld(!0);this.matrixWorld.decompose(a,d,b);return d}}(),getWorldRotation:function(){var a=new THREE.Quaternion;return function(b){b=b||new THREE.Euler;this.getWorldQuaternion(a);return b.setFromQuaternion(a,this.rotation.order,!1)}}(),getWorldScale:function(){var a=new THREE.Vector3,b=new THREE.Quaternion;return function(d){d=d||new THREE.Vector3;this.updateMatrixWorld(!0);this.matrixWorld.decompose(a,
b,d);return d}}(),getWorldDirection:function(){var a=new THREE.Quaternion;return function(b){b=b||new THREE.Vector3;this.getWorldQuaternion(a);return b.set(0,0,1).applyQuaternion(a)}}(),raycast:function(){},traverse:function(a){a(this);for(var b=0,d=this.children.length;b<d;b++)this.children[b].traverse(a)},traverseVisible:function(a){if(!1!==this.visible){a(this);for(var b=0,d=this.children.length;b<d;b++)this.children[b].traverseVisible(a)}},traverseAncestors:function(a){this.parent&&(a(this.parent),
this.parent.traverseAncestors(a))},updateMatrix:function(){this.matrix.compose(this.position,this.quaternion,this.scale);this.matrixWorldNeedsUpdate=!0},updateMatrixWorld:function(a){!0===this.matrixAutoUpdate&&this.updateMatrix();if(!0===this.matrixWorldNeedsUpdate||!0===a)void 0===this.parent?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),this.matrixWorldNeedsUpdate=!1,a=!0;for(var b=0,d=this.children.length;b<d;b++)this.children[b].updateMatrixWorld(a)},
toJSON:function(){var a={metadata:{version:4.3,type:"Object",generator:"ObjectExporter"}},b={},d={},e=function(b){void 0===a.materials&&(a.materials=[]);if(void 0===d[b.uuid]){var e=b.toJSON();delete e.metadata;d[b.uuid]=e;a.materials.push(e)}return b.uuid},f=function(d){var h={};h.uuid=d.uuid;h.type=d.type;""!==d.name&&(h.name=d.name);"{}"!==JSON.stringify(d.userData)&&(h.userData=d.userData);!0!==d.visible&&(h.visible=d.visible);if(d instanceof THREE.PerspectiveCamera)h.fov=d.fov,h.aspect=d.aspect,
h.near=d.near,h.far=d.far;else if(d instanceof THREE.OrthographicCamera)h.left=d.left,h.right=d.right,h.top=d.top,h.bottom=d.bottom,h.near=d.near,h.far=d.far;else if(d instanceof THREE.AmbientLight)h.color=d.color.getHex();else if(d instanceof THREE.DirectionalLight)h.color=d.color.getHex(),h.intensity=d.intensity;else if(d instanceof THREE.PointLight)h.color=d.color.getHex(),h.intensity=d.intensity,h.distance=d.distance,h.decay=d.decay;else if(d instanceof THREE.SpotLight)h.color=d.color.getHex(),
h.intensity=d.intensity,h.distance=d.distance,h.angle=d.angle,h.exponent=d.exponent,h.decay=d.decay;else if(d instanceof THREE.HemisphereLight)h.color=d.color.getHex(),h.groundColor=d.groundColor.getHex();else if(d instanceof THREE.Mesh||d instanceof THREE.Line||d instanceof THREE.PointCloud){var k=d.geometry;void 0===a.geometries&&(a.geometries=[]);if(void 0===b[k.uuid]){var l=k.toJSON();delete l.metadata;b[k.uuid]=l;a.geometries.push(l)}h.geometry=k.uuid;h.material=e(d.material);d instanceof THREE.Line&&
(h.mode=d.mode)}else d instanceof THREE.Sprite&&(h.material=e(d.material));h.matrix=d.matrix.toArray();if(0<d.children.length)for(h.children=[],k=0;k<d.children.length;k++)h.children.push(f(d.children[k]));return h};a.object=f(this);return a},clone:function(a,b){void 0===a&&(a=new THREE.Object3D);void 0===b&&(b=!0);a.name=this.name;a.up.copy(this.up);a.position.copy(this.position);a.quaternion.copy(this.quaternion);a.scale.copy(this.scale);a.rotationAutoUpdate=this.rotationAutoUpdate;a.matrix.copy(this.matrix);
a.matrixWorld.copy(this.matrixWorld);a.matrixAutoUpdate=this.matrixAutoUpdate;a.matrixWorldNeedsUpdate=this.matrixWorldNeedsUpdate;a.visible=this.visible;a.castShadow=this.castShadow;a.receiveShadow=this.receiveShadow;a.frustumCulled=this.frustumCulled;a.userData=JSON.parse(JSON.stringify(this.userData));if(!0===b)for(var d=0;d<this.children.length;d++)a.add(this.children[d].clone());return a}};THREE.EventDispatcher.prototype.apply(THREE.Object3D.prototype);THREE.Object3DIdCount=0;
THREE.Face3=function(a,b,d,e,f,g){this.a=a;this.b=b;this.c=d;this.normal=e instanceof THREE.Vector3?e:new THREE.Vector3;this.vertexNormals=e instanceof Array?e:[];this.color=f instanceof THREE.Color?f:new THREE.Color;this.vertexColors=f instanceof Array?f:[];this.vertexTangents=[];this.materialIndex=void 0!==g?g:0};
THREE.Face3.prototype={constructor:THREE.Face3,clone:function(){var a=new THREE.Face3(this.a,this.b,this.c);a.normal.copy(this.normal);a.color.copy(this.color);a.materialIndex=this.materialIndex;for(var b=0,d=this.vertexNormals.length;b<d;b++)a.vertexNormals[b]=this.vertexNormals[b].clone();b=0;for(d=this.vertexColors.length;b<d;b++)a.vertexColors[b]=this.vertexColors[b].clone();b=0;for(d=this.vertexTangents.length;b<d;b++)a.vertexTangents[b]=this.vertexTangents[b].clone();return a}};
THREE.Face4=function(a,b,d,e,f,g,h){THREE.warn("THREE.Face4 has been removed. A THREE.Face3 will be created instead.");return new THREE.Face3(a,b,d,f,g,h)};THREE.BufferAttribute=function(a,b){this.array=a;this.itemSize=b;this.needsUpdate=!1};
THREE.BufferAttribute.prototype={constructor:THREE.BufferAttribute,get length(){return this.array.length},copyAt:function(a,b,d){a*=this.itemSize;d*=b.itemSize;for(var e=0,f=this.itemSize;e<f;e++)this.array[a+e]=b.array[d+e];return this},set:function(a,b){void 0===b&&(b=0);this.array.set(a,b);return this},setX:function(a,b){this.array[a*this.itemSize]=b;return this},setY:function(a,b){this.array[a*this.itemSize+1]=b;return this},setZ:function(a,b){this.array[a*this.itemSize+2]=b;return this},setXY:function(a,
b,d){a*=this.itemSize;this.array[a]=b;this.array[a+1]=d;return this},setXYZ:function(a,b,d,e){a*=this.itemSize;this.array[a]=b;this.array[a+1]=d;this.array[a+2]=e;return this},setXYZW:function(a,b,d,e,f){a*=this.itemSize;this.array[a]=b;this.array[a+1]=d;this.array[a+2]=e;this.array[a+3]=f;return this},clone:function(){return new THREE.BufferAttribute(new this.array.constructor(this.array),this.itemSize)}};
THREE.Int8Attribute=function(a,b){THREE.warn("THREE.Int8Attribute has been removed. Use THREE.BufferAttribute( array, itemSize ) instead.");return new THREE.BufferAttribute(a,b)};THREE.Uint8Attribute=function(a,b){THREE.warn("THREE.Uint8Attribute has been removed. Use THREE.BufferAttribute( array, itemSize ) instead.");return new THREE.BufferAttribute(a,b)};
THREE.Uint8ClampedAttribute=function(a,b){THREE.warn("THREE.Uint8ClampedAttribute has been removed. Use THREE.BufferAttribute( array, itemSize ) instead.");return new THREE.BufferAttribute(a,b)};THREE.Int16Attribute=function(a,b){THREE.warn("THREE.Int16Attribute has been removed. Use THREE.BufferAttribute( array, itemSize ) instead.");return new THREE.BufferAttribute(a,b)};
THREE.Uint16Attribute=function(a,b){THREE.warn("THREE.Uint16Attribute has been removed. Use THREE.BufferAttribute( array, itemSize ) instead.");return new THREE.BufferAttribute(a,b)};THREE.Int32Attribute=function(a,b){THREE.warn("THREE.Int32Attribute has been removed. Use THREE.BufferAttribute( array, itemSize ) instead.");return new THREE.BufferAttribute(a,b)};
THREE.Uint32Attribute=function(a,b){THREE.warn("THREE.Uint32Attribute has been removed. Use THREE.BufferAttribute( array, itemSize ) instead.");return new THREE.BufferAttribute(a,b)};THREE.Float32Attribute=function(a,b){THREE.warn("THREE.Float32Attribute has been removed. Use THREE.BufferAttribute( array, itemSize ) instead.");return new THREE.BufferAttribute(a,b)};
THREE.Float64Attribute=function(a,b){THREE.warn("THREE.Float64Attribute has been removed. Use THREE.BufferAttribute( array, itemSize ) instead.");return new THREE.BufferAttribute(a,b)};THREE.DynamicBufferAttribute=function(a,b){THREE.BufferAttribute.call(this,a,b);this.updateRange={offset:0,count:-1}};THREE.DynamicBufferAttribute.prototype=Object.create(THREE.BufferAttribute.prototype);THREE.DynamicBufferAttribute.prototype.constructor=THREE.DynamicBufferAttribute;
THREE.DynamicBufferAttribute.prototype.clone=function(){return new THREE.DynamicBufferAttribute(new this.array.constructor(this.array),this.itemSize)};THREE.BufferGeometry=function(){Object.defineProperty(this,"id",{value:THREE.GeometryIdCount++});this.uuid=THREE.Math.generateUUID();this.name="";this.type="BufferGeometry";this.attributes={};this.attributesKeys=[];this.offsets=this.drawcalls=[];this.boundingSphere=this.boundingBox=null};
THREE.BufferGeometry.prototype={constructor:THREE.BufferGeometry,addAttribute:function(a,b,d){!1===b instanceof THREE.BufferAttribute?(THREE.warn("THREE.BufferGeometry: .addAttribute() now expects ( name, attribute )."),this.attributes[a]={array:b,itemSize:d}):(this.attributes[a]=b,this.attributesKeys=Object.keys(this.attributes))},getAttribute:function(a){return this.attributes[a]},addDrawCall:function(a,b,d){this.drawcalls.push({start:a,count:b,index:void 0!==d?d:0})},applyMatrix:function(a){var b=
this.attributes.position;void 0!==b&&(a.applyToVector3Array(b.array),b.needsUpdate=!0);b=this.attributes.normal;void 0!==b&&((new THREE.Matrix3).getNormalMatrix(a).applyToVector3Array(b.array),b.needsUpdate=!0);null!==this.boundingBox&&this.computeBoundingBox();null!==this.boundingSphere&&this.computeBoundingSphere()},center:function(){this.computeBoundingBox();var a=this.boundingBox.center().negate();this.applyMatrix((new THREE.Matrix4).setPosition(a));return a},fromGeometry:function(a,b){b=b||{vertexColors:THREE.NoColors};
var d=a.vertices,e=a.faces,f=a.faceVertexUvs,g=b.vertexColors,h=0<f[0].length,k=3==e[0].vertexNormals.length,l=new Float32Array(9*e.length);this.addAttribute("position",new THREE.BufferAttribute(l,3));var m=new Float32Array(9*e.length);this.addAttribute("normal",new THREE.BufferAttribute(m,3));if(g!==THREE.NoColors){var q=new Float32Array(9*e.length);this.addAttribute("color",new THREE.BufferAttribute(q,3))}if(!0===h){var r=new Float32Array(6*e.length);this.addAttribute("uv",new THREE.BufferAttribute(r,
2))}for(var p=0,v=0,t=0;p<e.length;p++,v+=6,t+=9){var u=e[p],w=d[u.a],x=d[u.b],z=d[u.c];l[t]=w.x;l[t+1]=w.y;l[t+2]=w.z;l[t+3]=x.x;l[t+4]=x.y;l[t+5]=x.z;l[t+6]=z.x;l[t+7]=z.y;l[t+8]=z.z;!0===k?(w=u.vertexNormals[0],x=u.vertexNormals[1],z=u.vertexNormals[2],m[t]=w.x,m[t+1]=w.y,m[t+2]=w.z,m[t+3]=x.x,m[t+4]=x.y,m[t+5]=x.z,m[t+6]=z.x,m[t+7]=z.y,m[t+8]=z.z):(w=u.normal,m[t]=w.x,m[t+1]=w.y,m[t+2]=w.z,m[t+3]=w.x,m[t+4]=w.y,m[t+5]=w.z,m[t+6]=w.x,m[t+7]=w.y,m[t+8]=w.z);g===THREE.FaceColors?(u=u.color,q[t]=
u.r,q[t+1]=u.g,q[t+2]=u.b,q[t+3]=u.r,q[t+4]=u.g,q[t+5]=u.b,q[t+6]=u.r,q[t+7]=u.g,q[t+8]=u.b):g===THREE.VertexColors&&(w=u.vertexColors[0],x=u.vertexColors[1],u=u.vertexColors[2],q[t]=w.r,q[t+1]=w.g,q[t+2]=w.b,q[t+3]=x.r,q[t+4]=x.g,q[t+5]=x.b,q[t+6]=u.r,q[t+7]=u.g,q[t+8]=u.b);!0===h&&(u=f[0][p][0],w=f[0][p][1],x=f[0][p][2],r[v]=u.x,r[v+1]=u.y,r[v+2]=w.x,r[v+3]=w.y,r[v+4]=x.x,r[v+5]=x.y)}this.computeBoundingSphere();return this},computeBoundingBox:function(){var a=new THREE.Vector3;return function(){null===
this.boundingBox&&(this.boundingBox=new THREE.Box3);var b=this.attributes.position.array;if(b){var d=this.boundingBox;d.makeEmpty();for(var e=0,f=b.length;e<f;e+=3)a.set(b[e],b[e+1],b[e+2]),d.expandByPoint(a)}if(void 0===b||0===b.length)this.boundingBox.min.set(0,0,0),this.boundingBox.max.set(0,0,0);(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&THREE.error('THREE.BufferGeometry.computeBoundingBox: Computed min/max have NaN values. The "position" attribute is likely to have NaN values.')}}(),
computeBoundingSphere:function(){var a=new THREE.Box3,b=new THREE.Vector3;return function(){null===this.boundingSphere&&(this.boundingSphere=new THREE.Sphere);var d=this.attributes.position.array;if(d){a.makeEmpty();for(var e=this.boundingSphere.center,f=0,g=d.length;f<g;f+=3)b.set(d[f],d[f+1],d[f+2]),a.expandByPoint(b);a.center(e);for(var h=0,f=0,g=d.length;f<g;f+=3)b.set(d[f],d[f+1],d[f+2]),h=Math.max(h,e.distanceToSquared(b));this.boundingSphere.radius=Math.sqrt(h);isNaN(this.boundingSphere.radius)&&
THREE.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.')}}}(),computeFaceNormals:function(){},computeVertexNormals:function(){var a=this.attributes;if(a.position){var b=a.position.array;if(void 0===a.normal)this.addAttribute("normal",new THREE.BufferAttribute(new Float32Array(b.length),3));else for(var d=a.normal.array,e=0,f=d.length;e<f;e++)d[e]=0;var d=a.normal.array,g,h,k,l=new THREE.Vector3,m=new THREE.Vector3,
q=new THREE.Vector3,r=new THREE.Vector3,p=new THREE.Vector3;if(a.index)for(var v=a.index.array,t=0<this.offsets.length?this.offsets:[{start:0,count:v.length,index:0}],u=0,w=t.length;u<w;++u){f=t[u].start;g=t[u].count;for(var x=t[u].index,e=f,f=f+g;e<f;e+=3)g=3*(x+v[e]),h=3*(x+v[e+1]),k=3*(x+v[e+2]),l.fromArray(b,g),m.fromArray(b,h),q.fromArray(b,k),r.subVectors(q,m),p.subVectors(l,m),r.cross(p),d[g]+=r.x,d[g+1]+=r.y,d[g+2]+=r.z,d[h]+=r.x,d[h+1]+=r.y,d[h+2]+=r.z,d[k]+=r.x,d[k+1]+=r.y,d[k+2]+=r.z}else for(e=
0,f=b.length;e<f;e+=9)l.fromArray(b,e),m.fromArray(b,e+3),q.fromArray(b,e+6),r.subVectors(q,m),p.subVectors(l,m),r.cross(p),d[e]=r.x,d[e+1]=r.y,d[e+2]=r.z,d[e+3]=r.x,d[e+4]=r.y,d[e+5]=r.z,d[e+6]=r.x,d[e+7]=r.y,d[e+8]=r.z;this.normalizeNormals();a.normal.needsUpdate=!0}},computeTangents:function(){function a(a,b,d){r.fromArray(e,3*a);p.fromArray(e,3*b);v.fromArray(e,3*d);t.fromArray(g,2*a);u.fromArray(g,2*b);w.fromArray(g,2*d);x=p.x-r.x;z=v.x-r.x;F=p.y-r.y;y=v.y-r.y;A=p.z-r.z;C=v.z-r.z;G=u.x-t.x;I=
w.x-t.x;H=u.y-t.y;B=w.y-t.y;K=1/(G*B-I*H);W.set((B*x-H*z)*K,(B*F-H*y)*K,(B*A-H*C)*K);O.set((G*z-I*x)*K,(G*y-I*F)*K,(G*C-I*A)*K);l[a].add(W);l[b].add(W);l[d].add(W);m[a].add(O);m[b].add(O);m[d].add(O)}function b(a){ka.fromArray(f,3*a);Q.copy(ka);ea=l[a];ra.copy(ea);ra.sub(ka.multiplyScalar(ka.dot(ea))).normalize();ma.crossVectors(Q,ea);ta=ma.dot(m[a]);fa=0>ta?-1:1;k[4*a]=ra.x;k[4*a+1]=ra.y;k[4*a+2]=ra.z;k[4*a+3]=fa}if(void 0===this.attributes.index||void 0===this.attributes.position||void 0===this.attributes.normal||
void 0===this.attributes.uv)THREE.warn("THREE.BufferGeometry: Missing required attributes (index, position, normal or uv) in BufferGeometry.computeTangents()");else{var d=this.attributes.index.array,e=this.attributes.position.array,f=this.attributes.normal.array,g=this.attributes.uv.array,h=e.length/3;void 0===this.attributes.tangent&&this.addAttribute("tangent",new THREE.BufferAttribute(new Float32Array(4*h),4));for(var k=this.attributes.tangent.array,l=[],m=[],q=0;q<h;q++)l[q]=new THREE.Vector3,
m[q]=new THREE.Vector3;var r=new THREE.Vector3,p=new THREE.Vector3,v=new THREE.Vector3,t=new THREE.Vector2,u=new THREE.Vector2,w=new THREE.Vector2,x,z,F,y,A,C,G,I,H,B,K,W=new THREE.Vector3,O=new THREE.Vector3,J,N,R,P,T;0===this.drawcalls.length&&this.addDrawCall(0,d.length,0);var X=this.drawcalls,q=0;for(N=X.length;q<N;++q){J=X[q].start;R=X[q].count;var L=X[q].index,h=J;for(J+=R;h<J;h+=3)R=L+d[h],P=L+d[h+1],T=L+d[h+2],a(R,P,T)}var ra=new THREE.Vector3,ma=new THREE.Vector3,ka=new THREE.Vector3,Q=new THREE.Vector3,
fa,ea,ta,q=0;for(N=X.length;q<N;++q)for(J=X[q].start,R=X[q].count,L=X[q].index,h=J,J+=R;h<J;h+=3)R=L+d[h],P=L+d[h+1],T=L+d[h+2],b(R),b(P),b(T)}},computeOffsets:function(a){void 0===a&&(a=65535);for(var b=this.attributes.index.array,d=this.attributes.position.array,e=b.length/3,f=new Uint16Array(b.length),g=0,h=0,k=[{start:0,count:0,index:0}],l=k[0],m=0,q=0,r=new Int32Array(6),p=new Int32Array(d.length),v=new Int32Array(d.length),t=0;t<d.length;t++)p[t]=-1,v[t]=-1;for(d=0;d<e;d++){for(var u=q=0;3>
u;u++)t=b[3*d+u],-1==p[t]?(r[2*u]=t,r[2*u+1]=-1,q++):p[t]<l.index?(r[2*u]=t,r[2*u+1]=-1,m++):(r[2*u]=t,r[2*u+1]=p[t]);if(h+q>l.index+a)for(l={start:g,count:0,index:h},k.push(l),q=0;6>q;q+=2)u=r[q+1],-1<u&&u<l.index&&(r[q+1]=-1);for(q=0;6>q;q+=2)t=r[q],u=r[q+1],-1===u&&(u=h++),p[t]=u,v[u]=t,f[g++]=u-l.index,l.count++}this.reorderBuffers(f,v,h);return this.drawcalls=this.offsets=k},merge:function(a,b){if(!1===a instanceof THREE.BufferGeometry)THREE.error("THREE.BufferGeometry.merge(): geometry not an instance of THREE.BufferGeometry.",
a);else{void 0===b&&(b=0);var d=this.attributes,e;for(e in d)if(void 0!==a.attributes[e])for(var f=d[e].array,g=a.attributes[e],h=g.array,k=0,g=g.itemSize*b;k<h.length;k++,g++)f[g]=h[k];return this}},normalizeNormals:function(){for(var a=this.attributes.normal.array,b,d,e,f=0,g=a.length;f<g;f+=3)b=a[f],d=a[f+1],e=a[f+2],b=1/Math.sqrt(b*b+d*d+e*e),a[f]*=b,a[f+1]*=b,a[f+2]*=b},reorderBuffers:function(a,b,d){var e={},f;for(f in this.attributes)"index"!=f&&(e[f]=new this.attributes[f].array.constructor(this.attributes[f].itemSize*
d));for(var g=0;g<d;g++){var h=b[g];for(f in this.attributes)if("index"!=f)for(var k=this.attributes[f].array,l=this.attributes[f].itemSize,m=e[f],q=0;q<l;q++)m[g*l+q]=k[h*l+q]}this.attributes.index.array=a;for(f in this.attributes)"index"!=f&&(this.attributes[f].array=e[f],this.attributes[f].numItems=this.attributes[f].itemSize*d)},toJSON:function(){var a={metadata:{version:4,type:"BufferGeometry",generator:"BufferGeometryExporter"},uuid:this.uuid,type:this.type,data:{attributes:{}}},b=this.attributes,
d=this.offsets,e=this.boundingSphere,f;for(f in b){var g=b[f],h=Array.prototype.slice.call(g.array);a.data.attributes[f]={itemSize:g.itemSize,type:g.array.constructor.name,array:h}}0<d.length&&(a.data.offsets=JSON.parse(JSON.stringify(d)));null!==e&&(a.data.boundingSphere={center:e.center.toArray(),radius:e.radius});return a},clone:function(){var a=new THREE.BufferGeometry,b;for(b in this.attributes)a.addAttribute(b,this.attributes[b].clone());b=0;for(var d=this.offsets.length;b<d;b++){var e=this.offsets[b];
a.offsets.push({start:e.start,index:e.index,count:e.count})}return a},dispose:function(){this.dispatchEvent({type:"dispose"})}};THREE.EventDispatcher.prototype.apply(THREE.BufferGeometry.prototype);
THREE.Geometry=function(){Object.defineProperty(this,"id",{value:THREE.GeometryIdCount++});this.uuid=THREE.Math.generateUUID();this.name="";this.type="Geometry";this.vertices=[];this.colors=[];this.faces=[];this.faceVertexUvs=[[]];this.morphTargets=[];this.morphColors=[];this.morphNormals=[];this.skinWeights=[];this.skinIndices=[];this.lineDistances=[];this.boundingSphere=this.boundingBox=null;this.hasTangents=!1;this.dynamic=!0;this.groupsNeedUpdate=this.lineDistancesNeedUpdate=this.colorsNeedUpdate=
this.tangentsNeedUpdate=this.normalsNeedUpdate=this.uvsNeedUpdate=this.elementsNeedUpdate=this.verticesNeedUpdate=!1};
THREE.Geometry.prototype={constructor:THREE.Geometry,applyMatrix:function(a){for(var b=(new THREE.Matrix3).getNormalMatrix(a),d=0,e=this.vertices.length;d<e;d++)this.vertices[d].applyMatrix4(a);d=0;for(e=this.faces.length;d<e;d++){a=this.faces[d];a.normal.applyMatrix3(b).normalize();for(var f=0,g=a.vertexNormals.length;f<g;f++)a.vertexNormals[f].applyMatrix3(b).normalize()}null!==this.boundingBox&&this.computeBoundingBox();null!==this.boundingSphere&&this.computeBoundingSphere();this.normalsNeedUpdate=
this.verticesNeedUpdate=!0},fromBufferGeometry:function(a){for(var b=this,d=a.attributes,e=d.position.array,f=void 0!==d.index?d.index.array:void 0,g=void 0!==d.normal?d.normal.array:void 0,h=void 0!==d.color?d.color.array:void 0,k=void 0!==d.uv?d.uv.array:void 0,l=[],m=[],q=d=0;d<e.length;d+=3,q+=2)b.vertices.push(new THREE.Vector3(e[d],e[d+1],e[d+2])),void 0!==g&&l.push(new THREE.Vector3(g[d],g[d+1],g[d+2])),void 0!==h&&b.colors.push(new THREE.Color(h[d],h[d+1],h[d+2])),void 0!==k&&m.push(new THREE.Vector2(k[q],
k[q+1]));var r=function(a,d,e){var f=void 0!==g?[l[a].clone(),l[d].clone(),l[e].clone()]:[],p=void 0!==h?[b.colors[a].clone(),b.colors[d].clone(),b.colors[e].clone()]:[];b.faces.push(new THREE.Face3(a,d,e,f,p));void 0!==k&&b.faceVertexUvs[0].push([m[a].clone(),m[d].clone(),m[e].clone()])};if(void 0!==f)if(e=a.drawcalls,0<e.length)for(d=0;d<e.length;d++)for(var q=e[d],p=q.start,v=q.count,t=q.index,q=p,p=p+v;q<p;q+=3)r(t+f[q],t+f[q+1],t+f[q+2]);else for(d=0;d<f.length;d+=3)r(f[d],f[d+1],f[d+2]);else for(d=
0;d<e.length/3;d+=3)r(d,d+1,d+2);this.computeFaceNormals();null!==a.boundingBox&&(this.boundingBox=a.boundingBox.clone());null!==a.boundingSphere&&(this.boundingSphere=a.boundingSphere.clone());return this},center:function(){this.computeBoundingBox();var a=this.boundingBox.center().negate();this.applyMatrix((new THREE.Matrix4).setPosition(a));return a},computeFaceNormals:function(){for(var a=new THREE.Vector3,b=new THREE.Vector3,d=0,e=this.faces.length;d<e;d++){var f=this.faces[d],g=this.vertices[f.a],
h=this.vertices[f.b];a.subVectors(this.vertices[f.c],h);b.subVectors(g,h);a.cross(b);a.normalize();f.normal.copy(a)}},computeVertexNormals:function(a){var b,d,e;e=Array(this.vertices.length);b=0;for(d=this.vertices.length;b<d;b++)e[b]=new THREE.Vector3;if(a){var f,g,h,k=new THREE.Vector3,l=new THREE.Vector3;a=0;for(b=this.faces.length;a<b;a++)d=this.faces[a],f=this.vertices[d.a],g=this.vertices[d.b],h=this.vertices[d.c],k.subVectors(h,g),l.subVectors(f,g),k.cross(l),e[d.a].add(k),e[d.b].add(k),e[d.c].add(k)}else for(a=
0,b=this.faces.length;a<b;a++)d=this.faces[a],e[d.a].add(d.normal),e[d.b].add(d.normal),e[d.c].add(d.normal);b=0;for(d=this.vertices.length;b<d;b++)e[b].normalize();a=0;for(b=this.faces.length;a<b;a++)d=this.faces[a],d.vertexNormals[0]=e[d.a].clone(),d.vertexNormals[1]=e[d.b].clone(),d.vertexNormals[2]=e[d.c].clone()},computeMorphNormals:function(){var a,b,d,e,f;d=0;for(e=this.faces.length;d<e;d++)for(f=this.faces[d],f.__originalFaceNormal?f.__originalFaceNormal.copy(f.normal):f.__originalFaceNormal=
f.normal.clone(),f.__originalVertexNormals||(f.__originalVertexNormals=[]),a=0,b=f.vertexNormals.length;a<b;a++)f.__originalVertexNormals[a]?f.__originalVertexNormals[a].copy(f.vertexNormals[a]):f.__originalVertexNormals[a]=f.vertexNormals[a].clone();var g=new THREE.Geometry;g.faces=this.faces;a=0;for(b=this.morphTargets.length;a<b;a++){if(!this.morphNormals[a]){this.morphNormals[a]={};this.morphNormals[a].faceNormals=[];this.morphNormals[a].vertexNormals=[];f=this.morphNormals[a].faceNormals;var h=
this.morphNormals[a].vertexNormals,k,l;d=0;for(e=this.faces.length;d<e;d++)k=new THREE.Vector3,l={a:new THREE.Vector3,b:new THREE.Vector3,c:new THREE.Vector3},f.push(k),h.push(l)}h=this.morphNormals[a];g.vertices=this.morphTargets[a].vertices;g.computeFaceNormals();g.computeVertexNormals();d=0;for(e=this.faces.length;d<e;d++)f=this.faces[d],k=h.faceNormals[d],l=h.vertexNormals[d],k.copy(f.normal),l.a.copy(f.vertexNormals[0]),l.b.copy(f.vertexNormals[1]),l.c.copy(f.vertexNormals[2])}d=0;for(e=this.faces.length;d<
e;d++)f=this.faces[d],f.normal=f.__originalFaceNormal,f.vertexNormals=f.__originalVertexNormals},computeTangents:function(){var a,b,d,e,f,g,h,k,l,m,q,r,p,v,t,u,w,x=[],z=[];d=new THREE.Vector3;var F=new THREE.Vector3,y=new THREE.Vector3,A=new THREE.Vector3,C=new THREE.Vector3;a=0;for(b=this.vertices.length;a<b;a++)x[a]=new THREE.Vector3,z[a]=new THREE.Vector3;a=0;for(b=this.faces.length;a<b;a++)f=this.faces[a],g=this.faceVertexUvs[0][a],e=f.a,w=f.b,f=f.c,h=this.vertices[e],k=this.vertices[w],l=this.vertices[f],
m=g[0],q=g[1],r=g[2],g=k.x-h.x,p=l.x-h.x,v=k.y-h.y,t=l.y-h.y,k=k.z-h.z,h=l.z-h.z,l=q.x-m.x,u=r.x-m.x,q=q.y-m.y,m=r.y-m.y,r=1/(l*m-u*q),d.set((m*g-q*p)*r,(m*v-q*t)*r,(m*k-q*h)*r),F.set((l*p-u*g)*r,(l*t-u*v)*r,(l*h-u*k)*r),x[e].add(d),x[w].add(d),x[f].add(d),z[e].add(F),z[w].add(F),z[f].add(F);F=["a","b","c","d"];a=0;for(b=this.faces.length;a<b;a++)for(f=this.faces[a],d=0;d<Math.min(f.vertexNormals.length,3);d++)C.copy(f.vertexNormals[d]),e=f[F[d]],w=x[e],y.copy(w),y.sub(C.multiplyScalar(C.dot(w))).normalize(),
A.crossVectors(f.vertexNormals[d],w),e=A.dot(z[e]),e=0>e?-1:1,f.vertexTangents[d]=new THREE.Vector4(y.x,y.y,y.z,e);this.hasTangents=!0},computeLineDistances:function(){for(var a=0,b=this.vertices,d=0,e=b.length;d<e;d++)0<d&&(a+=b[d].distanceTo(b[d-1])),this.lineDistances[d]=a},computeBoundingBox:function(){null===this.boundingBox&&(this.boundingBox=new THREE.Box3);this.boundingBox.setFromPoints(this.vertices)},computeBoundingSphere:function(){null===this.boundingSphere&&(this.boundingSphere=new THREE.Sphere);
this.boundingSphere.setFromPoints(this.vertices)},merge:function(a,b,d){if(!1===a instanceof THREE.Geometry)THREE.error("THREE.Geometry.merge(): geometry not an instance of THREE.Geometry.",a);else{var e,f=this.vertices.length,g=this.vertices,h=a.vertices,k=this.faces,l=a.faces,m=this.faceVertexUvs[0];a=a.faceVertexUvs[0];void 0===d&&(d=0);void 0!==b&&(e=(new THREE.Matrix3).getNormalMatrix(b));for(var q=0,r=h.length;q<r;q++){var p=h[q].clone();void 0!==b&&p.applyMatrix4(b);g.push(p)}q=0;for(r=l.length;q<
r;q++){var h=l[q],v,t=h.vertexNormals,u=h.vertexColors,p=new THREE.Face3(h.a+f,h.b+f,h.c+f);p.normal.copy(h.normal);void 0!==e&&p.normal.applyMatrix3(e).normalize();b=0;for(g=t.length;b<g;b++)v=t[b].clone(),void 0!==e&&v.applyMatrix3(e).normalize(),p.vertexNormals.push(v);p.color.copy(h.color);b=0;for(g=u.length;b<g;b++)v=u[b],p.vertexColors.push(v.clone());p.materialIndex=h.materialIndex+d;k.push(p)}q=0;for(r=a.length;q<r;q++)if(d=a[q],e=[],void 0!==d){b=0;for(g=d.length;b<g;b++)e.push(d[b].clone());
m.push(e)}}},mergeMesh:function(a){!1===a instanceof THREE.Mesh?THREE.error("THREE.Geometry.mergeMesh(): mesh not an instance of THREE.Mesh.",a):(a.matrixAutoUpdate&&a.updateMatrix(),this.merge(a.geometry,a.matrix))},mergeVertices:function(){var a={},b=[],d=[],e,f=Math.pow(10,4),g,h;g=0;for(h=this.vertices.length;g<h;g++)e=this.vertices[g],e=Math.round(e.x*f)+"_"+Math.round(e.y*f)+"_"+Math.round(e.z*f),void 0===a[e]?(a[e]=g,b.push(this.vertices[g]),d[g]=b.length-1):d[g]=d[a[e]];a=[];g=0;for(h=this.faces.length;g<
h;g++)for(f=this.faces[g],f.a=d[f.a],f.b=d[f.b],f.c=d[f.c],f=[f.a,f.b,f.c],e=0;3>e;e++)if(f[e]==f[(e+1)%3]){a.push(g);break}for(g=a.length-1;0<=g;g--)for(f=a[g],this.faces.splice(f,1),d=0,h=this.faceVertexUvs.length;d<h;d++)this.faceVertexUvs[d].splice(f,1);g=this.vertices.length-b.length;this.vertices=b;return g},toJSON:function(){function a(a,b,d){return d?a|1<<b:a&~(1<<b)}function b(a){var b=a.x.toString()+a.y.toString()+a.z.toString();if(void 0!==m[b])return m[b];m[b]=l.length/3;l.push(a.x,a.y,
a.z);return m[b]}function d(a){var b=a.r.toString()+a.g.toString()+a.b.toString();if(void 0!==r[b])return r[b];r[b]=q.length;q.push(a.getHex());return r[b]}function e(a){var b=a.x.toString()+a.y.toString();if(void 0!==v[b])return v[b];v[b]=p.length/2;p.push(a.x,a.y);return v[b]}var f={metadata:{version:4,type:"BufferGeometry",generator:"BufferGeometryExporter"},uuid:this.uuid,type:this.type};""!==this.name&&(f.name=this.name);if(void 0!==this.parameters){var g=this.parameters,h;for(h in g)void 0!==
g[h]&&(f[h]=g[h]);return f}g=[];for(h=0;h<this.vertices.length;h++){var k=this.vertices[h];g.push(k.x,k.y,k.z)}var k=[],l=[],m={},q=[],r={},p=[],v={};for(h=0;h<this.faces.length;h++){var t=this.faces[h],u=void 0!==this.faceVertexUvs[0][h],w=0<t.normal.length(),x=0<t.vertexNormals.length,z=1!==t.color.r||1!==t.color.g||1!==t.color.b,F=0<t.vertexColors.length,y=0,y=a(y,0,0),y=a(y,1,!1),y=a(y,2,!1),y=a(y,3,u),y=a(y,4,w),y=a(y,5,x),y=a(y,6,z),y=a(y,7,F);k.push(y);k.push(t.a,t.b,t.c);u&&(u=this.faceVertexUvs[0][h],
k.push(e(u[0]),e(u[1]),e(u[2])));w&&k.push(b(t.normal));x&&(w=t.vertexNormals,k.push(b(w[0]),b(w[1]),b(w[2])));z&&k.push(d(t.color));F&&(t=t.vertexColors,k.push(d(t[0]),d(t[1]),d(t[2])))}f.data={};f.data.vertices=g;f.data.normals=l;0<q.length&&(f.data.colors=q);0<p.length&&(f.data.uvs=[p]);f.data.faces=k;return f},clone:function(){for(var a=new THREE.Geometry,b=this.vertices,d=0,e=b.length;d<e;d++)a.vertices.push(b[d].clone());b=this.faces;d=0;for(e=b.length;d<e;d++)a.faces.push(b[d].clone());d=0;
for(e=this.faceVertexUvs.length;d<e;d++){b=this.faceVertexUvs[d];void 0===a.faceVertexUvs[d]&&(a.faceVertexUvs[d]=[]);for(var f=0,g=b.length;f<g;f++){for(var h=b[f],k=[],l=0,m=h.length;l<m;l++)k.push(h[l].clone());a.faceVertexUvs[d].push(k)}}return a},dispose:function(){this.dispatchEvent({type:"dispose"})}};THREE.EventDispatcher.prototype.apply(THREE.Geometry.prototype);THREE.GeometryIdCount=0;
THREE.Camera=function(){THREE.Object3D.call(this);this.type="Camera";this.matrixWorldInverse=new THREE.Matrix4;this.projectionMatrix=new THREE.Matrix4};THREE.Camera.prototype=Object.create(THREE.Object3D.prototype);THREE.Camera.prototype.constructor=THREE.Camera;THREE.Camera.prototype.getWorldDirection=function(){var a=new THREE.Quaternion;return function(b){b=b||new THREE.Vector3;this.getWorldQuaternion(a);return b.set(0,0,-1).applyQuaternion(a)}}();
THREE.Camera.prototype.lookAt=function(){var a=new THREE.Matrix4;return function(b){a.lookAt(this.position,b,this.up);this.quaternion.setFromRotationMatrix(a)}}();THREE.Camera.prototype.clone=function(a){void 0===a&&(a=new THREE.Camera);THREE.Object3D.prototype.clone.call(this,a);a.matrixWorldInverse.copy(this.matrixWorldInverse);a.projectionMatrix.copy(this.projectionMatrix);return a};
THREE.CubeCamera=function(a,b,d){THREE.Object3D.call(this);this.type="CubeCamera";var e=new THREE.PerspectiveCamera(90,1,a,b);e.up.set(0,-1,0);e.lookAt(new THREE.Vector3(1,0,0));this.add(e);var f=new THREE.PerspectiveCamera(90,1,a,b);f.up.set(0,-1,0);f.lookAt(new THREE.Vector3(-1,0,0));this.add(f);var g=new THREE.PerspectiveCamera(90,1,a,b);g.up.set(0,0,1);g.lookAt(new THREE.Vector3(0,1,0));this.add(g);var h=new THREE.PerspectiveCamera(90,1,a,b);h.up.set(0,0,-1);h.lookAt(new THREE.Vector3(0,-1,0));
this.add(h);var k=new THREE.PerspectiveCamera(90,1,a,b);k.up.set(0,-1,0);k.lookAt(new THREE.Vector3(0,0,1));this.add(k);var l=new THREE.PerspectiveCamera(90,1,a,b);l.up.set(0,-1,0);l.lookAt(new THREE.Vector3(0,0,-1));this.add(l);this.renderTarget=new THREE.WebGLRenderTargetCube(d,d,{format:THREE.RGBFormat,magFilter:THREE.LinearFilter,minFilter:THREE.LinearFilter});this.updateCubeMap=function(a,b){var d=this.renderTarget,p=d.generateMipmaps;d.generateMipmaps=!1;d.activeCubeFace=0;a.render(b,e,d);d.activeCubeFace=
1;a.render(b,f,d);d.activeCubeFace=2;a.render(b,g,d);d.activeCubeFace=3;a.render(b,h,d);d.activeCubeFace=4;a.render(b,k,d);d.generateMipmaps=p;d.activeCubeFace=5;a.render(b,l,d)}};THREE.CubeCamera.prototype=Object.create(THREE.Object3D.prototype);THREE.CubeCamera.prototype.constructor=THREE.CubeCamera;
THREE.OrthographicCamera=function(a,b,d,e,f,g){THREE.Camera.call(this);this.type="OrthographicCamera";this.zoom=1;this.left=a;this.right=b;this.top=d;this.bottom=e;this.near=void 0!==f?f:.1;this.far=void 0!==g?g:2E3;this.updateProjectionMatrix()};THREE.OrthographicCamera.prototype=Object.create(THREE.Camera.prototype);THREE.OrthographicCamera.prototype.constructor=THREE.OrthographicCamera;
THREE.OrthographicCamera.prototype.updateProjectionMatrix=function(){var a=(this.right-this.left)/(2*this.zoom),b=(this.top-this.bottom)/(2*this.zoom),d=(this.right+this.left)/2,e=(this.top+this.bottom)/2;this.projectionMatrix.makeOrthographic(d-a,d+a,e+b,e-b,this.near,this.far)};
THREE.OrthographicCamera.prototype.clone=function(){var a=new THREE.OrthographicCamera;THREE.Camera.prototype.clone.call(this,a);a.zoom=this.zoom;a.left=this.left;a.right=this.right;a.top=this.top;a.bottom=this.bottom;a.near=this.near;a.far=this.far;a.projectionMatrix.copy(this.projectionMatrix);return a};
THREE.PerspectiveCamera=function(a,b,d,e){THREE.Camera.call(this);this.type="PerspectiveCamera";this.zoom=1;this.fov=void 0!==a?a:50;this.aspect=void 0!==b?b:1;this.near=void 0!==d?d:.1;this.far=void 0!==e?e:2E3;this.updateProjectionMatrix()};THREE.PerspectiveCamera.prototype=Object.create(THREE.Camera.prototype);THREE.PerspectiveCamera.prototype.constructor=THREE.PerspectiveCamera;
THREE.PerspectiveCamera.prototype.setLens=function(a,b){void 0===b&&(b=24);this.fov=2*THREE.Math.radToDeg(Math.atan(b/(2*a)));this.updateProjectionMatrix()};THREE.PerspectiveCamera.prototype.setViewOffset=function(a,b,d,e,f,g){this.fullWidth=a;this.fullHeight=b;this.x=d;this.y=e;this.width=f;this.height=g;this.updateProjectionMatrix()};
THREE.PerspectiveCamera.prototype.updateProjectionMatrix=function(){var a=THREE.Math.radToDeg(2*Math.atan(Math.tan(.5*THREE.Math.degToRad(this.fov))/this.zoom));if(this.fullWidth){var b=this.fullWidth/this.fullHeight,a=Math.tan(THREE.Math.degToRad(.5*a))*this.near,d=-a,e=b*d,b=Math.abs(b*a-e),d=Math.abs(a-d);this.projectionMatrix.makeFrustum(e+this.x*b/this.fullWidth,e+(this.x+this.width)*b/this.fullWidth,a-(this.y+this.height)*d/this.fullHeight,a-this.y*d/this.fullHeight,this.near,this.far)}else this.projectionMatrix.makePerspective(a,
this.aspect,this.near,this.far)};THREE.PerspectiveCamera.prototype.clone=function(){var a=new THREE.PerspectiveCamera;THREE.Camera.prototype.clone.call(this,a);a.zoom=this.zoom;a.fov=this.fov;a.aspect=this.aspect;a.near=this.near;a.far=this.far;a.projectionMatrix.copy(this.projectionMatrix);return a};THREE.Light=function(a){THREE.Object3D.call(this);this.type="Light";this.color=new THREE.Color(a)};THREE.Light.prototype=Object.create(THREE.Object3D.prototype);THREE.Light.prototype.constructor=THREE.Light;
THREE.Light.prototype.clone=function(a){void 0===a&&(a=new THREE.Light);THREE.Object3D.prototype.clone.call(this,a);a.color.copy(this.color);return a};THREE.AmbientLight=function(a){THREE.Light.call(this,a);this.type="AmbientLight"};THREE.AmbientLight.prototype=Object.create(THREE.Light.prototype);THREE.AmbientLight.prototype.constructor=THREE.AmbientLight;THREE.AmbientLight.prototype.clone=function(){var a=new THREE.AmbientLight;THREE.Light.prototype.clone.call(this,a);return a};
THREE.AreaLight=function(a,b){THREE.Light.call(this,a);this.type="AreaLight";this.normal=new THREE.Vector3(0,-1,0);this.right=new THREE.Vector3(1,0,0);this.intensity=void 0!==b?b:1;this.height=this.width=1;this.constantAttenuation=1.5;this.linearAttenuation=.5;this.quadraticAttenuation=.1};THREE.AreaLight.prototype=Object.create(THREE.Light.prototype);THREE.AreaLight.prototype.constructor=THREE.AreaLight;
THREE.DirectionalLight=function(a,b){THREE.Light.call(this,a);this.type="DirectionalLight";this.position.set(0,1,0);this.target=new THREE.Object3D;this.intensity=void 0!==b?b:1;this.onlyShadow=this.castShadow=!1;this.shadowCameraNear=50;this.shadowCameraFar=5E3;this.shadowCameraLeft=-500;this.shadowCameraTop=this.shadowCameraRight=500;this.shadowCameraBottom=-500;this.shadowCameraVisible=!1;this.shadowBias=0;this.shadowDarkness=.5;this.shadowMapHeight=this.shadowMapWidth=512;this.shadowCascade=!1;
this.shadowCascadeOffset=new THREE.Vector3(0,0,-1E3);this.shadowCascadeCount=2;this.shadowCascadeBias=[0,0,0];this.shadowCascadeWidth=[512,512,512];this.shadowCascadeHeight=[512,512,512];this.shadowCascadeNearZ=[-1,.99,.998];this.shadowCascadeFarZ=[.99,.998,1];this.shadowCascadeArray=[];this.shadowMatrix=this.shadowCamera=this.shadowMapSize=this.shadowMap=null};THREE.DirectionalLight.prototype=Object.create(THREE.Light.prototype);THREE.DirectionalLight.prototype.constructor=THREE.DirectionalLight;
THREE.DirectionalLight.prototype.clone=function(){var a=new THREE.DirectionalLight;THREE.Light.prototype.clone.call(this,a);a.target=this.target.clone();a.intensity=this.intensity;a.castShadow=this.castShadow;a.onlyShadow=this.onlyShadow;a.shadowCameraNear=this.shadowCameraNear;a.shadowCameraFar=this.shadowCameraFar;a.shadowCameraLeft=this.shadowCameraLeft;a.shadowCameraRight=this.shadowCameraRight;a.shadowCameraTop=this.shadowCameraTop;a.shadowCameraBottom=this.shadowCameraBottom;a.shadowCameraVisible=
this.shadowCameraVisible;a.shadowBias=this.shadowBias;a.shadowDarkness=this.shadowDarkness;a.shadowMapWidth=this.shadowMapWidth;a.shadowMapHeight=this.shadowMapHeight;a.shadowCascade=this.shadowCascade;a.shadowCascadeOffset.copy(this.shadowCascadeOffset);a.shadowCascadeCount=this.shadowCascadeCount;a.shadowCascadeBias=this.shadowCascadeBias.slice(0);a.shadowCascadeWidth=this.shadowCascadeWidth.slice(0);a.shadowCascadeHeight=this.shadowCascadeHeight.slice(0);a.shadowCascadeNearZ=this.shadowCascadeNearZ.slice(0);
a.shadowCascadeFarZ=this.shadowCascadeFarZ.slice(0);return a};THREE.HemisphereLight=function(a,b,d){THREE.Light.call(this,a);this.type="HemisphereLight";this.position.set(0,100,0);this.groundColor=new THREE.Color(b);this.intensity=void 0!==d?d:1};THREE.HemisphereLight.prototype=Object.create(THREE.Light.prototype);THREE.HemisphereLight.prototype.constructor=THREE.HemisphereLight;
THREE.HemisphereLight.prototype.clone=function(){var a=new THREE.HemisphereLight;THREE.Light.prototype.clone.call(this,a);a.groundColor.copy(this.groundColor);a.intensity=this.intensity;return a};THREE.PointLight=function(a,b,d,e){THREE.Light.call(this,a);this.type="PointLight";this.intensity=void 0!==b?b:1;this.distance=void 0!==d?d:0;this.decay=void 0!==e?e:1};THREE.PointLight.prototype=Object.create(THREE.Light.prototype);THREE.PointLight.prototype.constructor=THREE.PointLight;
THREE.PointLight.prototype.clone=function(){var a=new THREE.PointLight;THREE.Light.prototype.clone.call(this,a);a.intensity=this.intensity;a.distance=this.distance;a.decay=this.decay;return a};
THREE.SpotLight=function(a,b,d,e,f,g){THREE.Light.call(this,a);this.type="SpotLight";this.position.set(0,1,0);this.target=new THREE.Object3D;this.intensity=void 0!==b?b:1;this.distance=void 0!==d?d:0;this.angle=void 0!==e?e:Math.PI/3;this.exponent=void 0!==f?f:10;this.decay=void 0!==g?g:1;this.onlyShadow=this.castShadow=!1;this.shadowCameraNear=50;this.shadowCameraFar=5E3;this.shadowCameraFov=50;this.shadowCameraVisible=!1;this.shadowBias=0;this.shadowDarkness=.5;this.shadowMapHeight=this.shadowMapWidth=
512;this.shadowMatrix=this.shadowCamera=this.shadowMapSize=this.shadowMap=null};THREE.SpotLight.prototype=Object.create(THREE.Light.prototype);THREE.SpotLight.prototype.constructor=THREE.SpotLight;
THREE.SpotLight.prototype.clone=function(){var a=new THREE.SpotLight;THREE.Light.prototype.clone.call(this,a);a.target=this.target.clone();a.intensity=this.intensity;a.distance=this.distance;a.angle=this.angle;a.exponent=this.exponent;a.decay=this.decay;a.castShadow=this.castShadow;a.onlyShadow=this.onlyShadow;a.shadowCameraNear=this.shadowCameraNear;a.shadowCameraFar=this.shadowCameraFar;a.shadowCameraFov=this.shadowCameraFov;a.shadowCameraVisible=this.shadowCameraVisible;a.shadowBias=this.shadowBias;
a.shadowDarkness=this.shadowDarkness;a.shadowMapWidth=this.shadowMapWidth;a.shadowMapHeight=this.shadowMapHeight;return a};THREE.Cache={files:{},add:function(a,b){this.files[a]=b},get:function(a){return this.files[a]},remove:function(a){delete this.files[a]},clear:function(){this.files={}}};
THREE.Loader=function(a){this.statusDomElement=(this.showStatus=a)?THREE.Loader.prototype.addStatusElement():null;this.imageLoader=new THREE.ImageLoader;this.onLoadStart=function(){};this.onLoadProgress=function(){};this.onLoadComplete=function(){}};
THREE.Loader.prototype={constructor:THREE.Loader,crossOrigin:void 0,addStatusElement:function(){var a=document.createElement("div");a.style.position="absolute";a.style.right="0px";a.style.top="0px";a.style.fontSize="0.8em";a.style.textAlign="left";a.style.background="rgba(0,0,0,0.25)";a.style.color="#fff";a.style.width="120px";a.style.padding="0.5em 0.5em 0.5em 0.5em";a.style.zIndex=1E3;a.innerHTML="Loading ...";return a},updateProgress:function(a){var b="Loaded ",b=a.total?b+((100*a.loaded/a.total).toFixed(0)+
"%"):b+((a.loaded/1024).toFixed(2)+" KB");this.statusDomElement.innerHTML=b},extractUrlBase:function(a){a=a.split("/");if(1===a.length)return"./";a.pop();return a.join("/")+"/"},initMaterials:function(a,b){for(var d=[],e=0;e<a.length;++e)d[e]=this.createMaterial(a[e],b);return d},needsTangents:function(a){for(var b=0,d=a.length;b<d;b++)if(a[b]instanceof THREE.ShaderMaterial)return!0;return!1},createMaterial:function(a,b){function d(a){a=Math.log(a)/Math.LN2;return Math.pow(2,Math.round(a))}function e(a,
e,f,h,k,l,u){var w=b+f,x,z=THREE.Loader.Handlers.get(w);null!==z?x=z.load(w):(x=new THREE.Texture,z=g.imageLoader,z.crossOrigin=g.crossOrigin,z.load(w,function(a){if(!1===THREE.Math.isPowerOfTwo(a.width)||!1===THREE.Math.isPowerOfTwo(a.height)){var b=d(a.width),e=d(a.height),f=document.createElement("canvas");f.width=b;f.height=e;f.getContext("2d").drawImage(a,0,0,b,e);x.image=f}else x.image=a;x.needsUpdate=!0}));x.sourceFile=f;h&&(x.repeat.set(h[0],h[1]),1!==h[0]&&(x.wrapS=THREE.RepeatWrapping),
1!==h[1]&&(x.wrapT=THREE.RepeatWrapping));k&&x.offset.set(k[0],k[1]);l&&(f={repeat:THREE.RepeatWrapping,mirror:THREE.MirroredRepeatWrapping},void 0!==f[l[0]]&&(x.wrapS=f[l[0]]),void 0!==f[l[1]]&&(x.wrapT=f[l[1]]));u&&(x.anisotropy=u);a[e]=x}function f(a){return(255*a[0]<<16)+(255*a[1]<<8)+255*a[2]}var g=this,h="MeshLambertMaterial",k={color:15658734,opacity:1,map:null,lightMap:null,normalMap:null,bumpMap:null,wireframe:!1};if(a.shading){var l=a.shading.toLowerCase();"phong"===l?h="MeshPhongMaterial":
"basic"===l&&(h="MeshBasicMaterial")}void 0!==a.blending&&void 0!==THREE[a.blending]&&(k.blending=THREE[a.blending]);void 0!==a.transparent&&(k.transparent=a.transparent);void 0!==a.opacity&&1>a.opacity&&(k.transparent=!0);void 0!==a.depthTest&&(k.depthTest=a.depthTest);void 0!==a.depthWrite&&(k.depthWrite=a.depthWrite);void 0!==a.visible&&(k.visible=a.visible);void 0!==a.flipSided&&(k.side=THREE.BackSide);void 0!==a.doubleSided&&(k.side=THREE.DoubleSide);void 0!==a.wireframe&&(k.wireframe=a.wireframe);
void 0!==a.vertexColors&&("face"===a.vertexColors?k.vertexColors=THREE.FaceColors:a.vertexColors&&(k.vertexColors=THREE.VertexColors));a.colorDiffuse?k.color=f(a.colorDiffuse):a.DbgColor&&(k.color=a.DbgColor);a.colorSpecular&&(k.specular=f(a.colorSpecular));a.colorEmissive&&(k.emissive=f(a.colorEmissive));void 0!==a.transparency&&(console.warn("THREE.Loader: transparency has been renamed to opacity"),a.opacity=a.transparency);void 0!==a.opacity&&(k.opacity=a.opacity);a.specularCoef&&(k.shininess=
a.specularCoef);a.mapDiffuse&&b&&e(k,"map",a.mapDiffuse,a.mapDiffuseRepeat,a.mapDiffuseOffset,a.mapDiffuseWrap,a.mapDiffuseAnisotropy);a.mapLight&&b&&e(k,"lightMap",a.mapLight,a.mapLightRepeat,a.mapLightOffset,a.mapLightWrap,a.mapLightAnisotropy);a.mapBump&&b&&e(k,"bumpMap",a.mapBump,a.mapBumpRepeat,a.mapBumpOffset,a.mapBumpWrap,a.mapBumpAnisotropy);a.mapNormal&&b&&e(k,"normalMap",a.mapNormal,a.mapNormalRepeat,a.mapNormalOffset,a.mapNormalWrap,a.mapNormalAnisotropy);a.mapSpecular&&b&&e(k,"specularMap",
a.mapSpecular,a.mapSpecularRepeat,a.mapSpecularOffset,a.mapSpecularWrap,a.mapSpecularAnisotropy);a.mapAlpha&&b&&e(k,"alphaMap",a.mapAlpha,a.mapAlphaRepeat,a.mapAlphaOffset,a.mapAlphaWrap,a.mapAlphaAnisotropy);a.mapBumpScale&&(k.bumpScale=a.mapBumpScale);a.mapNormalFactor&&(k.normalScale=new THREE.Vector2(a.mapNormalFactor,a.mapNormalFactor));h=new THREE[h](k);void 0!==a.DbgName&&(h.name=a.DbgName);return h}};
THREE.Loader.Handlers={handlers:[],add:function(a,b){this.handlers.push(a,b)},get:function(a){for(var b=0,d=this.handlers.length;b<d;b+=2){var e=this.handlers[b+1];if(this.handlers[b].test(a))return e}return null}};THREE.XHRLoader=function(a){this.manager=void 0!==a?a:THREE.DefaultLoadingManager};
THREE.XHRLoader.prototype={constructor:THREE.XHRLoader,load:function(a,b,d,e){var f=this,g=THREE.Cache.get(a);void 0!==g?b&&b(g):(g=new XMLHttpRequest,g.open("GET",a,!0),g.addEventListener("load",function(d){THREE.Cache.add(a,this.response);b&&b(this.response);f.manager.itemEnd(a)},!1),void 0!==d&&g.addEventListener("progress",function(a){d(a)},!1),void 0!==e&&g.addEventListener("error",function(a){e(a)},!1),void 0!==this.crossOrigin&&(g.crossOrigin=this.crossOrigin),void 0!==this.responseType&&(g.responseType=
this.responseType),g.send(null),f.manager.itemStart(a))},setResponseType:function(a){this.responseType=a},setCrossOrigin:function(a){this.crossOrigin=a}};THREE.ImageLoader=function(a){this.manager=void 0!==a?a:THREE.DefaultLoadingManager};
THREE.ImageLoader.prototype={constructor:THREE.ImageLoader,load:function(a,b,d,e){var f=this,g=THREE.Cache.get(a);if(void 0!==g)b(g);else return g=document.createElement("img"),g.addEventListener("load",function(d){THREE.Cache.add(a,this);b&&b(this);f.manager.itemEnd(a)},!1),void 0!==d&&g.addEventListener("progress",function(a){d(a)},!1),void 0!==e&&g.addEventListener("error",function(a){e(a)},!1),void 0!==this.crossOrigin&&(g.crossOrigin=this.crossOrigin),g.src=a,f.manager.itemStart(a),g},setCrossOrigin:function(a){this.crossOrigin=
a}};THREE.JSONLoader=function(a){THREE.Loader.call(this,a);this.withCredentials=!1};THREE.JSONLoader.prototype=Object.create(THREE.Loader.prototype);THREE.JSONLoader.prototype.constructor=THREE.JSONLoader;THREE.JSONLoader.prototype.load=function(a,b,d){d=d&&"string"===typeof d?d:this.extractUrlBase(a);this.onLoadStart();this.loadAjaxJSON(this,a,b,d)};
THREE.JSONLoader.prototype.loadAjaxJSON=function(a,b,d,e,f){var g=new XMLHttpRequest,h=0;g.onreadystatechange=function(){if(g.readyState===g.DONE)if(200===g.status||0===g.status){if(g.responseText){var k=JSON.parse(g.responseText),l=k.metadata;if(void 0!==l){if("object"===l.type){THREE.error("THREE.JSONLoader: "+b+" should be loaded with THREE.ObjectLoader instead.");return}if("scene"===l.type){THREE.error("THREE.JSONLoader: "+b+" seems to be a Scene. Use THREE.SceneLoader instead.");return}}k=a.parse(k,
e);d(k.geometry,k.materials)}else THREE.error("THREE.JSONLoader: "+b+" seems to be unreachable or the file is empty.");a.onLoadComplete()}else THREE.error("THREE.JSONLoader: Couldn't load "+b+" ("+g.status+")");else g.readyState===g.LOADING?f&&(0===h&&(h=g.getResponseHeader("Content-Length")),f({total:h,loaded:g.responseText.length})):g.readyState===g.HEADERS_RECEIVED&&void 0!==f&&(h=g.getResponseHeader("Content-Length"))};g.open("GET",b,!0);g.withCredentials=this.withCredentials;g.send(null)};
THREE.JSONLoader.prototype.parse=function(a,b){var d=new THREE.Geometry,e=void 0!==a.scale?1/a.scale:1;(function(b){var e,h,k,l,m,q,r,p,v,t,u,w,x,z=a.faces;q=a.vertices;var F=a.normals,y=a.colors,A=0;if(void 0!==a.uvs){for(e=0;e<a.uvs.length;e++)a.uvs[e].length&&A++;for(e=0;e<A;e++)d.faceVertexUvs[e]=[]}l=0;for(m=q.length;l<m;)e=new THREE.Vector3,e.x=q[l++]*b,e.y=q[l++]*b,e.z=q[l++]*b,d.vertices.push(e);l=0;for(m=z.length;l<m;)if(b=z[l++],v=b&1,k=b&2,e=b&8,r=b&16,t=b&32,q=b&64,b&=128,v){v=new THREE.Face3;
v.a=z[l];v.b=z[l+1];v.c=z[l+3];u=new THREE.Face3;u.a=z[l+1];u.b=z[l+2];u.c=z[l+3];l+=4;k&&(k=z[l++],v.materialIndex=k,u.materialIndex=k);k=d.faces.length;if(e)for(e=0;e<A;e++)for(w=a.uvs[e],d.faceVertexUvs[e][k]=[],d.faceVertexUvs[e][k+1]=[],h=0;4>h;h++)p=z[l++],x=w[2*p],p=w[2*p+1],x=new THREE.Vector2(x,p),2!==h&&d.faceVertexUvs[e][k].push(x),0!==h&&d.faceVertexUvs[e][k+1].push(x);r&&(r=3*z[l++],v.normal.set(F[r++],F[r++],F[r]),u.normal.copy(v.normal));if(t)for(e=0;4>e;e++)r=3*z[l++],t=new THREE.Vector3(F[r++],
F[r++],F[r]),2!==e&&v.vertexNormals.push(t),0!==e&&u.vertexNormals.push(t);q&&(q=z[l++],q=y[q],v.color.setHex(q),u.color.setHex(q));if(b)for(e=0;4>e;e++)q=z[l++],q=y[q],2!==e&&v.vertexColors.push(new THREE.Color(q)),0!==e&&u.vertexColors.push(new THREE.Color(q));d.faces.push(v);d.faces.push(u)}else{v=new THREE.Face3;v.a=z[l++];v.b=z[l++];v.c=z[l++];k&&(k=z[l++],v.materialIndex=k);k=d.faces.length;if(e)for(e=0;e<A;e++)for(w=a.uvs[e],d.faceVertexUvs[e][k]=[],h=0;3>h;h++)p=z[l++],x=w[2*p],p=w[2*p+1],
x=new THREE.Vector2(x,p),d.faceVertexUvs[e][k].push(x);r&&(r=3*z[l++],v.normal.set(F[r++],F[r++],F[r]));if(t)for(e=0;3>e;e++)r=3*z[l++],t=new THREE.Vector3(F[r++],F[r++],F[r]),v.vertexNormals.push(t);q&&(q=z[l++],v.color.setHex(y[q]));if(b)for(e=0;3>e;e++)q=z[l++],v.vertexColors.push(new THREE.Color(y[q]));d.faces.push(v)}})(e);(function(){var b=void 0!==a.influencesPerVertex?a.influencesPerVertex:2;if(a.skinWeights)for(var e=0,h=a.skinWeights.length;e<h;e+=b)d.skinWeights.push(new THREE.Vector4(a.skinWeights[e],
1<b?a.skinWeights[e+1]:0,2<b?a.skinWeights[e+2]:0,3<b?a.skinWeights[e+3]:0));if(a.skinIndices)for(e=0,h=a.skinIndices.length;e<h;e+=b)d.skinIndices.push(new THREE.Vector4(a.skinIndices[e],1<b?a.skinIndices[e+1]:0,2<b?a.skinIndices[e+2]:0,3<b?a.skinIndices[e+3]:0));d.bones=a.bones;d.bones&&0<d.bones.length&&(d.skinWeights.length!==d.skinIndices.length||d.skinIndices.length!==d.vertices.length)&&THREE.warn("THREE.JSONLoader: When skinning, number of vertices ("+d.vertices.length+"), skinIndices ("+
d.skinIndices.length+"), and skinWeights ("+d.skinWeights.length+") should match.");d.animation=a.animation;d.animations=a.animations})();(function(b){if(void 0!==a.morphTargets){var e,h,k,l,m,q;e=0;for(h=a.morphTargets.length;e<h;e++)for(d.morphTargets[e]={},d.morphTargets[e].name=a.morphTargets[e].name,d.morphTargets[e].vertices=[],m=d.morphTargets[e].vertices,q=a.morphTargets[e].vertices,k=0,l=q.length;k<l;k+=3){var r=new THREE.Vector3;r.x=q[k]*b;r.y=q[k+1]*b;r.z=q[k+2]*b;m.push(r)}}if(void 0!==
a.morphColors)for(e=0,h=a.morphColors.length;e<h;e++)for(d.morphColors[e]={},d.morphColors[e].name=a.morphColors[e].name,d.morphColors[e].colors=[],l=d.morphColors[e].colors,m=a.morphColors[e].colors,b=0,k=m.length;b<k;b+=3)q=new THREE.Color(16755200),q.setRGB(m[b],m[b+1],m[b+2]),l.push(q)})(e);d.computeFaceNormals();d.computeBoundingSphere();if(void 0===a.materials||0===a.materials.length)return{geometry:d};e=this.initMaterials(a.materials,b);this.needsTangents(e)&&d.computeTangents();return{geometry:d,
materials:e}};THREE.LoadingManager=function(a,b,d){var e=this,f=0,g=0;this.onLoad=a;this.onProgress=b;this.onError=d;this.itemStart=function(a){g++};this.itemEnd=function(a){f++;if(void 0!==e.onProgress)e.onProgress(a,f,g);if(f===g&&void 0!==e.onLoad)e.onLoad()}};THREE.DefaultLoadingManager=new THREE.LoadingManager;THREE.BufferGeometryLoader=function(a){this.manager=void 0!==a?a:THREE.DefaultLoadingManager};
THREE.BufferGeometryLoader.prototype={constructor:THREE.BufferGeometryLoader,load:function(a,b,d,e){var f=this,g=new THREE.XHRLoader(f.manager);g.setCrossOrigin(this.crossOrigin);g.load(a,function(a){b(f.parse(JSON.parse(a)))},d,e)},setCrossOrigin:function(a){this.crossOrigin=a},parse:function(a){var b=new THREE.BufferGeometry,d=a.data.attributes,e;for(e in d){var f=d[e],g=new self[f.type](f.array);b.addAttribute(e,new THREE.BufferAttribute(g,f.itemSize))}d=a.data.offsets;void 0!==d&&(b.offsets=JSON.parse(JSON.stringify(d)));
a=a.data.boundingSphere;void 0!==a&&(d=new THREE.Vector3,void 0!==a.center&&d.fromArray(a.center),b.boundingSphere=new THREE.Sphere(d,a.radius));return b}};THREE.MaterialLoader=function(a){this.manager=void 0!==a?a:THREE.DefaultLoadingManager};
THREE.MaterialLoader.prototype={constructor:THREE.MaterialLoader,load:function(a,b,d,e){var f=this,g=new THREE.XHRLoader(f.manager);g.setCrossOrigin(this.crossOrigin);g.load(a,function(a){b(f.parse(JSON.parse(a)))},d,e)},setCrossOrigin:function(a){this.crossOrigin=a},parse:function(a){var b=new THREE[a.type];void 0!==a.color&&b.color.setHex(a.color);void 0!==a.emissive&&b.emissive.setHex(a.emissive);void 0!==a.specular&&b.specular.setHex(a.specular);void 0!==a.shininess&&(b.shininess=a.shininess);
void 0!==a.uniforms&&(b.uniforms=a.uniforms);void 0!==a.vertexShader&&(b.vertexShader=a.vertexShader);void 0!==a.fragmentShader&&(b.fragmentShader=a.fragmentShader);void 0!==a.vertexColors&&(b.vertexColors=a.vertexColors);void 0!==a.shading&&(b.shading=a.shading);void 0!==a.blending&&(b.blending=a.blending);void 0!==a.side&&(b.side=a.side);void 0!==a.opacity&&(b.opacity=a.opacity);void 0!==a.transparent&&(b.transparent=a.transparent);void 0!==a.wireframe&&(b.wireframe=a.wireframe);void 0!==a.size&&
(b.size=a.size);void 0!==a.sizeAttenuation&&(b.sizeAttenuation=a.sizeAttenuation);if(void 0!==a.materials)for(var d=0,e=a.materials.length;d<e;d++)b.materials.push(this.parse(a.materials[d]));return b}};THREE.ObjectLoader=function(a){this.manager=void 0!==a?a:THREE.DefaultLoadingManager;this.texturePath=""};
THREE.ObjectLoader.prototype={constructor:THREE.ObjectLoader,load:function(a,b,d,e){""===this.texturePath&&(this.texturePath=a.substring(0,a.lastIndexOf("/")+1));var f=this,g=new THREE.XHRLoader(f.manager);g.setCrossOrigin(this.crossOrigin);g.load(a,function(a){f.parse(JSON.parse(a),b)},d,e)},setTexturePath:function(a){this.texturePath=a},setCrossOrigin:function(a){this.crossOrigin=a},parse:function(a,b){var d=this.parseGeometries(a.geometries),e=this.parseImages(a.images,function(){void 0!==b&&b(f)}),
e=this.parseTextures(a.textures,e),e=this.parseMaterials(a.materials,e),f=this.parseObject(a.object,d,e);void 0!==a.images&&0!==a.images.length||void 0===b||b(f);return f},parseGeometries:function(a){var b={};if(void 0!==a)for(var d=new THREE.JSONLoader,e=new THREE.BufferGeometryLoader,f=0,g=a.length;f<g;f++){var h,k=a[f];switch(k.type){case "PlaneGeometry":case "PlaneBufferGeometry":h=new THREE[k.type](k.width,k.height,k.widthSegments,k.heightSegments);break;case "BoxGeometry":case "CubeGeometry":h=
new THREE.BoxGeometry(k.width,k.height,k.depth,k.widthSegments,k.heightSegments,k.depthSegments);break;case "CircleGeometry":h=new THREE.CircleGeometry(k.radius,k.segments);break;case "CylinderGeometry":h=new THREE.CylinderGeometry(k.radiusTop,k.radiusBottom,k.height,k.radialSegments,k.heightSegments,k.openEnded);break;case "SphereGeometry":h=new THREE.SphereGeometry(k.radius,k.widthSegments,k.heightSegments,k.phiStart,k.phiLength,k.thetaStart,k.thetaLength);break;case "IcosahedronGeometry":h=new THREE.IcosahedronGeometry(k.radius,
k.detail);break;case "TorusGeometry":h=new THREE.TorusGeometry(k.radius,k.tube,k.radialSegments,k.tubularSegments,k.arc);break;case "TorusKnotGeometry":h=new THREE.TorusKnotGeometry(k.radius,k.tube,k.radialSegments,k.tubularSegments,k.p,k.q,k.heightScale);break;case "BufferGeometry":h=e.parse(k);break;case "Geometry":h=d.parse(k.data).geometry}h.uuid=k.uuid;void 0!==k.name&&(h.name=k.name);b[k.uuid]=h}return b},parseMaterials:function(a,b){var d={};if(void 0!==a)for(var e=function(a){void 0===b[a]&&
THREE.warn("THREE.ObjectLoader: Undefined texture",a);return b[a]},f=new THREE.MaterialLoader,g=0,h=a.length;g<h;g++){var k=a[g],l=f.parse(k);l.uuid=k.uuid;void 0!==k.name&&(l.name=k.name);void 0!==k.map&&(l.map=e(k.map));void 0!==k.bumpMap&&(l.bumpMap=e(k.bumpMap),k.bumpScale&&(l.bumpScale=new THREE.Vector2(k.bumpScale,k.bumpScale)));void 0!==k.alphaMap&&(l.alphaMap=e(k.alphaMap));void 0!==k.envMap&&(l.envMap=e(k.envMap));void 0!==k.normalMap&&(l.normalMap=e(k.normalMap),k.normalScale&&(l.normalScale=
new THREE.Vector2(k.normalScale,k.normalScale)));void 0!==k.lightMap&&(l.lightMap=e(k.lightMap));void 0!==k.specularMap&&(l.specularMap=e(k.specularMap));d[k.uuid]=l}return d},parseImages:function(a,b){var d=this,e={};if(void 0!==a&&0<a.length){var f=new THREE.LoadingManager(b),g=new THREE.ImageLoader(f);g.setCrossOrigin(this.crossOrigin);for(var f=function(a){d.manager.itemStart(a);return g.load(a,function(){d.manager.itemEnd(a)})},h=0,k=a.length;h<k;h++){var l=a[h],m=/^(\/\/)|([a-z]+:(\/\/)?)/i.test(l.url)?
l.url:d.texturePath+l.url;e[l.uuid]=f(m)}}return e},parseTextures:function(a,b){var d={};if(void 0!==a)for(var e=0,f=a.length;e<f;e++){var g=a[e];void 0===g.image&&THREE.warn('THREE.ObjectLoader: No "image" speficied for',g.uuid);void 0===b[g.image]&&THREE.warn("THREE.ObjectLoader: Undefined image",g.image);var h=new THREE.Texture(b[g.image]);h.needsUpdate=!0;h.uuid=g.uuid;void 0!==g.name&&(h.name=g.name);void 0!==g.repeat&&(h.repeat=new THREE.Vector2(g.repeat[0],g.repeat[1]));void 0!==g.minFilter&&
(h.minFilter=THREE[g.minFilter]);void 0!==g.magFilter&&(h.magFilter=THREE[g.magFilter]);void 0!==g.anisotropy&&(h.anisotropy=g.anisotropy);g.wrap instanceof Array&&(h.wrapS=THREE[g.wrap[0]],h.wrapT=THREE[g.wrap[1]]);d[g.uuid]=h}return d},parseObject:function(){var a=new THREE.Matrix4;return function(b,d,e){var f;f=function(a){void 0===d[a]&&THREE.warn("THREE.ObjectLoader: Undefined geometry",a);return d[a]};var g=function(a){void 0===e[a]&&THREE.warn("THREE.ObjectLoader: Undefined material",a);return e[a]};
switch(b.type){case "Scene":f=new THREE.Scene;break;case "PerspectiveCamera":f=new THREE.PerspectiveCamera(b.fov,b.aspect,b.near,b.far);break;case "OrthographicCamera":f=new THREE.OrthographicCamera(b.left,b.right,b.top,b.bottom,b.near,b.far);break;case "AmbientLight":f=new THREE.AmbientLight(b.color);break;case "DirectionalLight":f=new THREE.DirectionalLight(b.color,b.intensity);break;case "PointLight":f=new THREE.PointLight(b.color,b.intensity,b.distance,b.decay);break;case "SpotLight":f=new THREE.SpotLight(b.color,
b.intensity,b.distance,b.angle,b.exponent,b.decay);break;case "HemisphereLight":f=new THREE.HemisphereLight(b.color,b.groundColor,b.intensity);break;case "Mesh":f=new THREE.Mesh(f(b.geometry),g(b.material));break;case "Line":f=new THREE.Line(f(b.geometry),g(b.material),b.mode);break;case "PointCloud":f=new THREE.PointCloud(f(b.geometry),g(b.material));break;case "Sprite":f=new THREE.Sprite(g(b.material));break;case "Group":f=new THREE.Group;break;default:f=new THREE.Object3D}f.uuid=b.uuid;void 0!==
b.name&&(f.name=b.name);void 0!==b.matrix?(a.fromArray(b.matrix),a.decompose(f.position,f.quaternion,f.scale)):(void 0!==b.position&&f.position.fromArray(b.position),void 0!==b.rotation&&f.rotation.fromArray(b.rotation),void 0!==b.scale&&f.scale.fromArray(b.scale));void 0!==b.visible&&(f.visible=b.visible);void 0!==b.userData&&(f.userData=b.userData);if(void 0!==b.children)for(var h in b.children)f.add(this.parseObject(b.children[h],d,e));return f}}()};
THREE.TextureLoader=function(a){this.manager=void 0!==a?a:THREE.DefaultLoadingManager};THREE.TextureLoader.prototype={constructor:THREE.TextureLoader,load:function(a,b,d,e){var f=new THREE.ImageLoader(this.manager);f.setCrossOrigin(this.crossOrigin);f.load(a,function(a){a=new THREE.Texture(a);a.needsUpdate=!0;void 0!==b&&b(a)},d,e)},setCrossOrigin:function(a){this.crossOrigin=a}};THREE.DataTextureLoader=THREE.BinaryTextureLoader=function(){this._parser=null};
THREE.BinaryTextureLoader.prototype={constructor:THREE.BinaryTextureLoader,load:function(a,b,d,e){var f=this,g=new THREE.DataTexture,h=new THREE.XHRLoader;h.setResponseType("arraybuffer");h.load(a,function(a){if(a=f._parser(a))void 0!==a.image?g.image=a.image:void 0!==a.data&&(g.image.width=a.width,g.image.height=a.height,g.image.data=a.data),g.wrapS=void 0!==a.wrapS?a.wrapS:THREE.ClampToEdgeWrapping,g.wrapT=void 0!==a.wrapT?a.wrapT:THREE.ClampToEdgeWrapping,g.magFilter=void 0!==a.magFilter?a.magFilter:
THREE.LinearFilter,g.minFilter=void 0!==a.minFilter?a.minFilter:THREE.LinearMipMapLinearFilter,g.anisotropy=void 0!==a.anisotropy?a.anisotropy:1,void 0!==a.format&&(g.format=a.format),void 0!==a.type&&(g.type=a.type),void 0!==a.mipmaps&&(g.mipmaps=a.mipmaps),1===a.mipmapCount&&(g.minFilter=THREE.LinearFilter),g.needsUpdate=!0,b&&b(g,a)},d,e);return g}};THREE.CompressedTextureLoader=function(){this._parser=null};
THREE.CompressedTextureLoader.prototype={constructor:THREE.CompressedTextureLoader,load:function(a,b,d){var e=this,f=[],g=new THREE.CompressedTexture;g.image=f;var h=new THREE.XHRLoader;h.setResponseType("arraybuffer");if(a instanceof Array){var k=0;d=function(d){h.load(a[d],function(a){a=e._parser(a,!0);f[d]={width:a.width,height:a.height,format:a.format,mipmaps:a.mipmaps};k+=1;6===k&&(1==a.mipmapCount&&(g.minFilter=THREE.LinearFilter),g.format=a.format,g.needsUpdate=!0,b&&b(g))})};for(var l=0,m=
a.length;l<m;++l)d(l)}else h.load(a,function(a){a=e._parser(a,!0);if(a.isCubemap)for(var d=a.mipmaps.length/a.mipmapCount,h=0;h<d;h++){f[h]={mipmaps:[]};for(var k=0;k<a.mipmapCount;k++)f[h].mipmaps.push(a.mipmaps[h*a.mipmapCount+k]),f[h].format=a.format,f[h].width=a.width,f[h].height=a.height}else g.image.width=a.width,g.image.height=a.height,g.mipmaps=a.mipmaps;1===a.mipmapCount&&(g.minFilter=THREE.LinearFilter);g.format=a.format;g.needsUpdate=!0;b&&b(g)});return g}};
THREE.Material=function(){Object.defineProperty(this,"id",{value:THREE.MaterialIdCount++});this.uuid=THREE.Math.generateUUID();this.name="";this.type="Material";this.side=THREE.FrontSide;this.opacity=1;this.transparent=!1;this.blending=THREE.NormalBlending;this.blendSrc=THREE.SrcAlphaFactor;this.blendDst=THREE.OneMinusSrcAlphaFactor;this.blendEquation=THREE.AddEquation;this.blendEquationAlpha=this.blendDstAlpha=this.blendSrcAlpha=null;this.colorWrite=this.depthWrite=this.depthTest=!0;this.polygonOffset=
!1;this.overdraw=this.alphaTest=this.polygonOffsetUnits=this.polygonOffsetFactor=0;this._needsUpdate=this.visible=!0};
THREE.Material.prototype={constructor:THREE.Material,get needsUpdate(){return this._needsUpdate},set needsUpdate(a){!0===a&&this.update();this._needsUpdate=a},setValues:function(a){if(void 0!==a)for(var b in a){var d=a[b];if(void 0===d)THREE.warn("THREE.Material: '"+b+"' parameter is undefined.");else if(b in this){var e=this[b];e instanceof THREE.Color?e.set(d):e instanceof THREE.Vector3&&d instanceof THREE.Vector3?e.copy(d):this[b]="overdraw"==b?Number(d):d}}},toJSON:function(){var a={metadata:{version:4.2,
type:"material",generator:"MaterialExporter"},uuid:this.uuid,type:this.type};""!==this.name&&(a.name=this.name);this instanceof THREE.MeshBasicMaterial?(a.color=this.color.getHex(),this.vertexColors!==THREE.NoColors&&(a.vertexColors=this.vertexColors),this.blending!==THREE.NormalBlending&&(a.blending=this.blending),this.side!==THREE.FrontSide&&(a.side=this.side)):this instanceof THREE.MeshLambertMaterial?(a.color=this.color.getHex(),a.emissive=this.emissive.getHex(),this.vertexColors!==THREE.NoColors&&
(a.vertexColors=this.vertexColors),this.shading!==THREE.SmoothShading&&(a.shading=this.shading),this.blending!==THREE.NormalBlending&&(a.blending=this.blending),this.side!==THREE.FrontSide&&(a.side=this.side)):this instanceof THREE.MeshPhongMaterial?(a.color=this.color.getHex(),a.emissive=this.emissive.getHex(),a.specular=this.specular.getHex(),a.shininess=this.shininess,this.vertexColors!==THREE.NoColors&&(a.vertexColors=this.vertexColors),this.shading!==THREE.SmoothShading&&(a.shading=this.shading),
this.blending!==THREE.NormalBlending&&(a.blending=this.blending),this.side!==THREE.FrontSide&&(a.side=this.side)):this instanceof THREE.MeshNormalMaterial?(this.blending!==THREE.NormalBlending&&(a.blending=this.blending),this.side!==THREE.FrontSide&&(a.side=this.side)):this instanceof THREE.MeshDepthMaterial?(this.blending!==THREE.NormalBlending&&(a.blending=this.blending),this.side!==THREE.FrontSide&&(a.side=this.side)):this instanceof THREE.PointCloudMaterial?(a.size=this.size,a.sizeAttenuation=
this.sizeAttenuation,a.color=this.color.getHex(),this.vertexColors!==THREE.NoColors&&(a.vertexColors=this.vertexColors),this.blending!==THREE.NormalBlending&&(a.blending=this.blending)):this instanceof THREE.ShaderMaterial?(a.uniforms=this.uniforms,a.vertexShader=this.vertexShader,a.fragmentShader=this.fragmentShader):this instanceof THREE.SpriteMaterial&&(a.color=this.color.getHex());1>this.opacity&&(a.opacity=this.opacity);!1!==this.transparent&&(a.transparent=this.transparent);!1!==this.wireframe&&
(a.wireframe=this.wireframe);return a},clone:function(a){void 0===a&&(a=new THREE.Material);a.name=this.name;a.side=this.side;a.opacity=this.opacity;a.transparent=this.transparent;a.blending=this.blending;a.blendSrc=this.blendSrc;a.blendDst=this.blendDst;a.blendEquation=this.blendEquation;a.blendSrcAlpha=this.blendSrcAlpha;a.blendDstAlpha=this.blendDstAlpha;a.blendEquationAlpha=this.blendEquationAlpha;a.depthTest=this.depthTest;a.depthWrite=this.depthWrite;a.polygonOffset=this.polygonOffset;a.polygonOffsetFactor=
this.polygonOffsetFactor;a.polygonOffsetUnits=this.polygonOffsetUnits;a.alphaTest=this.alphaTest;a.overdraw=this.overdraw;a.visible=this.visible;return a},update:function(){this.dispatchEvent({type:"update"})},dispose:function(){this.dispatchEvent({type:"dispose"})}};THREE.EventDispatcher.prototype.apply(THREE.Material.prototype);THREE.MaterialIdCount=0;
THREE.LineBasicMaterial=function(a){THREE.Material.call(this);this.type="LineBasicMaterial";this.color=new THREE.Color(16777215);this.linewidth=1;this.linejoin=this.linecap="round";this.vertexColors=THREE.NoColors;this.fog=!0;this.setValues(a)};THREE.LineBasicMaterial.prototype=Object.create(THREE.Material.prototype);THREE.LineBasicMaterial.prototype.constructor=THREE.LineBasicMaterial;
THREE.LineBasicMaterial.prototype.clone=function(){var a=new THREE.LineBasicMaterial;THREE.Material.prototype.clone.call(this,a);a.color.copy(this.color);a.linewidth=this.linewidth;a.linecap=this.linecap;a.linejoin=this.linejoin;a.vertexColors=this.vertexColors;a.fog=this.fog;return a};
THREE.LineDashedMaterial=function(a){THREE.Material.call(this);this.type="LineDashedMaterial";this.color=new THREE.Color(16777215);this.scale=this.linewidth=1;this.dashSize=3;this.gapSize=1;this.vertexColors=!1;this.fog=!0;this.setValues(a)};THREE.LineDashedMaterial.prototype=Object.create(THREE.Material.prototype);THREE.LineDashedMaterial.prototype.constructor=THREE.LineDashedMaterial;
THREE.LineDashedMaterial.prototype.clone=function(){var a=new THREE.LineDashedMaterial;THREE.Material.prototype.clone.call(this,a);a.color.copy(this.color);a.linewidth=this.linewidth;a.scale=this.scale;a.dashSize=this.dashSize;a.gapSize=this.gapSize;a.vertexColors=this.vertexColors;a.fog=this.fog;return a};
THREE.MeshBasicMaterial=function(a){THREE.Material.call(this);this.type="MeshBasicMaterial";this.color=new THREE.Color(16777215);this.envMap=this.alphaMap=this.specularMap=this.lightMap=this.map=null;this.combine=THREE.MultiplyOperation;this.reflectivity=1;this.refractionRatio=.98;this.fog=!0;this.shading=THREE.SmoothShading;this.wireframe=!1;this.wireframeLinewidth=1;this.wireframeLinejoin=this.wireframeLinecap="round";this.vertexColors=THREE.NoColors;this.morphTargets=this.skinning=!1;this.setValues(a)};
THREE.MeshBasicMaterial.prototype=Object.create(THREE.Material.prototype);THREE.MeshBasicMaterial.prototype.constructor=THREE.MeshBasicMaterial;
THREE.MeshBasicMaterial.prototype.clone=function(){var a=new THREE.MeshBasicMaterial;THREE.Material.prototype.clone.call(this,a);a.color.copy(this.color);a.map=this.map;a.lightMap=this.lightMap;a.specularMap=this.specularMap;a.alphaMap=this.alphaMap;a.envMap=this.envMap;a.combine=this.combine;a.reflectivity=this.reflectivity;a.refractionRatio=this.refractionRatio;a.fog=this.fog;a.shading=this.shading;a.wireframe=this.wireframe;a.wireframeLinewidth=this.wireframeLinewidth;a.wireframeLinecap=this.wireframeLinecap;
a.wireframeLinejoin=this.wireframeLinejoin;a.vertexColors=this.vertexColors;a.skinning=this.skinning;a.morphTargets=this.morphTargets;return a};
THREE.MeshLambertMaterial=function(a){THREE.Material.call(this);this.type="MeshLambertMaterial";this.color=new THREE.Color(16777215);this.emissive=new THREE.Color(0);this.wrapAround=!1;this.wrapRGB=new THREE.Vector3(1,1,1);this.envMap=this.alphaMap=this.specularMap=this.lightMap=this.map=null;this.combine=THREE.MultiplyOperation;this.reflectivity=1;this.refractionRatio=.98;this.fog=!0;this.shading=THREE.SmoothShading;this.wireframe=!1;this.wireframeLinewidth=1;this.wireframeLinejoin=this.wireframeLinecap=
"round";this.vertexColors=THREE.NoColors;this.morphNormals=this.morphTargets=this.skinning=!1;this.setValues(a)};THREE.MeshLambertMaterial.prototype=Object.create(THREE.Material.prototype);THREE.MeshLambertMaterial.prototype.constructor=THREE.MeshLambertMaterial;
THREE.MeshLambertMaterial.prototype.clone=function(){var a=new THREE.MeshLambertMaterial;THREE.Material.prototype.clone.call(this,a);a.color.copy(this.color);a.emissive.copy(this.emissive);a.wrapAround=this.wrapAround;a.wrapRGB.copy(this.wrapRGB);a.map=this.map;a.lightMap=this.lightMap;a.specularMap=this.specularMap;a.alphaMap=this.alphaMap;a.envMap=this.envMap;a.combine=this.combine;a.reflectivity=this.reflectivity;a.refractionRatio=this.refractionRatio;a.fog=this.fog;a.shading=this.shading;a.wireframe=
this.wireframe;a.wireframeLinewidth=this.wireframeLinewidth;a.wireframeLinecap=this.wireframeLinecap;a.wireframeLinejoin=this.wireframeLinejoin;a.vertexColors=this.vertexColors;a.skinning=this.skinning;a.morphTargets=this.morphTargets;a.morphNormals=this.morphNormals;return a};
THREE.MeshPhongMaterial=function(a){THREE.Material.call(this);this.type="MeshPhongMaterial";this.color=new THREE.Color(16777215);this.emissive=new THREE.Color(0);this.specular=new THREE.Color(1118481);this.shininess=30;this.wrapAround=this.metal=!1;this.wrapRGB=new THREE.Vector3(1,1,1);this.bumpMap=this.lightMap=this.map=null;this.bumpScale=1;this.normalMap=null;this.normalScale=new THREE.Vector2(1,1);this.envMap=this.alphaMap=this.specularMap=null;this.combine=THREE.MultiplyOperation;this.reflectivity=
1;this.refractionRatio=.98;this.fog=!0;this.shading=THREE.SmoothShading;this.wireframe=!1;this.wireframeLinewidth=1;this.wireframeLinejoin=this.wireframeLinecap="round";this.vertexColors=THREE.NoColors;this.morphNormals=this.morphTargets=this.skinning=!1;this.setValues(a)};THREE.MeshPhongMaterial.prototype=Object.create(THREE.Material.prototype);THREE.MeshPhongMaterial.prototype.constructor=THREE.MeshPhongMaterial;
THREE.MeshPhongMaterial.prototype.clone=function(){var a=new THREE.MeshPhongMaterial;THREE.Material.prototype.clone.call(this,a);a.color.copy(this.color);a.emissive.copy(this.emissive);a.specular.copy(this.specular);a.shininess=this.shininess;a.metal=this.metal;a.wrapAround=this.wrapAround;a.wrapRGB.copy(this.wrapRGB);a.map=this.map;a.lightMap=this.lightMap;a.bumpMap=this.bumpMap;a.bumpScale=this.bumpScale;a.normalMap=this.normalMap;a.normalScale.copy(this.normalScale);a.specularMap=this.specularMap;
a.alphaMap=this.alphaMap;a.envMap=this.envMap;a.combine=this.combine;a.reflectivity=this.reflectivity;a.refractionRatio=this.refractionRatio;a.fog=this.fog;a.shading=this.shading;a.wireframe=this.wireframe;a.wireframeLinewidth=this.wireframeLinewidth;a.wireframeLinecap=this.wireframeLinecap;a.wireframeLinejoin=this.wireframeLinejoin;a.vertexColors=this.vertexColors;a.skinning=this.skinning;a.morphTargets=this.morphTargets;a.morphNormals=this.morphNormals;return a};
THREE.MeshDepthMaterial=function(a){THREE.Material.call(this);this.type="MeshDepthMaterial";this.wireframe=this.morphTargets=!1;this.wireframeLinewidth=1;this.setValues(a)};THREE.MeshDepthMaterial.prototype=Object.create(THREE.Material.prototype);THREE.MeshDepthMaterial.prototype.constructor=THREE.MeshDepthMaterial;
THREE.MeshDepthMaterial.prototype.clone=function(){var a=new THREE.MeshDepthMaterial;THREE.Material.prototype.clone.call(this,a);a.wireframe=this.wireframe;a.wireframeLinewidth=this.wireframeLinewidth;return a};THREE.MeshNormalMaterial=function(a){THREE.Material.call(this,a);this.type="MeshNormalMaterial";this.wireframe=!1;this.wireframeLinewidth=1;this.morphTargets=!1;this.setValues(a)};THREE.MeshNormalMaterial.prototype=Object.create(THREE.Material.prototype);
THREE.MeshNormalMaterial.prototype.constructor=THREE.MeshNormalMaterial;THREE.MeshNormalMaterial.prototype.clone=function(){var a=new THREE.MeshNormalMaterial;THREE.Material.prototype.clone.call(this,a);a.wireframe=this.wireframe;a.wireframeLinewidth=this.wireframeLinewidth;return a};THREE.MeshFaceMaterial=function(a){this.uuid=THREE.Math.generateUUID();this.type="MeshFaceMaterial";this.materials=a instanceof Array?a:[]};
THREE.MeshFaceMaterial.prototype={constructor:THREE.MeshFaceMaterial,toJSON:function(){for(var a={metadata:{version:4.2,type:"material",generator:"MaterialExporter"},uuid:this.uuid,type:this.type,materials:[]},b=0,d=this.materials.length;b<d;b++)a.materials.push(this.materials[b].toJSON());return a},clone:function(){for(var a=new THREE.MeshFaceMaterial,b=0;b<this.materials.length;b++)a.materials.push(this.materials[b].clone());return a}};
THREE.PointCloudMaterial=function(a){THREE.Material.call(this);this.type="PointCloudMaterial";this.color=new THREE.Color(16777215);this.map=null;this.size=1;this.sizeAttenuation=!0;this.vertexColors=THREE.NoColors;this.fog=!0;this.setValues(a)};THREE.PointCloudMaterial.prototype=Object.create(THREE.Material.prototype);THREE.PointCloudMaterial.prototype.constructor=THREE.PointCloudMaterial;
THREE.PointCloudMaterial.prototype.clone=function(){var a=new THREE.PointCloudMaterial;THREE.Material.prototype.clone.call(this,a);a.color.copy(this.color);a.map=this.map;a.size=this.size;a.sizeAttenuation=this.sizeAttenuation;a.vertexColors=this.vertexColors;a.fog=this.fog;return a};THREE.ParticleBasicMaterial=function(a){THREE.warn("THREE.ParticleBasicMaterial has been renamed to THREE.PointCloudMaterial.");return new THREE.PointCloudMaterial(a)};
THREE.ParticleSystemMaterial=function(a){THREE.warn("THREE.ParticleSystemMaterial has been renamed to THREE.PointCloudMaterial.");return new THREE.PointCloudMaterial(a)};
THREE.ShaderMaterial=function(a){THREE.Material.call(this);this.type="ShaderMaterial";this.defines={};this.uniforms={};this.attributes=null;this.vertexShader="void main() {\n\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}";this.fragmentShader="void main() {\n\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\n}";this.shading=THREE.SmoothShading;this.linewidth=1;this.wireframe=!1;this.wireframeLinewidth=1;this.lights=this.fog=!1;this.vertexColors=THREE.NoColors;this.morphNormals=
this.morphTargets=this.skinning=!1;this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv2:[0,0]};this.index0AttributeName=void 0;this.setValues(a)};THREE.ShaderMaterial.prototype=Object.create(THREE.Material.prototype);THREE.ShaderMaterial.prototype.constructor=THREE.ShaderMaterial;
THREE.ShaderMaterial.prototype.clone=function(){var a=new THREE.ShaderMaterial;THREE.Material.prototype.clone.call(this,a);a.fragmentShader=this.fragmentShader;a.vertexShader=this.vertexShader;a.uniforms=THREE.UniformsUtils.clone(this.uniforms);a.attributes=this.attributes;a.defines=this.defines;a.shading=this.shading;a.wireframe=this.wireframe;a.wireframeLinewidth=this.wireframeLinewidth;a.fog=this.fog;a.lights=this.lights;a.vertexColors=this.vertexColors;a.skinning=this.skinning;a.morphTargets=
this.morphTargets;a.morphNormals=this.morphNormals;return a};THREE.RawShaderMaterial=function(a){THREE.ShaderMaterial.call(this,a);this.type="RawShaderMaterial"};THREE.RawShaderMaterial.prototype=Object.create(THREE.ShaderMaterial.prototype);THREE.RawShaderMaterial.prototype.constructor=THREE.RawShaderMaterial;THREE.RawShaderMaterial.prototype.clone=function(){var a=new THREE.RawShaderMaterial;THREE.ShaderMaterial.prototype.clone.call(this,a);return a};
THREE.SpriteMaterial=function(a){THREE.Material.call(this);this.type="SpriteMaterial";this.color=new THREE.Color(16777215);this.map=null;this.rotation=0;this.fog=!1;this.setValues(a)};THREE.SpriteMaterial.prototype=Object.create(THREE.Material.prototype);THREE.SpriteMaterial.prototype.constructor=THREE.SpriteMaterial;
THREE.SpriteMaterial.prototype.clone=function(){var a=new THREE.SpriteMaterial;THREE.Material.prototype.clone.call(this,a);a.color.copy(this.color);a.map=this.map;a.rotation=this.rotation;a.fog=this.fog;return a};
THREE.Texture=function(a,b,d,e,f,g,h,k,l){Object.defineProperty(this,"id",{value:THREE.TextureIdCount++});this.uuid=THREE.Math.generateUUID();this.sourceFile=this.name="";this.image=void 0!==a?a:THREE.Texture.DEFAULT_IMAGE;this.mipmaps=[];this.mapping=void 0!==b?b:THREE.Texture.DEFAULT_MAPPING;this.wrapS=void 0!==d?d:THREE.ClampToEdgeWrapping;this.wrapT=void 0!==e?e:THREE.ClampToEdgeWrapping;this.magFilter=void 0!==f?f:THREE.LinearFilter;this.minFilter=void 0!==g?g:THREE.LinearMipMapLinearFilter;
this.anisotropy=void 0!==l?l:1;this.format=void 0!==h?h:THREE.RGBAFormat;this.type=void 0!==k?k:THREE.UnsignedByteType;this.offset=new THREE.Vector2(0,0);this.repeat=new THREE.Vector2(1,1);this.generateMipmaps=!0;this.premultiplyAlpha=!1;this.flipY=!0;this.unpackAlignment=4;this._needsUpdate=!1;this.onUpdate=null};THREE.Texture.DEFAULT_IMAGE=void 0;THREE.Texture.DEFAULT_MAPPING=THREE.UVMapping;
THREE.Texture.prototype={constructor:THREE.Texture,get needsUpdate(){return this._needsUpdate},set needsUpdate(a){!0===a&&this.update();this._needsUpdate=a},clone:function(a){void 0===a&&(a=new THREE.Texture);a.image=this.image;a.mipmaps=this.mipmaps.slice(0);a.mapping=this.mapping;a.wrapS=this.wrapS;a.wrapT=this.wrapT;a.magFilter=this.magFilter;a.minFilter=this.minFilter;a.anisotropy=this.anisotropy;a.format=this.format;a.type=this.type;a.offset.copy(this.offset);a.repeat.copy(this.repeat);a.generateMipmaps=
this.generateMipmaps;a.premultiplyAlpha=this.premultiplyAlpha;a.flipY=this.flipY;a.unpackAlignment=this.unpackAlignment;return a},update:function(){this.dispatchEvent({type:"update"})},dispose:function(){this.dispatchEvent({type:"dispose"})}};THREE.EventDispatcher.prototype.apply(THREE.Texture.prototype);THREE.TextureIdCount=0;THREE.CubeTexture=function(a,b,d,e,f,g,h,k,l){b=void 0!==b?b:THREE.CubeReflectionMapping;THREE.Texture.call(this,a,b,d,e,f,g,h,k,l);this.images=a};
THREE.CubeTexture.prototype=Object.create(THREE.Texture.prototype);THREE.CubeTexture.prototype.constructor=THREE.CubeTexture;THREE.CubeTexture.clone=function(a){void 0===a&&(a=new THREE.CubeTexture);THREE.Texture.prototype.clone.call(this,a);a.images=this.images;return a};THREE.CompressedTexture=function(a,b,d,e,f,g,h,k,l,m,q){THREE.Texture.call(this,null,g,h,k,l,m,e,f,q);this.image={width:b,height:d};this.mipmaps=a;this.generateMipmaps=this.flipY=!1};THREE.CompressedTexture.prototype=Object.create(THREE.Texture.prototype);
THREE.CompressedTexture.prototype.constructor=THREE.CompressedTexture;THREE.CompressedTexture.prototype.clone=function(){var a=new THREE.CompressedTexture;THREE.Texture.prototype.clone.call(this,a);return a};THREE.DataTexture=function(a,b,d,e,f,g,h,k,l,m,q){THREE.Texture.call(this,null,g,h,k,l,m,e,f,q);this.image={data:a,width:b,height:d}};THREE.DataTexture.prototype=Object.create(THREE.Texture.prototype);THREE.DataTexture.prototype.constructor=THREE.DataTexture;
THREE.DataTexture.prototype.clone=function(){var a=new THREE.DataTexture;THREE.Texture.prototype.clone.call(this,a);return a};THREE.VideoTexture=function(a,b,d,e,f,g,h,k,l){THREE.Texture.call(this,a,b,d,e,f,g,h,k,l);this.generateMipmaps=!1;var m=this,q=function(){requestAnimationFrame(q);a.readyState===a.HAVE_ENOUGH_DATA&&(m.needsUpdate=!0)};q()};THREE.VideoTexture.prototype=Object.create(THREE.Texture.prototype);THREE.VideoTexture.prototype.constructor=THREE.VideoTexture;
THREE.Group=function(){THREE.Object3D.call(this);this.type="Group"};THREE.Group.prototype=Object.create(THREE.Object3D.prototype);THREE.Group.prototype.constructor=THREE.Group;THREE.PointCloud=function(a,b){THREE.Object3D.call(this);this.type="PointCloud";this.geometry=void 0!==a?a:new THREE.Geometry;this.material=void 0!==b?b:new THREE.PointCloudMaterial({color:16777215*Math.random()})};THREE.PointCloud.prototype=Object.create(THREE.Object3D.prototype);THREE.PointCloud.prototype.constructor=THREE.PointCloud;
THREE.PointCloud.prototype.raycast=function(){var a=new THREE.Matrix4,b=new THREE.Ray;return function(d,e){var f=this,g=f.geometry,h=d.params.PointCloud.threshold;a.getInverse(this.matrixWorld);b.copy(d.ray).applyMatrix4(a);if(null===g.boundingBox||!1!==b.isIntersectionBox(g.boundingBox)){var k=h/((this.scale.x+this.scale.y+this.scale.z)/3),l=new THREE.Vector3,h=function(a,g){var h=b.distanceToPoint(a);if(h<k){var l=b.closestPointToPoint(a);l.applyMatrix4(f.matrixWorld);var p=d.ray.origin.distanceTo(l);
e.push({distance:p,distanceToRay:h,point:l.clone(),index:g,face:null,object:f})}};if(g instanceof THREE.BufferGeometry){var m=g.attributes,q=m.position.array;if(void 0!==m.index){var m=m.index.array,r=g.offsets;0===r.length&&(r=[{start:0,count:m.length,index:0}]);for(var p=0,v=r.length;p<v;++p)for(var t=r[p].start,u=r[p].index,g=t,t=t+r[p].count;g<t;g++){var w=u+m[g];l.fromArray(q,3*w);h(l,w)}}else for(m=q.length/3,g=0;g<m;g++)l.set(q[3*g],q[3*g+1],q[3*g+2]),h(l,g)}else for(l=this.geometry.vertices,
g=0;g<l.length;g++)h(l[g],g)}}}();THREE.PointCloud.prototype.clone=function(a){void 0===a&&(a=new THREE.PointCloud(this.geometry,this.material));THREE.Object3D.prototype.clone.call(this,a);return a};THREE.ParticleSystem=function(a,b){THREE.warn("THREE.ParticleSystem has been renamed to THREE.PointCloud.");return new THREE.PointCloud(a,b)};
THREE.Line=function(a,b,d){THREE.Object3D.call(this);this.type="Line";this.geometry=void 0!==a?a:new THREE.Geometry;this.material=void 0!==b?b:new THREE.LineBasicMaterial({color:16777215*Math.random()});this.mode=void 0!==d?d:THREE.LineStrip};THREE.LineStrip=0;THREE.LinePieces=1;THREE.Line.prototype=Object.create(THREE.Object3D.prototype);THREE.Line.prototype.constructor=THREE.Line;
THREE.Line.prototype.raycast=function(){var a=new THREE.Matrix4,b=new THREE.Ray,d=new THREE.Sphere;return function(e,f){var g=e.linePrecision,g=g*g,h=this.geometry;null===h.boundingSphere&&h.computeBoundingSphere();d.copy(h.boundingSphere);d.applyMatrix4(this.matrixWorld);if(!1!==e.ray.isIntersectionSphere(d)){a.getInverse(this.matrixWorld);b.copy(e.ray).applyMatrix4(a);var k=new THREE.Vector3,l=new THREE.Vector3,m=new THREE.Vector3,q=new THREE.Vector3,r=this.mode===THREE.LineStrip?1:2;if(h instanceof
THREE.BufferGeometry){var p=h.attributes;if(void 0!==p.index){var v=p.index.array,p=p.position.array,t=h.offsets;0===t.length&&(t=[{start:0,count:v.length,index:0}]);for(var u=0;u<t.length;u++)for(var w=t[u].start,x=t[u].count,z=t[u].index,h=w;h<w+x-1;h+=r){var F=z+v[h+1];k.fromArray(p,3*(z+v[h]));l.fromArray(p,3*F);F=b.distanceSqToSegment(k,l,q,m);F>g||(F=b.origin.distanceTo(q),F<e.near||F>e.far||f.push({distance:F,point:m.clone().applyMatrix4(this.matrixWorld),index:h,offsetIndex:u,face:null,faceIndex:null,
object:this}))}}else for(p=p.position.array,h=0;h<p.length/3-1;h+=r)k.fromArray(p,3*h),l.fromArray(p,3*h+3),F=b.distanceSqToSegment(k,l,q,m),F>g||(F=b.origin.distanceTo(q),F<e.near||F>e.far||f.push({distance:F,point:m.clone().applyMatrix4(this.matrixWorld),index:h,face:null,faceIndex:null,object:this}))}else if(h instanceof THREE.Geometry)for(k=h.vertices,l=k.length,h=0;h<l-1;h+=r)F=b.distanceSqToSegment(k[h],k[h+1],q,m),F>g||(F=b.origin.distanceTo(q),F<e.near||F>e.far||f.push({distance:F,point:m.clone().applyMatrix4(this.matrixWorld),
index:h,face:null,faceIndex:null,object:this}))}}}();THREE.Line.prototype.clone=function(a){void 0===a&&(a=new THREE.Line(this.geometry,this.material,this.mode));THREE.Object3D.prototype.clone.call(this,a);return a};THREE.Mesh=function(a,b){THREE.Object3D.call(this);this.type="Mesh";this.geometry=void 0!==a?a:new THREE.Geometry;this.material=void 0!==b?b:new THREE.MeshBasicMaterial({color:16777215*Math.random()});this.updateMorphTargets()};THREE.Mesh.prototype=Object.create(THREE.Object3D.prototype);
THREE.Mesh.prototype.constructor=THREE.Mesh;THREE.Mesh.prototype.updateMorphTargets=function(){if(void 0!==this.geometry.morphTargets&&0<this.geometry.morphTargets.length){this.morphTargetBase=-1;this.morphTargetForcedOrder=[];this.morphTargetInfluences=[];this.morphTargetDictionary={};for(var a=0,b=this.geometry.morphTargets.length;a<b;a++)this.morphTargetInfluences.push(0),this.morphTargetDictionary[this.geometry.morphTargets[a].name]=a}};
THREE.Mesh.prototype.getMorphTargetIndexByName=function(a){if(void 0!==this.morphTargetDictionary[a])return this.morphTargetDictionary[a];THREE.warn("THREE.Mesh.getMorphTargetIndexByName: morph target "+a+" does not exist. Returning 0.");return 0};
THREE.Mesh.prototype.raycast=function(){var a=new THREE.Matrix4,b=new THREE.Ray,d=new THREE.Sphere,e=new THREE.Vector3,f=new THREE.Vector3,g=new THREE.Vector3;return function(h,k){var l=this.geometry;null===l.boundingSphere&&l.computeBoundingSphere();d.copy(l.boundingSphere);d.applyMatrix4(this.matrixWorld);if(!1!==h.ray.isIntersectionSphere(d)&&(a.getInverse(this.matrixWorld),b.copy(h.ray).applyMatrix4(a),null===l.boundingBox||!1!==b.isIntersectionBox(l.boundingBox)))if(l instanceof THREE.BufferGeometry){var m=
this.material;if(void 0!==m){var q=l.attributes,r,p,v=h.precision;if(void 0!==q.index){var t=q.index.array,u=q.position.array,w=l.offsets;0===w.length&&(w=[{start:0,count:t.length,index:0}]);for(var x=0,z=w.length;x<z;++x)for(var q=w[x].start,F=w[x].index,l=q,y=q+w[x].count;l<y;l+=3){q=F+t[l];r=F+t[l+1];p=F+t[l+2];e.fromArray(u,3*q);f.fromArray(u,3*r);g.fromArray(u,3*p);var A=m.side===THREE.BackSide?b.intersectTriangle(g,f,e,!0):b.intersectTriangle(e,f,g,m.side!==THREE.DoubleSide);if(null!==A){A.applyMatrix4(this.matrixWorld);
var C=h.ray.origin.distanceTo(A);C<v||C<h.near||C>h.far||k.push({distance:C,point:A,face:new THREE.Face3(q,r,p,THREE.Triangle.normal(e,f,g)),faceIndex:null,object:this})}}}else for(u=q.position.array,t=l=0,y=u.length;l<y;l+=3,t+=9)q=l,r=l+1,p=l+2,e.fromArray(u,t),f.fromArray(u,t+3),g.fromArray(u,t+6),A=m.side===THREE.BackSide?b.intersectTriangle(g,f,e,!0):b.intersectTriangle(e,f,g,m.side!==THREE.DoubleSide),null!==A&&(A.applyMatrix4(this.matrixWorld),C=h.ray.origin.distanceTo(A),C<v||C<h.near||C>
h.far||k.push({distance:C,point:A,face:new THREE.Face3(q,r,p,THREE.Triangle.normal(e,f,g)),faceIndex:null,object:this}))}}else if(l instanceof THREE.Geometry)for(t=this.material instanceof THREE.MeshFaceMaterial,u=!0===t?this.material.materials:null,v=h.precision,w=l.vertices,x=0,z=l.faces.length;x<z;x++)if(F=l.faces[x],m=!0===t?u[F.materialIndex]:this.material,void 0!==m){q=w[F.a];r=w[F.b];p=w[F.c];if(!0===m.morphTargets){A=l.morphTargets;C=this.morphTargetInfluences;e.set(0,0,0);f.set(0,0,0);g.set(0,
0,0);for(var y=0,G=A.length;y<G;y++){var I=C[y];if(0!==I){var H=A[y].vertices;e.x+=(H[F.a].x-q.x)*I;e.y+=(H[F.a].y-q.y)*I;e.z+=(H[F.a].z-q.z)*I;f.x+=(H[F.b].x-r.x)*I;f.y+=(H[F.b].y-r.y)*I;f.z+=(H[F.b].z-r.z)*I;g.x+=(H[F.c].x-p.x)*I;g.y+=(H[F.c].y-p.y)*I;g.z+=(H[F.c].z-p.z)*I}}e.add(q);f.add(r);g.add(p);q=e;r=f;p=g}A=m.side===THREE.BackSide?b.intersectTriangle(p,r,q,!0):b.intersectTriangle(q,r,p,m.side!==THREE.DoubleSide);null!==A&&(A.applyMatrix4(this.matrixWorld),C=h.ray.origin.distanceTo(A),C<v||
C<h.near||C>h.far||k.push({distance:C,point:A,face:F,faceIndex:x,object:this}))}}}();THREE.Mesh.prototype.clone=function(a,b){void 0===a&&(a=new THREE.Mesh(this.geometry,this.material));THREE.Object3D.prototype.clone.call(this,a,b);return a};THREE.Bone=function(a){THREE.Object3D.call(this);this.type="Bone";this.skin=a};THREE.Bone.prototype=Object.create(THREE.Object3D.prototype);THREE.Bone.prototype.constructor=THREE.Bone;
THREE.Skeleton=function(a,b,d){this.useVertexTexture=void 0!==d?d:!0;this.identityMatrix=new THREE.Matrix4;a=a||[];this.bones=a.slice(0);this.useVertexTexture?(this.boneTextureHeight=this.boneTextureWidth=a=256<this.bones.length?64:64<this.bones.length?32:16<this.bones.length?16:8,this.boneMatrices=new Float32Array(this.boneTextureWidth*this.boneTextureHeight*4),this.boneTexture=new THREE.DataTexture(this.boneMatrices,this.boneTextureWidth,this.boneTextureHeight,THREE.RGBAFormat,THREE.FloatType),
this.boneTexture.minFilter=THREE.NearestFilter,this.boneTexture.magFilter=THREE.NearestFilter,this.boneTexture.generateMipmaps=!1,this.boneTexture.flipY=!1):this.boneMatrices=new Float32Array(16*this.bones.length);if(void 0===b)this.calculateInverses();else if(this.bones.length===b.length)this.boneInverses=b.slice(0);else for(THREE.warn("THREE.Skeleton bonInverses is the wrong length."),this.boneInverses=[],b=0,a=this.bones.length;b<a;b++)this.boneInverses.push(new THREE.Matrix4)};
THREE.Skeleton.prototype.calculateInverses=function(){this.boneInverses=[];for(var a=0,b=this.bones.length;a<b;a++){var d=new THREE.Matrix4;this.bones[a]&&d.getInverse(this.bones[a].matrixWorld);this.boneInverses.push(d)}};
THREE.Skeleton.prototype.pose=function(){for(var a,b=0,d=this.bones.length;b<d;b++)(a=this.bones[b])&&a.matrixWorld.getInverse(this.boneInverses[b]);b=0;for(d=this.bones.length;b<d;b++)if(a=this.bones[b])a.parent?(a.matrix.getInverse(a.parent.matrixWorld),a.matrix.multiply(a.matrixWorld)):a.matrix.copy(a.matrixWorld),a.matrix.decompose(a.position,a.quaternion,a.scale)};
THREE.Skeleton.prototype.update=function(){var a=new THREE.Matrix4;return function(){for(var b=0,d=this.bones.length;b<d;b++)a.multiplyMatrices(this.bones[b]?this.bones[b].matrixWorld:this.identityMatrix,this.boneInverses[b]),a.flattenToArrayOffset(this.boneMatrices,16*b);this.useVertexTexture&&(this.boneTexture.needsUpdate=!0)}}();
THREE.SkinnedMesh=function(a,b,d){THREE.Mesh.call(this,a,b);this.type="SkinnedMesh";this.bindMode="attached";this.bindMatrix=new THREE.Matrix4;this.bindMatrixInverse=new THREE.Matrix4;a=[];if(this.geometry&&void 0!==this.geometry.bones){for(var e,f,g,h,k=0,l=this.geometry.bones.length;k<l;++k)e=this.geometry.bones[k],f=e.pos,g=e.rotq,h=e.scl,b=new THREE.Bone(this),a.push(b),b.name=e.name,b.position.set(f[0],f[1],f[2]),b.quaternion.set(g[0],g[1],g[2],g[3]),void 0!==h?b.scale.set(h[0],h[1],h[2]):b.scale.set(1,
1,1);k=0;for(l=this.geometry.bones.length;k<l;++k)e=this.geometry.bones[k],-1!==e.parent?a[e.parent].add(a[k]):this.add(a[k])}this.normalizeSkinWeights();this.updateMatrixWorld(!0);this.bind(new THREE.Skeleton(a,void 0,d))};THREE.SkinnedMesh.prototype=Object.create(THREE.Mesh.prototype);THREE.SkinnedMesh.prototype.constructor=THREE.SkinnedMesh;THREE.SkinnedMesh.prototype.bind=function(a,b){this.skeleton=a;void 0===b&&(this.updateMatrixWorld(!0),b=this.matrixWorld);this.bindMatrix.copy(b);this.bindMatrixInverse.getInverse(b)};
THREE.SkinnedMesh.prototype.pose=function(){this.skeleton.pose()};THREE.SkinnedMesh.prototype.normalizeSkinWeights=function(){if(this.geometry instanceof THREE.Geometry)for(var a=0;a<this.geometry.skinIndices.length;a++){var b=this.geometry.skinWeights[a],d=1/b.lengthManhattan();Infinity!==d?b.multiplyScalar(d):b.set(1)}};
THREE.SkinnedMesh.prototype.updateMatrixWorld=function(a){THREE.Mesh.prototype.updateMatrixWorld.call(this,!0);"attached"===this.bindMode?this.bindMatrixInverse.getInverse(this.matrixWorld):"detached"===this.bindMode?this.bindMatrixInverse.getInverse(this.bindMatrix):THREE.warn("THREE.SkinnedMesh unreckognized bindMode: "+this.bindMode)};
THREE.SkinnedMesh.prototype.clone=function(a){void 0===a&&(a=new THREE.SkinnedMesh(this.geometry,this.material,this.useVertexTexture));THREE.Mesh.prototype.clone.call(this,a);return a};THREE.MorphAnimMesh=function(a,b){THREE.Mesh.call(this,a,b);this.type="MorphAnimMesh";this.duration=1E3;this.mirroredLoop=!1;this.currentKeyframe=this.lastKeyframe=this.time=0;this.direction=1;this.directionBackwards=!1;this.setFrameRange(0,this.geometry.morphTargets.length-1)};THREE.MorphAnimMesh.prototype=Object.create(THREE.Mesh.prototype);
THREE.MorphAnimMesh.prototype.constructor=THREE.MorphAnimMesh;THREE.MorphAnimMesh.prototype.setFrameRange=function(a,b){this.startKeyframe=a;this.endKeyframe=b;this.length=this.endKeyframe-this.startKeyframe+1};THREE.MorphAnimMesh.prototype.setDirectionForward=function(){this.direction=1;this.directionBackwards=!1};THREE.MorphAnimMesh.prototype.setDirectionBackward=function(){this.direction=-1;this.directionBackwards=!0};
THREE.MorphAnimMesh.prototype.parseAnimations=function(){var a=this.geometry;a.animations||(a.animations={});for(var b,d=a.animations,e=/([a-z]+)_?(\d+)/,f=0,g=a.morphTargets.length;f<g;f++){var h=a.morphTargets[f].name.match(e);if(h&&1<h.length){h=h[1];d[h]||(d[h]={start:Infinity,end:-Infinity});var k=d[h];f<k.start&&(k.start=f);f>k.end&&(k.end=f);b||(b=h)}}a.firstAnimation=b};
THREE.MorphAnimMesh.prototype.setAnimationLabel=function(a,b,d){this.geometry.animations||(this.geometry.animations={});this.geometry.animations[a]={start:b,end:d}};THREE.MorphAnimMesh.prototype.playAnimation=function(a,b){var d=this.geometry.animations[a];d?(this.setFrameRange(d.start,d.end),this.duration=(d.end-d.start)/b*1E3,this.time=0):THREE.warn("THREE.MorphAnimMesh: animation["+a+"] undefined in .playAnimation()")};
THREE.MorphAnimMesh.prototype.updateAnimation=function(a){var b=this.duration/this.length;this.time+=this.direction*a;if(this.mirroredLoop){if(this.time>this.duration||0>this.time)this.direction*=-1,this.time>this.duration&&(this.time=this.duration,this.directionBackwards=!0),0>this.time&&(this.time=0,this.directionBackwards=!1)}else this.time%=this.duration,0>this.time&&(this.time+=this.duration);a=this.startKeyframe+THREE.Math.clamp(Math.floor(this.time/b),0,this.length-1);a!==this.currentKeyframe&&
(this.morphTargetInfluences[this.lastKeyframe]=0,this.morphTargetInfluences[this.currentKeyframe]=1,this.morphTargetInfluences[a]=0,this.lastKeyframe=this.currentKeyframe,this.currentKeyframe=a);b=this.time%b/b;this.directionBackwards&&(b=1-b);this.morphTargetInfluences[this.currentKeyframe]=b;this.morphTargetInfluences[this.lastKeyframe]=1-b};
THREE.MorphAnimMesh.prototype.interpolateTargets=function(a,b,d){for(var e=this.morphTargetInfluences,f=0,g=e.length;f<g;f++)e[f]=0;-1<a&&(e[a]=1-d);-1<b&&(e[b]=d)};
THREE.MorphAnimMesh.prototype.clone=function(a){void 0===a&&(a=new THREE.MorphAnimMesh(this.geometry,this.material));a.duration=this.duration;a.mirroredLoop=this.mirroredLoop;a.time=this.time;a.lastKeyframe=this.lastKeyframe;a.currentKeyframe=this.currentKeyframe;a.direction=this.direction;a.directionBackwards=this.directionBackwards;THREE.Mesh.prototype.clone.call(this,a);return a};THREE.LOD=function(){THREE.Object3D.call(this);this.objects=[]};THREE.LOD.prototype=Object.create(THREE.Object3D.prototype);
THREE.LOD.prototype.constructor=THREE.LOD;THREE.LOD.prototype.addLevel=function(a,b){void 0===b&&(b=0);b=Math.abs(b);for(var d=0;d<this.objects.length&&!(b<this.objects[d].distance);d++);this.objects.splice(d,0,{distance:b,object:a});this.add(a)};THREE.LOD.prototype.getObjectForDistance=function(a){for(var b=1,d=this.objects.length;b<d&&!(a<this.objects[b].distance);b++);return this.objects[b-1].object};
THREE.LOD.prototype.raycast=function(){var a=new THREE.Vector3;return function(b,d){a.setFromMatrixPosition(this.matrixWorld);var e=b.ray.origin.distanceTo(a);this.getObjectForDistance(e).raycast(b,d)}}();
THREE.LOD.prototype.update=function(){var a=new THREE.Vector3,b=new THREE.Vector3;return function(d){if(1<this.objects.length){a.setFromMatrixPosition(d.matrixWorld);b.setFromMatrixPosition(this.matrixWorld);d=a.distanceTo(b);this.objects[0].object.visible=!0;for(var e=1,f=this.objects.length;e<f;e++)if(d>=this.objects[e].distance)this.objects[e-1].object.visible=!1,this.objects[e].object.visible=!0;else break;for(;e<f;e++)this.objects[e].object.visible=!1}}}();
THREE.LOD.prototype.clone=function(a){void 0===a&&(a=new THREE.LOD);THREE.Object3D.prototype.clone.call(this,a);for(var b=0,d=this.objects.length;b<d;b++){var e=this.objects[b].object.clone();e.visible=0===b;a.addLevel(e,this.objects[b].distance)}return a};
THREE.Sprite=function(){var a=new Uint16Array([0,1,2,0,2,3]),b=new Float32Array([-.5,-.5,0,.5,-.5,0,.5,.5,0,-.5,.5,0]),d=new Float32Array([0,0,1,0,1,1,0,1]),e=new THREE.BufferGeometry;e.addAttribute("index",new THREE.BufferAttribute(a,1));e.addAttribute("position",new THREE.BufferAttribute(b,3));e.addAttribute("uv",new THREE.BufferAttribute(d,2));return function(a){THREE.Object3D.call(this);this.type="Sprite";this.geometry=e;this.material=void 0!==a?a:new THREE.SpriteMaterial}}();
THREE.Sprite.prototype=Object.create(THREE.Object3D.prototype);THREE.Sprite.prototype.constructor=THREE.Sprite;THREE.Sprite.prototype.raycast=function(){var a=new THREE.Vector3;return function(b,d){a.setFromMatrixPosition(this.matrixWorld);var e=b.ray.distanceToPoint(a);e>this.scale.x||d.push({distance:e,point:this.position,face:null,object:this})}}();THREE.Sprite.prototype.clone=function(a){void 0===a&&(a=new THREE.Sprite(this.material));THREE.Object3D.prototype.clone.call(this,a);return a};
THREE.Particle=THREE.Sprite;THREE.LensFlare=function(a,b,d,e,f){THREE.Object3D.call(this);this.lensFlares=[];this.positionScreen=new THREE.Vector3;this.customUpdateCallback=void 0;void 0!==a&&this.add(a,b,d,e,f)};THREE.LensFlare.prototype=Object.create(THREE.Object3D.prototype);THREE.LensFlare.prototype.constructor=THREE.LensFlare;
THREE.LensFlare.prototype.add=function(a,b,d,e,f,g){void 0===b&&(b=-1);void 0===d&&(d=0);void 0===g&&(g=1);void 0===f&&(f=new THREE.Color(16777215));void 0===e&&(e=THREE.NormalBlending);d=Math.min(d,Math.max(0,d));this.lensFlares.push({texture:a,size:b,distance:d,x:0,y:0,z:0,scale:1,rotation:1,opacity:g,color:f,blending:e})};
THREE.LensFlare.prototype.updateLensFlares=function(){var a,b=this.lensFlares.length,d,e=2*-this.positionScreen.x,f=2*-this.positionScreen.y;for(a=0;a<b;a++)d=this.lensFlares[a],d.x=this.positionScreen.x+e*d.distance,d.y=this.positionScreen.y+f*d.distance,d.wantedRotation=d.x*Math.PI*.25,d.rotation+=.25*(d.wantedRotation-d.rotation)};THREE.Scene=function(){THREE.Object3D.call(this);this.type="Scene";this.overrideMaterial=this.fog=null;this.autoUpdate=!0};THREE.Scene.prototype=Object.create(THREE.Object3D.prototype);
THREE.Scene.prototype.constructor=THREE.Scene;THREE.Scene.prototype.clone=function(a){void 0===a&&(a=new THREE.Scene);THREE.Object3D.prototype.clone.call(this,a);null!==this.fog&&(a.fog=this.fog.clone());null!==this.overrideMaterial&&(a.overrideMaterial=this.overrideMaterial.clone());a.autoUpdate=this.autoUpdate;a.matrixAutoUpdate=this.matrixAutoUpdate;return a};THREE.Fog=function(a,b,d){this.name="";this.color=new THREE.Color(a);this.near=void 0!==b?b:1;this.far=void 0!==d?d:1E3};
THREE.Fog.prototype.clone=function(){return new THREE.Fog(this.color.getHex(),this.near,this.far)};THREE.FogExp2=function(a,b){this.name="";this.color=new THREE.Color(a);this.density=void 0!==b?b:2.5E-4};THREE.FogExp2.prototype.clone=function(){return new THREE.FogExp2(this.color.getHex(),this.density)};THREE.ShaderChunk={};THREE.ShaderChunk.common="#define PI 3.14159\n#define PI2 6.28318\n#define RECIPROCAL_PI2 0.15915494\n#define LOG2 1.442695\n#define EPSILON 1e-6\n\nfloat square( in float a ) { return a*a; }\nvec2  square( in vec2 a )  { return vec2( a.x*a.x, a.y*a.y ); }\nvec3  square( in vec3 a )  { return vec3( a.x*a.x, a.y*a.y, a.z*a.z ); }\nvec4  square( in vec4 a )  { return vec4( a.x*a.x, a.y*a.y, a.z*a.z, a.w*a.w ); }\nfloat saturate( in float a ) { return clamp( a, 0.0, 1.0 ); }\nvec2  saturate( in vec2 a )  { return clamp( a, 0.0, 1.0 ); }\nvec3  saturate( in vec3 a )  { return clamp( a, 0.0, 1.0 ); }\nvec4  saturate( in vec4 a )  { return clamp( a, 0.0, 1.0 ); }\nfloat average( in float a ) { return a; }\nfloat average( in vec2 a )  { return ( a.x + a.y) * 0.5; }\nfloat average( in vec3 a )  { return ( a.x + a.y + a.z) / 3.0; }\nfloat average( in vec4 a )  { return ( a.x + a.y + a.z + a.w) * 0.25; }\nfloat whiteCompliment( in float a ) { return saturate( 1.0 - a ); }\nvec2  whiteCompliment( in vec2 a )  { return saturate( vec2(1.0) - a ); }\nvec3  whiteCompliment( in vec3 a )  { return saturate( vec3(1.0) - a ); }\nvec4  whiteCompliment( in vec4 a )  { return saturate( vec4(1.0) - a ); }\nvec3 transformDirection( in vec3 normal, in mat4 matrix ) {\n\treturn normalize( ( matrix * vec4( normal, 0.0 ) ).xyz );\n}\n// http://en.wikibooks.org/wiki/GLSL_Programming/Applying_Matrix_Transformations\nvec3 inverseTransformDirection( in vec3 normal, in mat4 matrix ) {\n\treturn normalize( ( vec4( normal, 0.0 ) * matrix ).xyz );\n}\nvec3 projectOnPlane(in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal) {\n\tfloat distance = dot( planeNormal, point-pointOnPlane );\n\treturn point - distance * planeNormal;\n}\nfloat sideOfPlane( in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\n\treturn sign( dot( point - pointOnPlane, planeNormal ) );\n}\nvec3 linePlaneIntersect( in vec3 pointOnLine, in vec3 lineDirection, in vec3 pointOnPlane, in vec3 planeNormal ) {\n\treturn pointOnLine + lineDirection * ( dot( planeNormal, pointOnPlane - pointOnLine ) / dot( planeNormal, lineDirection ) );\n}\nfloat calcLightAttenuation( float lightDistance, float cutoffDistance, float decayExponent ) {\n\tif ( decayExponent > 0.0 ) {\n\t  return pow( saturate( 1.0 - lightDistance / cutoffDistance ), decayExponent );\n\t}\n\treturn 1.0;\n}\n\nvec3 inputToLinear( in vec3 a ) {\n#ifdef GAMMA_INPUT\n\treturn pow( a, vec3( float( GAMMA_FACTOR ) ) );\n#else\n\treturn a;\n#endif\n}\nvec3 linearToOutput( in vec3 a ) {\n#ifdef GAMMA_OUTPUT\n\treturn pow( a, vec3( 1.0 / float( GAMMA_FACTOR ) ) );\n#else\n\treturn a;\n#endif\n}\n";
THREE.ShaderChunk.alphatest_fragment="#ifdef ALPHATEST\n\n\tif ( diffuseColor.a < ALPHATEST ) discard;\n\n#endif\n";THREE.ShaderChunk.lights_lambert_vertex="vLightFront = vec3( 0.0 );\n\n#ifdef DOUBLE_SIDED\n\n\tvLightBack = vec3( 0.0 );\n\n#endif\n\ntransformedNormal = normalize( transformedNormal );\n\n#if MAX_DIR_LIGHTS > 0\n\nfor( int i = 0; i < MAX_DIR_LIGHTS; i ++ ) {\n\n\tvec3 dirVector = transformDirection( directionalLightDirection[ i ], viewMatrix );\n\n\tfloat dotProduct = dot( transformedNormal, dirVector );\n\tvec3 directionalLightWeighting = vec3( max( dotProduct, 0.0 ) );\n\n\t#ifdef DOUBLE_SIDED\n\n\t\tvec3 directionalLightWeightingBack = vec3( max( -dotProduct, 0.0 ) );\n\n\t\t#ifdef WRAP_AROUND\n\n\t\t\tvec3 directionalLightWeightingHalfBack = vec3( max( -0.5 * dotProduct + 0.5, 0.0 ) );\n\n\t\t#endif\n\n\t#endif\n\n\t#ifdef WRAP_AROUND\n\n\t\tvec3 directionalLightWeightingHalf = vec3( max( 0.5 * dotProduct + 0.5, 0.0 ) );\n\t\tdirectionalLightWeighting = mix( directionalLightWeighting, directionalLightWeightingHalf, wrapRGB );\n\n\t\t#ifdef DOUBLE_SIDED\n\n\t\t\tdirectionalLightWeightingBack = mix( directionalLightWeightingBack, directionalLightWeightingHalfBack, wrapRGB );\n\n\t\t#endif\n\n\t#endif\n\n\tvLightFront += directionalLightColor[ i ] * directionalLightWeighting;\n\n\t#ifdef DOUBLE_SIDED\n\n\t\tvLightBack += directionalLightColor[ i ] * directionalLightWeightingBack;\n\n\t#endif\n\n}\n\n#endif\n\n#if MAX_POINT_LIGHTS > 0\n\n\tfor( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\n\n\t\tvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\n\t\tvec3 lVector = lPosition.xyz - mvPosition.xyz;\n\n\t\tfloat attenuation = calcLightAttenuation( length( lVector ), pointLightDistance[ i ], pointLightDecay[ i ] );\n\n\t\tlVector = normalize( lVector );\n\t\tfloat dotProduct = dot( transformedNormal, lVector );\n\n\t\tvec3 pointLightWeighting = vec3( max( dotProduct, 0.0 ) );\n\n\t\t#ifdef DOUBLE_SIDED\n\n\t\t\tvec3 pointLightWeightingBack = vec3( max( -dotProduct, 0.0 ) );\n\n\t\t\t#ifdef WRAP_AROUND\n\n\t\t\t\tvec3 pointLightWeightingHalfBack = vec3( max( -0.5 * dotProduct + 0.5, 0.0 ) );\n\n\t\t\t#endif\n\n\t\t#endif\n\n\t\t#ifdef WRAP_AROUND\n\n\t\t\tvec3 pointLightWeightingHalf = vec3( max( 0.5 * dotProduct + 0.5, 0.0 ) );\n\t\t\tpointLightWeighting = mix( pointLightWeighting, pointLightWeightingHalf, wrapRGB );\n\n\t\t\t#ifdef DOUBLE_SIDED\n\n\t\t\t\tpointLightWeightingBack = mix( pointLightWeightingBack, pointLightWeightingHalfBack, wrapRGB );\n\n\t\t\t#endif\n\n\t\t#endif\n\n\t\tvLightFront += pointLightColor[ i ] * pointLightWeighting * attenuation;\n\n\t\t#ifdef DOUBLE_SIDED\n\n\t\t\tvLightBack += pointLightColor[ i ] * pointLightWeightingBack * attenuation;\n\n\t\t#endif\n\n\t}\n\n#endif\n\n#if MAX_SPOT_LIGHTS > 0\n\n\tfor( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {\n\n\t\tvec4 lPosition = viewMatrix * vec4( spotLightPosition[ i ], 1.0 );\n\t\tvec3 lVector = lPosition.xyz - mvPosition.xyz;\n\n\t\tfloat spotEffect = dot( spotLightDirection[ i ], normalize( spotLightPosition[ i ] - worldPosition.xyz ) );\n\n\t\tif ( spotEffect > spotLightAngleCos[ i ] ) {\n\n\t\t\tspotEffect = max( pow( max( spotEffect, 0.0 ), spotLightExponent[ i ] ), 0.0 );\n\n\t\t\tfloat attenuation = calcLightAttenuation( length( lVector ), spotLightDistance[ i ], spotLightDecay[ i ] );\n\n\t\t\tlVector = normalize( lVector );\n\n\t\t\tfloat dotProduct = dot( transformedNormal, lVector );\n\t\t\tvec3 spotLightWeighting = vec3( max( dotProduct, 0.0 ) );\n\n\t\t\t#ifdef DOUBLE_SIDED\n\n\t\t\t\tvec3 spotLightWeightingBack = vec3( max( -dotProduct, 0.0 ) );\n\n\t\t\t\t#ifdef WRAP_AROUND\n\n\t\t\t\t\tvec3 spotLightWeightingHalfBack = vec3( max( -0.5 * dotProduct + 0.5, 0.0 ) );\n\n\t\t\t\t#endif\n\n\t\t\t#endif\n\n\t\t\t#ifdef WRAP_AROUND\n\n\t\t\t\tvec3 spotLightWeightingHalf = vec3( max( 0.5 * dotProduct + 0.5, 0.0 ) );\n\t\t\t\tspotLightWeighting = mix( spotLightWeighting, spotLightWeightingHalf, wrapRGB );\n\n\t\t\t\t#ifdef DOUBLE_SIDED\n\n\t\t\t\t\tspotLightWeightingBack = mix( spotLightWeightingBack, spotLightWeightingHalfBack, wrapRGB );\n\n\t\t\t\t#endif\n\n\t\t\t#endif\n\n\t\t\tvLightFront += spotLightColor[ i ] * spotLightWeighting * attenuation * spotEffect;\n\n\t\t\t#ifdef DOUBLE_SIDED\n\n\t\t\t\tvLightBack += spotLightColor[ i ] * spotLightWeightingBack * attenuation * spotEffect;\n\n\t\t\t#endif\n\n\t\t}\n\n\t}\n\n#endif\n\n#if MAX_HEMI_LIGHTS > 0\n\n\tfor( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {\n\n\t\tvec3 lVector = transformDirection( hemisphereLightDirection[ i ], viewMatrix );\n\n\t\tfloat dotProduct = dot( transformedNormal, lVector );\n\n\t\tfloat hemiDiffuseWeight = 0.5 * dotProduct + 0.5;\n\t\tfloat hemiDiffuseWeightBack = -0.5 * dotProduct + 0.5;\n\n\t\tvLightFront += mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );\n\n\t\t#ifdef DOUBLE_SIDED\n\n\t\t\tvLightBack += mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeightBack );\n\n\t\t#endif\n\n\t}\n\n#endif\n\nvLightFront += ambientLightColor;\n\n#ifdef DOUBLE_SIDED\n\n\tvLightBack += ambientLightColor;\n\n#endif\n";
THREE.ShaderChunk.map_particle_pars_fragment="#ifdef USE_MAP\n\n\tuniform vec4 offsetRepeat;\n\tuniform sampler2D map;\n\n#endif\n";THREE.ShaderChunk.default_vertex="#ifdef USE_SKINNING\n\n\tvec4 mvPosition = modelViewMatrix * skinned;\n\n#elif defined( USE_MORPHTARGETS )\n\n\tvec4 mvPosition = modelViewMatrix * vec4( morphed, 1.0 );\n\n#else\n\n\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\n\n#endif\n\ngl_Position = projectionMatrix * mvPosition;\n";
THREE.ShaderChunk.map_pars_fragment="#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP )\n\n\tvarying vec2 vUv;\n\n#endif\n\n#ifdef USE_MAP\n\n\tuniform sampler2D map;\n\n#endif";THREE.ShaderChunk.skinnormal_vertex="#ifdef USE_SKINNING\n\n\tmat4 skinMatrix = mat4( 0.0 );\n\tskinMatrix += skinWeight.x * boneMatX;\n\tskinMatrix += skinWeight.y * boneMatY;\n\tskinMatrix += skinWeight.z * boneMatZ;\n\tskinMatrix += skinWeight.w * boneMatW;\n\tskinMatrix  = bindMatrixInverse * skinMatrix * bindMatrix;\n\n\t#ifdef USE_MORPHNORMALS\n\n\tvec4 skinnedNormal = skinMatrix * vec4( morphedNormal, 0.0 );\n\n\t#else\n\n\tvec4 skinnedNormal = skinMatrix * vec4( normal, 0.0 );\n\n\t#endif\n\n#endif\n";
THREE.ShaderChunk.logdepthbuf_pars_vertex="#ifdef USE_LOGDEPTHBUF\n\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\n\t\tvarying float vFragDepth;\n\n\t#endif\n\n\tuniform float logDepthBufFC;\n\n#endif";THREE.ShaderChunk.lightmap_pars_vertex="#ifdef USE_LIGHTMAP\n\n\tvarying vec2 vUv2;\n\n#endif";THREE.ShaderChunk.lights_phong_fragment="#ifndef FLAT_SHADED\n\n\tvec3 normal = normalize( vNormal );\n\n\t#ifdef DOUBLE_SIDED\n\n\t\tnormal = normal * ( -1.0 + 2.0 * float( gl_FrontFacing ) );\n\n\t#endif\n\n#else\n\n\tvec3 fdx = dFdx( vViewPosition );\n\tvec3 fdy = dFdy( vViewPosition );\n\tvec3 normal = normalize( cross( fdx, fdy ) );\n\n#endif\n\nvec3 viewPosition = normalize( vViewPosition );\n\n#ifdef USE_NORMALMAP\n\n\tnormal = perturbNormal2Arb( -vViewPosition, normal );\n\n#elif defined( USE_BUMPMAP )\n\n\tnormal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd() );\n\n#endif\n\nvec3 totalDiffuseLight = vec3( 0.0 );\nvec3 totalSpecularLight = vec3( 0.0 );\n\n#if MAX_POINT_LIGHTS > 0\n\n\tfor ( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\n\n\t\tvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\n\t\tvec3 lVector = lPosition.xyz + vViewPosition.xyz;\n\n\t\tfloat attenuation = calcLightAttenuation( length( lVector ), pointLightDistance[ i ], pointLightDecay[ i ] );\n\n\t\tlVector = normalize( lVector );\n\n\t\t// diffuse\n\n\t\tfloat dotProduct = dot( normal, lVector );\n\n\t\t#ifdef WRAP_AROUND\n\n\t\t\tfloat pointDiffuseWeightFull = max( dotProduct, 0.0 );\n\t\t\tfloat pointDiffuseWeightHalf = max( 0.5 * dotProduct + 0.5, 0.0 );\n\n\t\t\tvec3 pointDiffuseWeight = mix( vec3( pointDiffuseWeightFull ), vec3( pointDiffuseWeightHalf ), wrapRGB );\n\n\t\t#else\n\n\t\t\tfloat pointDiffuseWeight = max( dotProduct, 0.0 );\n\n\t\t#endif\n\n\t\ttotalDiffuseLight += pointLightColor[ i ] * pointDiffuseWeight * attenuation;\n\n\t\t\t\t// specular\n\n\t\tvec3 pointHalfVector = normalize( lVector + viewPosition );\n\t\tfloat pointDotNormalHalf = max( dot( normal, pointHalfVector ), 0.0 );\n\t\tfloat pointSpecularWeight = specularStrength * max( pow( pointDotNormalHalf, shininess ), 0.0 );\n\n\t\tfloat specularNormalization = ( shininess + 2.0 ) / 8.0;\n\n\t\tvec3 schlick = specular + vec3( 1.0 - specular ) * pow( max( 1.0 - dot( lVector, pointHalfVector ), 0.0 ), 5.0 );\n\t\ttotalSpecularLight += schlick * pointLightColor[ i ] * pointSpecularWeight * pointDiffuseWeight * attenuation * specularNormalization;\n\n\t}\n\n#endif\n\n#if MAX_SPOT_LIGHTS > 0\n\n\tfor ( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {\n\n\t\tvec4 lPosition = viewMatrix * vec4( spotLightPosition[ i ], 1.0 );\n\t\tvec3 lVector = lPosition.xyz + vViewPosition.xyz;\n\n\t\tfloat attenuation = calcLightAttenuation( length( lVector ), spotLightDistance[ i ], spotLightDecay[ i ] );\n\n\t\tlVector = normalize( lVector );\n\n\t\tfloat spotEffect = dot( spotLightDirection[ i ], normalize( spotLightPosition[ i ] - vWorldPosition ) );\n\n\t\tif ( spotEffect > spotLightAngleCos[ i ] ) {\n\n\t\t\tspotEffect = max( pow( max( spotEffect, 0.0 ), spotLightExponent[ i ] ), 0.0 );\n\n\t\t\t// diffuse\n\n\t\t\tfloat dotProduct = dot( normal, lVector );\n\n\t\t\t#ifdef WRAP_AROUND\n\n\t\t\t\tfloat spotDiffuseWeightFull = max( dotProduct, 0.0 );\n\t\t\t\tfloat spotDiffuseWeightHalf = max( 0.5 * dotProduct + 0.5, 0.0 );\n\n\t\t\t\tvec3 spotDiffuseWeight = mix( vec3( spotDiffuseWeightFull ), vec3( spotDiffuseWeightHalf ), wrapRGB );\n\n\t\t\t#else\n\n\t\t\t\tfloat spotDiffuseWeight = max( dotProduct, 0.0 );\n\n\t\t\t#endif\n\n\t\t\ttotalDiffuseLight += spotLightColor[ i ] * spotDiffuseWeight * attenuation * spotEffect;\n\n\t\t\t// specular\n\n\t\t\tvec3 spotHalfVector = normalize( lVector + viewPosition );\n\t\t\tfloat spotDotNormalHalf = max( dot( normal, spotHalfVector ), 0.0 );\n\t\t\tfloat spotSpecularWeight = specularStrength * max( pow( spotDotNormalHalf, shininess ), 0.0 );\n\n\t\t\tfloat specularNormalization = ( shininess + 2.0 ) / 8.0;\n\n\t\t\tvec3 schlick = specular + vec3( 1.0 - specular ) * pow( max( 1.0 - dot( lVector, spotHalfVector ), 0.0 ), 5.0 );\n\t\t\ttotalSpecularLight += schlick * spotLightColor[ i ] * spotSpecularWeight * spotDiffuseWeight * attenuation * specularNormalization * spotEffect;\n\n\t\t}\n\n\t}\n\n#endif\n\n#if MAX_DIR_LIGHTS > 0\n\n\tfor( int i = 0; i < MAX_DIR_LIGHTS; i ++ ) {\n\n\t\tvec3 dirVector = transformDirection( directionalLightDirection[ i ], viewMatrix );\n\n\t\t// diffuse\n\n\t\tfloat dotProduct = dot( normal, dirVector );\n\n\t\t#ifdef WRAP_AROUND\n\n\t\t\tfloat dirDiffuseWeightFull = max( dotProduct, 0.0 );\n\t\t\tfloat dirDiffuseWeightHalf = max( 0.5 * dotProduct + 0.5, 0.0 );\n\n\t\t\tvec3 dirDiffuseWeight = mix( vec3( dirDiffuseWeightFull ), vec3( dirDiffuseWeightHalf ), wrapRGB );\n\n\t\t#else\n\n\t\t\tfloat dirDiffuseWeight = max( dotProduct, 0.0 );\n\n\t\t#endif\n\n\t\ttotalDiffuseLight += directionalLightColor[ i ] * dirDiffuseWeight;\n\n\t\t// specular\n\n\t\tvec3 dirHalfVector = normalize( dirVector + viewPosition );\n\t\tfloat dirDotNormalHalf = max( dot( normal, dirHalfVector ), 0.0 );\n\t\tfloat dirSpecularWeight = specularStrength * max( pow( dirDotNormalHalf, shininess ), 0.0 );\n\n\t\t/*\n\t\t// fresnel term from skin shader\n\t\tconst float F0 = 0.128;\n\n\t\tfloat base = 1.0 - dot( viewPosition, dirHalfVector );\n\t\tfloat exponential = pow( base, 5.0 );\n\n\t\tfloat fresnel = exponential + F0 * ( 1.0 - exponential );\n\t\t*/\n\n\t\t/*\n\t\t// fresnel term from fresnel shader\n\t\tconst float mFresnelBias = 0.08;\n\t\tconst float mFresnelScale = 0.3;\n\t\tconst float mFresnelPower = 5.0;\n\n\t\tfloat fresnel = mFresnelBias + mFresnelScale * pow( 1.0 + dot( normalize( -viewPosition ), normal ), mFresnelPower );\n\t\t*/\n\n\t\tfloat specularNormalization = ( shininess + 2.0 ) / 8.0;\n\n\t\t// \t\tdirSpecular += specular * directionalLightColor[ i ] * dirSpecularWeight * dirDiffuseWeight * specularNormalization * fresnel;\n\n\t\tvec3 schlick = specular + vec3( 1.0 - specular ) * pow( max( 1.0 - dot( dirVector, dirHalfVector ), 0.0 ), 5.0 );\n\t\ttotalSpecularLight += schlick * directionalLightColor[ i ] * dirSpecularWeight * dirDiffuseWeight * specularNormalization;\n\n\n\t}\n\n#endif\n\n#if MAX_HEMI_LIGHTS > 0\n\n\tfor( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {\n\n\t\tvec3 lVector = transformDirection( hemisphereLightDirection[ i ], viewMatrix );\n\n\t\t// diffuse\n\n\t\tfloat dotProduct = dot( normal, lVector );\n\t\tfloat hemiDiffuseWeight = 0.5 * dotProduct + 0.5;\n\n\t\tvec3 hemiColor = mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );\n\n\t\ttotalDiffuseLight += hemiColor;\n\n\t\t// specular (sky light)\n\n\t\tvec3 hemiHalfVectorSky = normalize( lVector + viewPosition );\n\t\tfloat hemiDotNormalHalfSky = 0.5 * dot( normal, hemiHalfVectorSky ) + 0.5;\n\t\tfloat hemiSpecularWeightSky = specularStrength * max( pow( max( hemiDotNormalHalfSky, 0.0 ), shininess ), 0.0 );\n\n\t\t// specular (ground light)\n\n\t\tvec3 lVectorGround = -lVector;\n\n\t\tvec3 hemiHalfVectorGround = normalize( lVectorGround + viewPosition );\n\t\tfloat hemiDotNormalHalfGround = 0.5 * dot( normal, hemiHalfVectorGround ) + 0.5;\n\t\tfloat hemiSpecularWeightGround = specularStrength * max( pow( max( hemiDotNormalHalfGround, 0.0 ), shininess ), 0.0 );\n\n\t\tfloat dotProductGround = dot( normal, lVectorGround );\n\n\t\tfloat specularNormalization = ( shininess + 2.0 ) / 8.0;\n\n\t\tvec3 schlickSky = specular + vec3( 1.0 - specular ) * pow( max( 1.0 - dot( lVector, hemiHalfVectorSky ), 0.0 ), 5.0 );\n\t\tvec3 schlickGround = specular + vec3( 1.0 - specular ) * pow( max( 1.0 - dot( lVectorGround, hemiHalfVectorGround ), 0.0 ), 5.0 );\n\t\ttotalSpecularLight += hemiColor * specularNormalization * ( schlickSky * hemiSpecularWeightSky * max( dotProduct, 0.0 ) + schlickGround * hemiSpecularWeightGround * max( dotProductGround, 0.0 ) );\n\n\t}\n\n#endif\n\n#ifdef METAL\n\n\toutgoingLight += diffuseColor.rgb * ( totalDiffuseLight + ambientLightColor ) * specular + totalSpecularLight + emissive;\n\n#else\n\n\toutgoingLight += diffuseColor.rgb * ( totalDiffuseLight + ambientLightColor ) + totalSpecularLight + emissive;\n\n#endif\n";
THREE.ShaderChunk.fog_pars_fragment="#ifdef USE_FOG\n\n\tuniform vec3 fogColor;\n\n\t#ifdef FOG_EXP2\n\n\t\tuniform float fogDensity;\n\n\t#else\n\n\t\tuniform float fogNear;\n\t\tuniform float fogFar;\n\t#endif\n\n#endif";THREE.ShaderChunk.morphnormal_vertex="#ifdef USE_MORPHNORMALS\n\n\tvec3 morphedNormal = vec3( 0.0 );\n\n\tmorphedNormal += ( morphNormal0 - normal ) * morphTargetInfluences[ 0 ];\n\tmorphedNormal += ( morphNormal1 - normal ) * morphTargetInfluences[ 1 ];\n\tmorphedNormal += ( morphNormal2 - normal ) * morphTargetInfluences[ 2 ];\n\tmorphedNormal += ( morphNormal3 - normal ) * morphTargetInfluences[ 3 ];\n\n\tmorphedNormal += normal;\n\n#endif";
THREE.ShaderChunk.envmap_pars_fragment="#ifdef USE_ENVMAP\n\n\tuniform float reflectivity;\n\t#ifdef ENVMAP_TYPE_CUBE\n\t\tuniform samplerCube envMap;\n\t#else\n\t\tuniform sampler2D envMap;\n\t#endif\n\tuniform float flipEnvMap;\n\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\n\n\t\tuniform float refractionRatio;\n\n\t#else\n\n\t\tvarying vec3 vReflect;\n\n\t#endif\n\n#endif\n";THREE.ShaderChunk.logdepthbuf_fragment="#if defined(USE_LOGDEPTHBUF) && defined(USE_LOGDEPTHBUF_EXT)\n\n\tgl_FragDepthEXT = log2(vFragDepth) * logDepthBufFC * 0.5;\n\n#endif";
THREE.ShaderChunk.normalmap_pars_fragment="#ifdef USE_NORMALMAP\n\n\tuniform sampler2D normalMap;\n\tuniform vec2 normalScale;\n\n\t// Per-Pixel Tangent Space Normal Mapping\n\t// http://hacksoflife.blogspot.ch/2009/11/per-pixel-tangent-space-normal-mapping.html\n\n\tvec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm ) {\n\n\t\tvec3 q0 = dFdx( eye_pos.xyz );\n\t\tvec3 q1 = dFdy( eye_pos.xyz );\n\t\tvec2 st0 = dFdx( vUv.st );\n\t\tvec2 st1 = dFdy( vUv.st );\n\n\t\tvec3 S = normalize( q0 * st1.t - q1 * st0.t );\n\t\tvec3 T = normalize( -q0 * st1.s + q1 * st0.s );\n\t\tvec3 N = normalize( surf_norm );\n\n\t\tvec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\n\t\tmapN.xy = normalScale * mapN.xy;\n\t\tmat3 tsn = mat3( S, T, N );\n\t\treturn normalize( tsn * mapN );\n\n\t}\n\n#endif\n";
THREE.ShaderChunk.lights_phong_pars_vertex="#if MAX_SPOT_LIGHTS > 0 || defined( USE_BUMPMAP ) || defined( USE_ENVMAP )\n\n\tvarying vec3 vWorldPosition;\n\n#endif\n";THREE.ShaderChunk.lightmap_pars_fragment="#ifdef USE_LIGHTMAP\n\n\tvarying vec2 vUv2;\n\tuniform sampler2D lightMap;\n\n#endif";THREE.ShaderChunk.shadowmap_vertex="#ifdef USE_SHADOWMAP\n\n\tfor( int i = 0; i < MAX_SHADOWS; i ++ ) {\n\n\t\tvShadowCoord[ i ] = shadowMatrix[ i ] * worldPosition;\n\n\t}\n\n#endif";
THREE.ShaderChunk.lights_phong_vertex="#if MAX_SPOT_LIGHTS > 0 || defined( USE_BUMPMAP ) || defined( USE_ENVMAP )\n\n\tvWorldPosition = worldPosition.xyz;\n\n#endif";THREE.ShaderChunk.map_fragment="#ifdef USE_MAP\n\n\tvec4 texelColor = texture2D( map, vUv );\n\n\ttexelColor.xyz = inputToLinear( texelColor.xyz );\n\n\tdiffuseColor *= texelColor;\n\n#endif";THREE.ShaderChunk.lightmap_vertex="#ifdef USE_LIGHTMAP\n\n\tvUv2 = uv2;\n\n#endif";THREE.ShaderChunk.map_particle_fragment="#ifdef USE_MAP\n\n\tdiffuseColor *= texture2D( map, vec2( gl_PointCoord.x, 1.0 - gl_PointCoord.y ) * offsetRepeat.zw + offsetRepeat.xy );\n\n#endif\n";
THREE.ShaderChunk.color_pars_fragment="#ifdef USE_COLOR\n\n\tvarying vec3 vColor;\n\n#endif\n";THREE.ShaderChunk.color_vertex="#ifdef USE_COLOR\n\n\tvColor.xyz = inputToLinear( color.xyz );\n\n#endif";THREE.ShaderChunk.skinning_vertex="#ifdef USE_SKINNING\n\n\t#ifdef USE_MORPHTARGETS\n\n\tvec4 skinVertex = bindMatrix * vec4( morphed, 1.0 );\n\n\t#else\n\n\tvec4 skinVertex = bindMatrix * vec4( position, 1.0 );\n\n\t#endif\n\n\tvec4 skinned = vec4( 0.0 );\n\tskinned += boneMatX * skinVertex * skinWeight.x;\n\tskinned += boneMatY * skinVertex * skinWeight.y;\n\tskinned += boneMatZ * skinVertex * skinWeight.z;\n\tskinned += boneMatW * skinVertex * skinWeight.w;\n\tskinned  = bindMatrixInverse * skinned;\n\n#endif\n";
THREE.ShaderChunk.envmap_pars_vertex="#if defined( USE_ENVMAP ) && ! defined( USE_BUMPMAP ) && ! defined( USE_NORMALMAP ) && ! defined( PHONG )\n\n\tvarying vec3 vReflect;\n\n\tuniform float refractionRatio;\n\n#endif\n";THREE.ShaderChunk.linear_to_gamma_fragment="\n\toutgoingLight = linearToOutput( outgoingLight );\n";THREE.ShaderChunk.color_pars_vertex="#ifdef USE_COLOR\n\n\tvarying vec3 vColor;\n\n#endif";THREE.ShaderChunk.lights_lambert_pars_vertex="uniform vec3 ambientLightColor;\n\n#if MAX_DIR_LIGHTS > 0\n\n\tuniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\n\tuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\n\n#endif\n\n#if MAX_HEMI_LIGHTS > 0\n\n\tuniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];\n\tuniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];\n\tuniform vec3 hemisphereLightDirection[ MAX_HEMI_LIGHTS ];\n\n#endif\n\n#if MAX_POINT_LIGHTS > 0\n\n\tuniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\n\tuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\n\tuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\n\tuniform float pointLightDecay[ MAX_POINT_LIGHTS ];\n\n#endif\n\n#if MAX_SPOT_LIGHTS > 0\n\n\tuniform vec3 spotLightColor[ MAX_SPOT_LIGHTS ];\n\tuniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];\n\tuniform vec3 spotLightDirection[ MAX_SPOT_LIGHTS ];\n\tuniform float spotLightDistance[ MAX_SPOT_LIGHTS ];\n\tuniform float spotLightAngleCos[ MAX_SPOT_LIGHTS ];\n\tuniform float spotLightExponent[ MAX_SPOT_LIGHTS ];\n\tuniform float spotLightDecay[ MAX_SPOT_LIGHTS ];\n\n#endif\n\n#ifdef WRAP_AROUND\n\n\tuniform vec3 wrapRGB;\n\n#endif\n";
THREE.ShaderChunk.map_pars_vertex="#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP )\n\n\tvarying vec2 vUv;\n\tuniform vec4 offsetRepeat;\n\n#endif\n";THREE.ShaderChunk.envmap_fragment="#ifdef USE_ENVMAP\n\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\n\n\t\tvec3 cameraToVertex = normalize( vWorldPosition - cameraPosition );\n\n\t\t// Transforming Normal Vectors with the Inverse Transformation\n\t\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\n\t\t\tvec3 reflectVec = reflect( cameraToVertex, worldNormal );\n\n\t\t#else\n\n\t\t\tvec3 reflectVec = refract( cameraToVertex, worldNormal, refractionRatio );\n\n\t\t#endif\n\n\t#else\n\n\t\tvec3 reflectVec = vReflect;\n\n\t#endif\n\n\t#ifdef DOUBLE_SIDED\n\t\tfloat flipNormal = ( -1.0 + 2.0 * float( gl_FrontFacing ) );\n\t#else\n\t\tfloat flipNormal = 1.0;\n\t#endif\n\n\t#ifdef ENVMAP_TYPE_CUBE\n\t\tvec4 envColor = textureCube( envMap, flipNormal * vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\n\n\t#elif defined( ENVMAP_TYPE_EQUIREC )\n\t\tvec2 sampleUV;\n\t\tsampleUV.y = saturate( flipNormal * reflectVec.y * 0.5 + 0.5 );\n\t\tsampleUV.x = atan( flipNormal * reflectVec.z, flipNormal * reflectVec.x ) * RECIPROCAL_PI2 + 0.5;\n\t\tvec4 envColor = texture2D( envMap, sampleUV );\n\n\t#elif defined( ENVMAP_TYPE_SPHERE )\n\t\tvec3 reflectView = flipNormal * normalize((viewMatrix * vec4( reflectVec, 0.0 )).xyz + vec3(0.0,0.0,1.0));\n\t\tvec4 envColor = texture2D( envMap, reflectView.xy * 0.5 + 0.5 );\n\t#endif\n\n\tenvColor.xyz = inputToLinear( envColor.xyz );\n\n\t#ifdef ENVMAP_BLENDING_MULTIPLY\n\n\t\toutgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\n\n\t#elif defined( ENVMAP_BLENDING_MIX )\n\n\t\toutgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\n\n\t#elif defined( ENVMAP_BLENDING_ADD )\n\n\t\toutgoingLight += envColor.xyz * specularStrength * reflectivity;\n\n\t#endif\n\n#endif\n";
THREE.ShaderChunk.specularmap_pars_fragment="#ifdef USE_SPECULARMAP\n\n\tuniform sampler2D specularMap;\n\n#endif";THREE.ShaderChunk.logdepthbuf_vertex="#ifdef USE_LOGDEPTHBUF\n\n\tgl_Position.z = log2(max( EPSILON, gl_Position.w + 1.0 )) * logDepthBufFC;\n\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\n\t\tvFragDepth = 1.0 + gl_Position.w;\n\n#else\n\n\t\tgl_Position.z = (gl_Position.z - 1.0) * gl_Position.w;\n\n\t#endif\n\n#endif";THREE.ShaderChunk.morphtarget_pars_vertex="#ifdef USE_MORPHTARGETS\n\n\t#ifndef USE_MORPHNORMALS\n\n\tuniform float morphTargetInfluences[ 8 ];\n\n\t#else\n\n\tuniform float morphTargetInfluences[ 4 ];\n\n\t#endif\n\n#endif";
THREE.ShaderChunk.specularmap_fragment="float specularStrength;\n\n#ifdef USE_SPECULARMAP\n\n\tvec4 texelSpecular = texture2D( specularMap, vUv );\n\tspecularStrength = texelSpecular.r;\n\n#else\n\n\tspecularStrength = 1.0;\n\n#endif";THREE.ShaderChunk.fog_fragment="#ifdef USE_FOG\n\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\n\t\tfloat depth = gl_FragDepthEXT / gl_FragCoord.w;\n\n\t#else\n\n\t\tfloat depth = gl_FragCoord.z / gl_FragCoord.w;\n\n\t#endif\n\n\t#ifdef FOG_EXP2\n\n\t\tfloat fogFactor = exp2( - square( fogDensity ) * square( depth ) * LOG2 );\n\t\tfogFactor = whiteCompliment( fogFactor );\n\n\t#else\n\n\t\tfloat fogFactor = smoothstep( fogNear, fogFar, depth );\n\n\t#endif\n\t\n\toutgoingLight = mix( outgoingLight, fogColor, fogFactor );\n\n#endif";
THREE.ShaderChunk.bumpmap_pars_fragment="#ifdef USE_BUMPMAP\n\n\tuniform sampler2D bumpMap;\n\tuniform float bumpScale;\n\n\t// Derivative maps - bump mapping unparametrized surfaces by Morten Mikkelsen\n\t// http://mmikkelsen3d.blogspot.sk/2011/07/derivative-maps.html\n\n\t// Evaluate the derivative of the height w.r.t. screen-space using forward differencing (listing 2)\n\n\tvec2 dHdxy_fwd() {\n\n\t\tvec2 dSTdx = dFdx( vUv );\n\t\tvec2 dSTdy = dFdy( vUv );\n\n\t\tfloat Hll = bumpScale * texture2D( bumpMap, vUv ).x;\n\t\tfloat dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\n\t\tfloat dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\n\n\t\treturn vec2( dBx, dBy );\n\n\t}\n\n\tvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy ) {\n\n\t\tvec3 vSigmaX = dFdx( surf_pos );\n\t\tvec3 vSigmaY = dFdy( surf_pos );\n\t\tvec3 vN = surf_norm;\t\t// normalized\n\n\t\tvec3 R1 = cross( vSigmaY, vN );\n\t\tvec3 R2 = cross( vN, vSigmaX );\n\n\t\tfloat fDet = dot( vSigmaX, R1 );\n\n\t\tvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\n\t\treturn normalize( abs( fDet ) * surf_norm - vGrad );\n\n\t}\n\n#endif\n";
THREE.ShaderChunk.defaultnormal_vertex="#ifdef USE_SKINNING\n\n\tvec3 objectNormal = skinnedNormal.xyz;\n\n#elif defined( USE_MORPHNORMALS )\n\n\tvec3 objectNormal = morphedNormal;\n\n#else\n\n\tvec3 objectNormal = normal;\n\n#endif\n\n#ifdef FLIP_SIDED\n\n\tobjectNormal = -objectNormal;\n\n#endif\n\nvec3 transformedNormal = normalMatrix * objectNormal;\n";THREE.ShaderChunk.lights_phong_pars_fragment="uniform vec3 ambientLightColor;\n\n#if MAX_DIR_LIGHTS > 0\n\n\tuniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\n\tuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\n\n#endif\n\n#if MAX_HEMI_LIGHTS > 0\n\n\tuniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];\n\tuniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];\n\tuniform vec3 hemisphereLightDirection[ MAX_HEMI_LIGHTS ];\n\n#endif\n\n#if MAX_POINT_LIGHTS > 0\n\n\tuniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\n\n\tuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\n\tuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\n\tuniform float pointLightDecay[ MAX_POINT_LIGHTS ];\n\n#endif\n\n#if MAX_SPOT_LIGHTS > 0\n\n\tuniform vec3 spotLightColor[ MAX_SPOT_LIGHTS ];\n\tuniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];\n\tuniform vec3 spotLightDirection[ MAX_SPOT_LIGHTS ];\n\tuniform float spotLightAngleCos[ MAX_SPOT_LIGHTS ];\n\tuniform float spotLightExponent[ MAX_SPOT_LIGHTS ];\n\tuniform float spotLightDistance[ MAX_SPOT_LIGHTS ];\n\tuniform float spotLightDecay[ MAX_SPOT_LIGHTS ];\n\n#endif\n\n#if MAX_SPOT_LIGHTS > 0 || defined( USE_BUMPMAP ) || defined( USE_ENVMAP )\n\n\tvarying vec3 vWorldPosition;\n\n#endif\n\n#ifdef WRAP_AROUND\n\n\tuniform vec3 wrapRGB;\n\n#endif\n\nvarying vec3 vViewPosition;\n\n#ifndef FLAT_SHADED\n\n\tvarying vec3 vNormal;\n\n#endif\n";
THREE.ShaderChunk.skinbase_vertex="#ifdef USE_SKINNING\n\n\tmat4 boneMatX = getBoneMatrix( skinIndex.x );\n\tmat4 boneMatY = getBoneMatrix( skinIndex.y );\n\tmat4 boneMatZ = getBoneMatrix( skinIndex.z );\n\tmat4 boneMatW = getBoneMatrix( skinIndex.w );\n\n#endif";THREE.ShaderChunk.map_vertex="#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP )\n\n\tvUv = uv * offsetRepeat.zw + offsetRepeat.xy;\n\n#endif";
THREE.ShaderChunk.lightmap_fragment="#ifdef USE_LIGHTMAP\n\n\toutgoingLight *= diffuseColor.xyz * texture2D( lightMap, vUv2 ).xyz;\n\n#endif";THREE.ShaderChunk.shadowmap_pars_vertex="#ifdef USE_SHADOWMAP\n\n\tvarying vec4 vShadowCoord[ MAX_SHADOWS ];\n\tuniform mat4 shadowMatrix[ MAX_SHADOWS ];\n\n#endif";THREE.ShaderChunk.color_fragment="#ifdef USE_COLOR\n\n\tdiffuseColor.rgb *= vColor;\n\n#endif";THREE.ShaderChunk.morphtarget_vertex="#ifdef USE_MORPHTARGETS\n\n\tvec3 morphed = vec3( 0.0 );\n\tmorphed += ( morphTarget0 - position ) * morphTargetInfluences[ 0 ];\n\tmorphed += ( morphTarget1 - position ) * morphTargetInfluences[ 1 ];\n\tmorphed += ( morphTarget2 - position ) * morphTargetInfluences[ 2 ];\n\tmorphed += ( morphTarget3 - position ) * morphTargetInfluences[ 3 ];\n\n\t#ifndef USE_MORPHNORMALS\n\n\tmorphed += ( morphTarget4 - position ) * morphTargetInfluences[ 4 ];\n\tmorphed += ( morphTarget5 - position ) * morphTargetInfluences[ 5 ];\n\tmorphed += ( morphTarget6 - position ) * morphTargetInfluences[ 6 ];\n\tmorphed += ( morphTarget7 - position ) * morphTargetInfluences[ 7 ];\n\n\t#endif\n\n\tmorphed += position;\n\n#endif";
THREE.ShaderChunk.envmap_vertex="#if defined( USE_ENVMAP ) && ! defined( USE_BUMPMAP ) && ! defined( USE_NORMALMAP ) && ! defined( PHONG )\n\n\tvec3 worldNormal = transformDirection( objectNormal, modelMatrix );\n\n\tvec3 cameraToVertex = normalize( worldPosition.xyz - cameraPosition );\n\n\t#ifdef ENVMAP_MODE_REFLECTION\n\n\t\tvReflect = reflect( cameraToVertex, worldNormal );\n\n\t#else\n\n\t\tvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\n\n\t#endif\n\n#endif\n";
THREE.ShaderChunk.shadowmap_fragment="#ifdef USE_SHADOWMAP\n\n\t#ifdef SHADOWMAP_DEBUG\n\n\t\tvec3 frustumColors[3];\n\t\tfrustumColors[0] = vec3( 1.0, 0.5, 0.0 );\n\t\tfrustumColors[1] = vec3( 0.0, 1.0, 0.8 );\n\t\tfrustumColors[2] = vec3( 0.0, 0.5, 1.0 );\n\n\t#endif\n\n\t#ifdef SHADOWMAP_CASCADE\n\n\t\tint inFrustumCount = 0;\n\n\t#endif\n\n\tfloat fDepth;\n\tvec3 shadowColor = vec3( 1.0 );\n\n\tfor( int i = 0; i < MAX_SHADOWS; i ++ ) {\n\n\t\tvec3 shadowCoord = vShadowCoord[ i ].xyz / vShadowCoord[ i ].w;\n\n\t\t\t\t// if ( something && something ) breaks ATI OpenGL shader compiler\n\t\t\t\t// if ( all( something, something ) ) using this instead\n\n\t\tbvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\n\t\tbool inFrustum = all( inFrustumVec );\n\n\t\t\t\t// don't shadow pixels outside of light frustum\n\t\t\t\t// use just first frustum (for cascades)\n\t\t\t\t// don't shadow pixels behind far plane of light frustum\n\n\t\t#ifdef SHADOWMAP_CASCADE\n\n\t\t\tinFrustumCount += int( inFrustum );\n\t\t\tbvec3 frustumTestVec = bvec3( inFrustum, inFrustumCount == 1, shadowCoord.z <= 1.0 );\n\n\t\t#else\n\n\t\t\tbvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\n\n\t\t#endif\n\n\t\tbool frustumTest = all( frustumTestVec );\n\n\t\tif ( frustumTest ) {\n\n\t\t\tshadowCoord.z += shadowBias[ i ];\n\n\t\t\t#if defined( SHADOWMAP_TYPE_PCF )\n\n\t\t\t\t\t\t// Percentage-close filtering\n\t\t\t\t\t\t// (9 pixel kernel)\n\t\t\t\t\t\t// http://fabiensanglard.net/shadowmappingPCF/\n\n\t\t\t\tfloat shadow = 0.0;\n\n\t\t/*\n\t\t\t\t\t\t// nested loops breaks shader compiler / validator on some ATI cards when using OpenGL\n\t\t\t\t\t\t// must enroll loop manually\n\n\t\t\t\tfor ( float y = -1.25; y <= 1.25; y += 1.25 )\n\t\t\t\t\tfor ( float x = -1.25; x <= 1.25; x += 1.25 ) {\n\n\t\t\t\t\t\tvec4 rgbaDepth = texture2D( shadowMap[ i ], vec2( x * xPixelOffset, y * yPixelOffset ) + shadowCoord.xy );\n\n\t\t\t\t\t\t\t\t// doesn't seem to produce any noticeable visual difference compared to simple texture2D lookup\n\t\t\t\t\t\t\t\t//vec4 rgbaDepth = texture2DProj( shadowMap[ i ], vec4( vShadowCoord[ i ].w * ( vec2( x * xPixelOffset, y * yPixelOffset ) + shadowCoord.xy ), 0.05, vShadowCoord[ i ].w ) );\n\n\t\t\t\t\t\tfloat fDepth = unpackDepth( rgbaDepth );\n\n\t\t\t\t\t\tif ( fDepth < shadowCoord.z )\n\t\t\t\t\t\t\tshadow += 1.0;\n\n\t\t\t\t}\n\n\t\t\t\tshadow /= 9.0;\n\n\t\t*/\n\n\t\t\t\tconst float shadowDelta = 1.0 / 9.0;\n\n\t\t\t\tfloat xPixelOffset = 1.0 / shadowMapSize[ i ].x;\n\t\t\t\tfloat yPixelOffset = 1.0 / shadowMapSize[ i ].y;\n\n\t\t\t\tfloat dx0 = -1.25 * xPixelOffset;\n\t\t\t\tfloat dy0 = -1.25 * yPixelOffset;\n\t\t\t\tfloat dx1 = 1.25 * xPixelOffset;\n\t\t\t\tfloat dy1 = 1.25 * yPixelOffset;\n\n\t\t\t\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy0 ) ) );\n\t\t\t\tif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\n\n\t\t\t\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy0 ) ) );\n\t\t\t\tif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\n\n\t\t\t\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy0 ) ) );\n\t\t\t\tif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\n\n\t\t\t\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, 0.0 ) ) );\n\t\t\t\tif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\n\n\t\t\t\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy ) );\n\t\t\t\tif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\n\n\t\t\t\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, 0.0 ) ) );\n\t\t\t\tif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\n\n\t\t\t\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy1 ) ) );\n\t\t\t\tif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\n\n\t\t\t\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy1 ) ) );\n\t\t\t\tif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\n\n\t\t\t\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy1 ) ) );\n\t\t\t\tif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\n\n\t\t\t\tshadowColor = shadowColor * vec3( ( 1.0 - shadowDarkness[ i ] * shadow ) );\n\n\t\t\t#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\n\n\t\t\t\t\t\t// Percentage-close filtering\n\t\t\t\t\t\t// (9 pixel kernel)\n\t\t\t\t\t\t// http://fabiensanglard.net/shadowmappingPCF/\n\n\t\t\t\tfloat shadow = 0.0;\n\n\t\t\t\tfloat xPixelOffset = 1.0 / shadowMapSize[ i ].x;\n\t\t\t\tfloat yPixelOffset = 1.0 / shadowMapSize[ i ].y;\n\n\t\t\t\tfloat dx0 = -1.0 * xPixelOffset;\n\t\t\t\tfloat dy0 = -1.0 * yPixelOffset;\n\t\t\t\tfloat dx1 = 1.0 * xPixelOffset;\n\t\t\t\tfloat dy1 = 1.0 * yPixelOffset;\n\n\t\t\t\tmat3 shadowKernel;\n\t\t\t\tmat3 depthKernel;\n\n\t\t\t\tdepthKernel[0][0] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy0 ) ) );\n\t\t\t\tdepthKernel[0][1] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, 0.0 ) ) );\n\t\t\t\tdepthKernel[0][2] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy1 ) ) );\n\t\t\t\tdepthKernel[1][0] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy0 ) ) );\n\t\t\t\tdepthKernel[1][1] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy ) );\n\t\t\t\tdepthKernel[1][2] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy1 ) ) );\n\t\t\t\tdepthKernel[2][0] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy0 ) ) );\n\t\t\t\tdepthKernel[2][1] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, 0.0 ) ) );\n\t\t\t\tdepthKernel[2][2] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy1 ) ) );\n\n\t\t\t\tvec3 shadowZ = vec3( shadowCoord.z );\n\t\t\t\tshadowKernel[0] = vec3(lessThan(depthKernel[0], shadowZ ));\n\t\t\t\tshadowKernel[0] *= vec3(0.25);\n\n\t\t\t\tshadowKernel[1] = vec3(lessThan(depthKernel[1], shadowZ ));\n\t\t\t\tshadowKernel[1] *= vec3(0.25);\n\n\t\t\t\tshadowKernel[2] = vec3(lessThan(depthKernel[2], shadowZ ));\n\t\t\t\tshadowKernel[2] *= vec3(0.25);\n\n\t\t\t\tvec2 fractionalCoord = 1.0 - fract( shadowCoord.xy * shadowMapSize[i].xy );\n\n\t\t\t\tshadowKernel[0] = mix( shadowKernel[1], shadowKernel[0], fractionalCoord.x );\n\t\t\t\tshadowKernel[1] = mix( shadowKernel[2], shadowKernel[1], fractionalCoord.x );\n\n\t\t\t\tvec4 shadowValues;\n\t\t\t\tshadowValues.x = mix( shadowKernel[0][1], shadowKernel[0][0], fractionalCoord.y );\n\t\t\t\tshadowValues.y = mix( shadowKernel[0][2], shadowKernel[0][1], fractionalCoord.y );\n\t\t\t\tshadowValues.z = mix( shadowKernel[1][1], shadowKernel[1][0], fractionalCoord.y );\n\t\t\t\tshadowValues.w = mix( shadowKernel[1][2], shadowKernel[1][1], fractionalCoord.y );\n\n\t\t\t\tshadow = dot( shadowValues, vec4( 1.0 ) );\n\n\t\t\t\tshadowColor = shadowColor * vec3( ( 1.0 - shadowDarkness[ i ] * shadow ) );\n\n\t\t\t#else\n\n\t\t\t\tvec4 rgbaDepth = texture2D( shadowMap[ i ], shadowCoord.xy );\n\t\t\t\tfloat fDepth = unpackDepth( rgbaDepth );\n\n\t\t\t\tif ( fDepth < shadowCoord.z )\n\n\t\t// spot with multiple shadows is darker\n\n\t\t\t\t\tshadowColor = shadowColor * vec3( 1.0 - shadowDarkness[ i ] );\n\n\t\t// spot with multiple shadows has the same color as single shadow spot\n\n\t\t// \t\t\t\t\tshadowColor = min( shadowColor, vec3( shadowDarkness[ i ] ) );\n\n\t\t\t#endif\n\n\t\t}\n\n\n\t\t#ifdef SHADOWMAP_DEBUG\n\n\t\t\t#ifdef SHADOWMAP_CASCADE\n\n\t\t\t\tif ( inFrustum && inFrustumCount == 1 ) outgoingLight *= frustumColors[ i ];\n\n\t\t\t#else\n\n\t\t\t\tif ( inFrustum ) outgoingLight *= frustumColors[ i ];\n\n\t\t\t#endif\n\n\t\t#endif\n\n\t}\n\n\t// NOTE: I am unsure if this is correct in linear space.  -bhouston, Dec 29, 2014\n\tshadowColor = inputToLinear( shadowColor );\n\n\toutgoingLight = outgoingLight * shadowColor;\n\n#endif\n";
THREE.ShaderChunk.worldpos_vertex="#if defined( USE_ENVMAP ) || defined( PHONG ) || defined( LAMBERT ) || defined ( USE_SHADOWMAP )\n\n\t#ifdef USE_SKINNING\n\n\t\tvec4 worldPosition = modelMatrix * skinned;\n\n\t#elif defined( USE_MORPHTARGETS )\n\n\t\tvec4 worldPosition = modelMatrix * vec4( morphed, 1.0 );\n\n\t#else\n\n\t\tvec4 worldPosition = modelMatrix * vec4( position, 1.0 );\n\n\t#endif\n\n#endif\n";THREE.ShaderChunk.shadowmap_pars_fragment="#ifdef USE_SHADOWMAP\n\n\tuniform sampler2D shadowMap[ MAX_SHADOWS ];\n\tuniform vec2 shadowMapSize[ MAX_SHADOWS ];\n\n\tuniform float shadowDarkness[ MAX_SHADOWS ];\n\tuniform float shadowBias[ MAX_SHADOWS ];\n\n\tvarying vec4 vShadowCoord[ MAX_SHADOWS ];\n\n\tfloat unpackDepth( const in vec4 rgba_depth ) {\n\n\t\tconst vec4 bit_shift = vec4( 1.0 / ( 256.0 * 256.0 * 256.0 ), 1.0 / ( 256.0 * 256.0 ), 1.0 / 256.0, 1.0 );\n\t\tfloat depth = dot( rgba_depth, bit_shift );\n\t\treturn depth;\n\n\t}\n\n#endif";
THREE.ShaderChunk.skinning_pars_vertex="#ifdef USE_SKINNING\n\n\tuniform mat4 bindMatrix;\n\tuniform mat4 bindMatrixInverse;\n\n\t#ifdef BONE_TEXTURE\n\n\t\tuniform sampler2D boneTexture;\n\t\tuniform int boneTextureWidth;\n\t\tuniform int boneTextureHeight;\n\n\t\tmat4 getBoneMatrix( const in float i ) {\n\n\t\t\tfloat j = i * 4.0;\n\t\t\tfloat x = mod( j, float( boneTextureWidth ) );\n\t\t\tfloat y = floor( j / float( boneTextureWidth ) );\n\n\t\t\tfloat dx = 1.0 / float( boneTextureWidth );\n\t\t\tfloat dy = 1.0 / float( boneTextureHeight );\n\n\t\t\ty = dy * ( y + 0.5 );\n\n\t\t\tvec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\n\t\t\tvec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\n\t\t\tvec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\n\t\t\tvec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\n\n\t\t\tmat4 bone = mat4( v1, v2, v3, v4 );\n\n\t\t\treturn bone;\n\n\t\t}\n\n\t#else\n\n\t\tuniform mat4 boneGlobalMatrices[ MAX_BONES ];\n\n\t\tmat4 getBoneMatrix( const in float i ) {\n\n\t\t\tmat4 bone = boneGlobalMatrices[ int(i) ];\n\t\t\treturn bone;\n\n\t\t}\n\n\t#endif\n\n#endif\n";
THREE.ShaderChunk.logdepthbuf_pars_fragment="#ifdef USE_LOGDEPTHBUF\n\n\tuniform float logDepthBufFC;\n\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\n\t\t#extension GL_EXT_frag_depth : enable\n\t\tvarying float vFragDepth;\n\n\t#endif\n\n#endif";THREE.ShaderChunk.alphamap_fragment="#ifdef USE_ALPHAMAP\n\n\tdiffuseColor.a *= texture2D( alphaMap, vUv ).g;\n\n#endif\n";THREE.ShaderChunk.alphamap_pars_fragment="#ifdef USE_ALPHAMAP\n\n\tuniform sampler2D alphaMap;\n\n#endif\n";
THREE.UniformsUtils={merge:function(a){for(var b={},d=0;d<a.length;d++){var e=this.clone(a[d]),f;for(f in e)b[f]=e[f]}return b},clone:function(a){var b={},d;for(d in a){b[d]={};for(var e in a[d]){var f=a[d][e];b[d][e]=f instanceof THREE.Color||f instanceof THREE.Vector2||f instanceof THREE.Vector3||f instanceof THREE.Vector4||f instanceof THREE.Matrix4||f instanceof THREE.Texture?f.clone():f instanceof Array?f.slice():f}}return b}};
THREE.UniformsLib={common:{diffuse:{type:"c",value:new THREE.Color(15658734)},opacity:{type:"f",value:1},map:{type:"t",value:null},offsetRepeat:{type:"v4",value:new THREE.Vector4(0,0,1,1)},lightMap:{type:"t",value:null},specularMap:{type:"t",value:null},alphaMap:{type:"t",value:null},envMap:{type:"t",value:null},flipEnvMap:{type:"f",value:-1},reflectivity:{type:"f",value:1},refractionRatio:{type:"f",value:.98},morphTargetInfluences:{type:"f",value:0}},bump:{bumpMap:{type:"t",value:null},bumpScale:{type:"f",
value:1}},normalmap:{normalMap:{type:"t",value:null},normalScale:{type:"v2",value:new THREE.Vector2(1,1)}},fog:{fogDensity:{type:"f",value:2.5E-4},fogNear:{type:"f",value:1},fogFar:{type:"f",value:2E3},fogColor:{type:"c",value:new THREE.Color(16777215)}},lights:{ambientLightColor:{type:"fv",value:[]},directionalLightDirection:{type:"fv",value:[]},directionalLightColor:{type:"fv",value:[]},hemisphereLightDirection:{type:"fv",value:[]},hemisphereLightSkyColor:{type:"fv",value:[]},hemisphereLightGroundColor:{type:"fv",
value:[]},pointLightColor:{type:"fv",value:[]},pointLightPosition:{type:"fv",value:[]},pointLightDistance:{type:"fv1",value:[]},pointLightDecay:{type:"fv1",value:[]},spotLightColor:{type:"fv",value:[]},spotLightPosition:{type:"fv",value:[]},spotLightDirection:{type:"fv",value:[]},spotLightDistance:{type:"fv1",value:[]},spotLightAngleCos:{type:"fv1",value:[]},spotLightExponent:{type:"fv1",value:[]},spotLightDecay:{type:"fv1",value:[]}},particle:{psColor:{type:"c",value:new THREE.Color(15658734)},opacity:{type:"f",
value:1},size:{type:"f",value:1},scale:{type:"f",value:1},map:{type:"t",value:null},offsetRepeat:{type:"v4",value:new THREE.Vector4(0,0,1,1)},fogDensity:{type:"f",value:2.5E-4},fogNear:{type:"f",value:1},fogFar:{type:"f",value:2E3},fogColor:{type:"c",value:new THREE.Color(16777215)}},shadowmap:{shadowMap:{type:"tv",value:[]},shadowMapSize:{type:"v2v",value:[]},shadowBias:{type:"fv1",value:[]},shadowDarkness:{type:"fv1",value:[]},shadowMatrix:{type:"m4v",value:[]}}};
THREE.ShaderLib={basic:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.fog,THREE.UniformsLib.shadowmap]),vertexShader:[THREE.ShaderChunk.common,THREE.ShaderChunk.map_pars_vertex,THREE.ShaderChunk.lightmap_pars_vertex,THREE.ShaderChunk.envmap_pars_vertex,THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,THREE.ShaderChunk.logdepthbuf_pars_vertex,"void main() {",
THREE.ShaderChunk.map_vertex,THREE.ShaderChunk.lightmap_vertex,THREE.ShaderChunk.color_vertex,THREE.ShaderChunk.skinbase_vertex,"\t#ifdef USE_ENVMAP",THREE.ShaderChunk.morphnormal_vertex,THREE.ShaderChunk.skinnormal_vertex,THREE.ShaderChunk.defaultnormal_vertex,"\t#endif",THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.default_vertex,THREE.ShaderChunk.logdepthbuf_vertex,THREE.ShaderChunk.worldpos_vertex,THREE.ShaderChunk.envmap_vertex,THREE.ShaderChunk.shadowmap_vertex,
"}"].join("\n"),fragmentShader:["uniform vec3 diffuse;\nuniform float opacity;",THREE.ShaderChunk.common,THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.map_pars_fragment,THREE.ShaderChunk.alphamap_pars_fragment,THREE.ShaderChunk.lightmap_pars_fragment,THREE.ShaderChunk.envmap_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,THREE.ShaderChunk.specularmap_pars_fragment,THREE.ShaderChunk.logdepthbuf_pars_fragment,"void main() {\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );",
THREE.ShaderChunk.logdepthbuf_fragment,THREE.ShaderChunk.map_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.alphamap_fragment,THREE.ShaderChunk.alphatest_fragment,THREE.ShaderChunk.specularmap_fragment,"\toutgoingLight = diffuseColor.rgb;",THREE.ShaderChunk.lightmap_fragment,THREE.ShaderChunk.envmap_fragment,THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.linear_to_gamma_fragment,THREE.ShaderChunk.fog_fragment,"\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n}"].join("\n")},
lambert:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.fog,THREE.UniformsLib.lights,THREE.UniformsLib.shadowmap,{emissive:{type:"c",value:new THREE.Color(0)},wrapRGB:{type:"v3",value:new THREE.Vector3(1,1,1)}}]),vertexShader:["#define LAMBERT\nvarying vec3 vLightFront;\n#ifdef DOUBLE_SIDED\n\tvarying vec3 vLightBack;\n#endif",THREE.ShaderChunk.common,THREE.ShaderChunk.map_pars_vertex,THREE.ShaderChunk.lightmap_pars_vertex,THREE.ShaderChunk.envmap_pars_vertex,THREE.ShaderChunk.lights_lambert_pars_vertex,
THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,THREE.ShaderChunk.logdepthbuf_pars_vertex,"void main() {",THREE.ShaderChunk.map_vertex,THREE.ShaderChunk.lightmap_vertex,THREE.ShaderChunk.color_vertex,THREE.ShaderChunk.morphnormal_vertex,THREE.ShaderChunk.skinbase_vertex,THREE.ShaderChunk.skinnormal_vertex,THREE.ShaderChunk.defaultnormal_vertex,THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.skinning_vertex,
THREE.ShaderChunk.default_vertex,THREE.ShaderChunk.logdepthbuf_vertex,THREE.ShaderChunk.worldpos_vertex,THREE.ShaderChunk.envmap_vertex,THREE.ShaderChunk.lights_lambert_vertex,THREE.ShaderChunk.shadowmap_vertex,"}"].join("\n"),fragmentShader:["uniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float opacity;\nvarying vec3 vLightFront;\n#ifdef DOUBLE_SIDED\n\tvarying vec3 vLightBack;\n#endif",THREE.ShaderChunk.common,THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.map_pars_fragment,THREE.ShaderChunk.alphamap_pars_fragment,
THREE.ShaderChunk.lightmap_pars_fragment,THREE.ShaderChunk.envmap_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,THREE.ShaderChunk.specularmap_pars_fragment,THREE.ShaderChunk.logdepthbuf_pars_fragment,"void main() {\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );",THREE.ShaderChunk.logdepthbuf_fragment,THREE.ShaderChunk.map_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.alphamap_fragment,THREE.ShaderChunk.alphatest_fragment,
THREE.ShaderChunk.specularmap_fragment,"\t#ifdef DOUBLE_SIDED\n\t\tif ( gl_FrontFacing )\n\t\t\toutgoingLight += diffuseColor.rgb * vLightFront + emissive;\n\t\telse\n\t\t\toutgoingLight += diffuseColor.rgb * vLightBack + emissive;\n\t#else\n\t\toutgoingLight += diffuseColor.rgb * vLightFront + emissive;\n\t#endif",THREE.ShaderChunk.lightmap_fragment,THREE.ShaderChunk.envmap_fragment,THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.linear_to_gamma_fragment,THREE.ShaderChunk.fog_fragment,"\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n}"].join("\n")},
phong:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.bump,THREE.UniformsLib.normalmap,THREE.UniformsLib.fog,THREE.UniformsLib.lights,THREE.UniformsLib.shadowmap,{emissive:{type:"c",value:new THREE.Color(0)},specular:{type:"c",value:new THREE.Color(1118481)},shininess:{type:"f",value:30},wrapRGB:{type:"v3",value:new THREE.Vector3(1,1,1)}}]),vertexShader:["#define PHONG\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif",THREE.ShaderChunk.common,
THREE.ShaderChunk.map_pars_vertex,THREE.ShaderChunk.lightmap_pars_vertex,THREE.ShaderChunk.envmap_pars_vertex,THREE.ShaderChunk.lights_phong_pars_vertex,THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,THREE.ShaderChunk.logdepthbuf_pars_vertex,"void main() {",THREE.ShaderChunk.map_vertex,THREE.ShaderChunk.lightmap_vertex,THREE.ShaderChunk.color_vertex,THREE.ShaderChunk.morphnormal_vertex,THREE.ShaderChunk.skinbase_vertex,
THREE.ShaderChunk.skinnormal_vertex,THREE.ShaderChunk.defaultnormal_vertex,"#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n#endif",THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.default_vertex,THREE.ShaderChunk.logdepthbuf_vertex,"\tvViewPosition = -mvPosition.xyz;",THREE.ShaderChunk.worldpos_vertex,THREE.ShaderChunk.envmap_vertex,THREE.ShaderChunk.lights_phong_vertex,THREE.ShaderChunk.shadowmap_vertex,"}"].join("\n"),fragmentShader:["#define PHONG\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform vec3 specular;\nuniform float shininess;\nuniform float opacity;",
THREE.ShaderChunk.common,THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.map_pars_fragment,THREE.ShaderChunk.alphamap_pars_fragment,THREE.ShaderChunk.lightmap_pars_fragment,THREE.ShaderChunk.envmap_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.lights_phong_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,THREE.ShaderChunk.bumpmap_pars_fragment,THREE.ShaderChunk.normalmap_pars_fragment,THREE.ShaderChunk.specularmap_pars_fragment,THREE.ShaderChunk.logdepthbuf_pars_fragment,
"void main() {\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );",THREE.ShaderChunk.logdepthbuf_fragment,THREE.ShaderChunk.map_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.alphamap_fragment,THREE.ShaderChunk.alphatest_fragment,THREE.ShaderChunk.specularmap_fragment,THREE.ShaderChunk.lights_phong_fragment,THREE.ShaderChunk.lightmap_fragment,THREE.ShaderChunk.envmap_fragment,THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.linear_to_gamma_fragment,
THREE.ShaderChunk.fog_fragment,"\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n}"].join("\n")},particle_basic:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.particle,THREE.UniformsLib.shadowmap]),vertexShader:["uniform float size;\nuniform float scale;",THREE.ShaderChunk.common,THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,THREE.ShaderChunk.logdepthbuf_pars_vertex,"void main() {",THREE.ShaderChunk.color_vertex,"\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\n\t#ifdef USE_SIZEATTENUATION\n\t\tgl_PointSize = size * ( scale / length( mvPosition.xyz ) );\n\t#else\n\t\tgl_PointSize = size;\n\t#endif\n\tgl_Position = projectionMatrix * mvPosition;",
THREE.ShaderChunk.logdepthbuf_vertex,THREE.ShaderChunk.worldpos_vertex,THREE.ShaderChunk.shadowmap_vertex,"}"].join("\n"),fragmentShader:["uniform vec3 psColor;\nuniform float opacity;",THREE.ShaderChunk.common,THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.map_particle_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,THREE.ShaderChunk.logdepthbuf_pars_fragment,"void main() {\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( psColor, opacity );",
THREE.ShaderChunk.logdepthbuf_fragment,THREE.ShaderChunk.map_particle_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.alphatest_fragment,"\toutgoingLight = diffuseColor.rgb;",THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.fog_fragment,"\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n}"].join("\n")},dashed:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.fog,{scale:{type:"f",value:1},dashSize:{type:"f",value:1},totalSize:{type:"f",value:2}}]),
vertexShader:["uniform float scale;\nattribute float lineDistance;\nvarying float vLineDistance;",THREE.ShaderChunk.common,THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.logdepthbuf_pars_vertex,"void main() {",THREE.ShaderChunk.color_vertex,"\tvLineDistance = scale * lineDistance;\n\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\n\tgl_Position = projectionMatrix * mvPosition;",THREE.ShaderChunk.logdepthbuf_vertex,"}"].join("\n"),fragmentShader:["uniform vec3 diffuse;\nuniform float opacity;\nuniform float dashSize;\nuniform float totalSize;\nvarying float vLineDistance;",
THREE.ShaderChunk.common,THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.logdepthbuf_pars_fragment,"void main() {\n\tif ( mod( vLineDistance, totalSize ) > dashSize ) {\n\t\tdiscard;\n\t}\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );",THREE.ShaderChunk.logdepthbuf_fragment,THREE.ShaderChunk.color_fragment,"\toutgoingLight = diffuseColor.rgb;",THREE.ShaderChunk.fog_fragment,"\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n}"].join("\n")},
depth:{uniforms:{mNear:{type:"f",value:1},mFar:{type:"f",value:2E3},opacity:{type:"f",value:1}},vertexShader:[THREE.ShaderChunk.common,THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.logdepthbuf_pars_vertex,"void main() {",THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.default_vertex,THREE.ShaderChunk.logdepthbuf_vertex,"}"].join("\n"),fragmentShader:["uniform float mNear;\nuniform float mFar;\nuniform float opacity;",THREE.ShaderChunk.common,THREE.ShaderChunk.logdepthbuf_pars_fragment,
"void main() {",THREE.ShaderChunk.logdepthbuf_fragment,"\t#ifdef USE_LOGDEPTHBUF_EXT\n\t\tfloat depth = gl_FragDepthEXT / gl_FragCoord.w;\n\t#else\n\t\tfloat depth = gl_FragCoord.z / gl_FragCoord.w;\n\t#endif\n\tfloat color = 1.0 - smoothstep( mNear, mFar, depth );\n\tgl_FragColor = vec4( vec3( color ), opacity );\n}"].join("\n")},normal:{uniforms:{opacity:{type:"f",value:1}},vertexShader:["varying vec3 vNormal;",THREE.ShaderChunk.common,THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.logdepthbuf_pars_vertex,
"void main() {\n\tvNormal = normalize( normalMatrix * normal );",THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.default_vertex,THREE.ShaderChunk.logdepthbuf_vertex,"}"].join("\n"),fragmentShader:["uniform float opacity;\nvarying vec3 vNormal;",THREE.ShaderChunk.common,THREE.ShaderChunk.logdepthbuf_pars_fragment,"void main() {\n\tgl_FragColor = vec4( 0.5 * normalize( vNormal ) + 0.5, opacity );",THREE.ShaderChunk.logdepthbuf_fragment,"}"].join("\n")},cube:{uniforms:{tCube:{type:"t",value:null},
tFlip:{type:"f",value:-1}},vertexShader:["varying vec3 vWorldPosition;",THREE.ShaderChunk.common,THREE.ShaderChunk.logdepthbuf_pars_vertex,"void main() {\n\tvWorldPosition = transformDirection( position, modelMatrix );\n\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );",THREE.ShaderChunk.logdepthbuf_vertex,"}"].join("\n"),fragmentShader:["uniform samplerCube tCube;\nuniform float tFlip;\nvarying vec3 vWorldPosition;",THREE.ShaderChunk.common,THREE.ShaderChunk.logdepthbuf_pars_fragment,
"void main() {\n\tgl_FragColor = textureCube( tCube, vec3( tFlip * vWorldPosition.x, vWorldPosition.yz ) );",THREE.ShaderChunk.logdepthbuf_fragment,"}"].join("\n")},equirect:{uniforms:{tEquirect:{type:"t",value:null},tFlip:{type:"f",value:-1}},vertexShader:["varying vec3 vWorldPosition;",THREE.ShaderChunk.common,THREE.ShaderChunk.logdepthbuf_pars_vertex,"void main() {\n\tvWorldPosition = transformDirection( position, modelMatrix );\n\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );",
THREE.ShaderChunk.logdepthbuf_vertex,"}"].join("\n"),fragmentShader:["uniform sampler2D tEquirect;\nuniform float tFlip;\nvarying vec3 vWorldPosition;",THREE.ShaderChunk.common,THREE.ShaderChunk.logdepthbuf_pars_fragment,"void main() {\nvec3 direction = normalize( vWorldPosition );\nvec2 sampleUV;\nsampleUV.y = saturate( tFlip * direction.y * -0.5 + 0.5 );\nsampleUV.x = atan( direction.z, direction.x ) * RECIPROCAL_PI2 + 0.5;\ngl_FragColor = texture2D( tEquirect, sampleUV );",THREE.ShaderChunk.logdepthbuf_fragment,
"}"].join("\n")},depthRGBA:{uniforms:{},vertexShader:[THREE.ShaderChunk.common,THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.logdepthbuf_pars_vertex,"void main() {",THREE.ShaderChunk.skinbase_vertex,THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.default_vertex,THREE.ShaderChunk.logdepthbuf_vertex,"}"].join("\n"),fragmentShader:[THREE.ShaderChunk.common,THREE.ShaderChunk.logdepthbuf_pars_fragment,"vec4 pack_depth( const in float depth ) {\n\tconst vec4 bit_shift = vec4( 256.0 * 256.0 * 256.0, 256.0 * 256.0, 256.0, 1.0 );\n\tconst vec4 bit_mask = vec4( 0.0, 1.0 / 256.0, 1.0 / 256.0, 1.0 / 256.0 );\n\tvec4 res = mod( depth * bit_shift * vec4( 255 ), vec4( 256 ) ) / vec4( 255 );\n\tres -= res.xxyz * bit_mask;\n\treturn res;\n}\nvoid main() {",
THREE.ShaderChunk.logdepthbuf_fragment,"\t#ifdef USE_LOGDEPTHBUF_EXT\n\t\tgl_FragData[ 0 ] = pack_depth( gl_FragDepthEXT );\n\t#else\n\t\tgl_FragData[ 0 ] = pack_depth( gl_FragCoord.z );\n\t#endif\n}"].join("\n")}};
THREE.WebGLRenderer=function(a){function b(a){var b=a.geometry;a=a.material;var d=b.vertices.length;if(a.attributes){void 0===b.__webglCustomAttributesList&&(b.__webglCustomAttributesList=[]);for(var e in a.attributes){var f=a.attributes[e];if(!f.__webglInitialized||f.createUniqueBuffers){f.__webglInitialized=!0;var g=1;"v2"===f.type?g=2:"v3"===f.type?g=3:"v4"===f.type?g=4:"c"===f.type&&(g=3);f.size=g;f.array=new Float32Array(d*g);f.buffer=n.createBuffer();f.buffer.belongsToAttribute=e;f.needsUpdate=
!0}b.__webglCustomAttributesList.push(f)}}}function d(a,b){return a.material instanceof THREE.MeshFaceMaterial?a.material.materials[b.materialIndex]:a.material}function e(a,b,d,e){d=d.attributes;var f=b.attributes;b=b.attributesKeys;for(var g=0,h=b.length;g<h;g++){var k=b[g],l=f[k];if(0<=l){var p=d[k];void 0!==p?(k=p.itemSize,n.bindBuffer(n.ARRAY_BUFFER,p.buffer),Y.enableAttribute(l),n.vertexAttribPointer(l,k,n.FLOAT,!1,0,e*k*4)):void 0!==a.defaultAttributeValues&&(2===a.defaultAttributeValues[k].length?
n.vertexAttrib2fv(l,a.defaultAttributeValues[k]):3===a.defaultAttributeValues[k].length&&n.vertexAttrib3fv(l,a.defaultAttributeValues[k]))}}Y.disableUnusedAttributes()}function f(a,b){return a.object.renderOrder!==b.object.renderOrder?a.object.renderOrder-b.object.renderOrder:a.material.id!==b.material.id?a.material.id-b.material.id:a.z!==b.z?a.z-b.z:a.id-b.id}function g(a,b){return a.object.renderOrder!==b.object.renderOrder?a.object.renderOrder-b.object.renderOrder:a.z!==b.z?b.z-a.z:a.id-b.id}function h(a,
b){return b[0]-a[0]}function k(a){if(!1!==a.visible){if(!(a instanceof THREE.Scene||a instanceof THREE.Group)){void 0===a.__webglInit&&(a.__webglInit=!0,a._modelViewMatrix=new THREE.Matrix4,a._normalMatrix=new THREE.Matrix3,a.addEventListener("removed",zb));var d=a.geometry;if(void 0!==d&&void 0===d.__webglInit)if(d.__webglInit=!0,d.addEventListener("dispose",mb),d instanceof THREE.BufferGeometry)D.info.memory.geometries++;else if(a instanceof THREE.Mesh)r(a,d);else if(a instanceof THREE.Line){if(void 0===
d.__webglVertexBuffer){d.__webglVertexBuffer=n.createBuffer();d.__webglColorBuffer=n.createBuffer();d.__webglLineDistanceBuffer=n.createBuffer();D.info.memory.geometries++;var e=d.vertices.length;d.__vertexArray=new Float32Array(3*e);d.__colorArray=new Float32Array(3*e);d.__lineDistanceArray=new Float32Array(1*e);d.__webglLineCount=e;b(a);d.verticesNeedUpdate=!0;d.colorsNeedUpdate=!0;d.lineDistancesNeedUpdate=!0}}else a instanceof THREE.PointCloud&&void 0===d.__webglVertexBuffer&&(d.__webglVertexBuffer=
n.createBuffer(),d.__webglColorBuffer=n.createBuffer(),D.info.memory.geometries++,e=d.vertices.length,d.__vertexArray=new Float32Array(3*e),d.__colorArray=new Float32Array(3*e),d.__webglParticleCount=e,b(a),d.verticesNeedUpdate=!0,d.colorsNeedUpdate=!0);if(void 0===a.__webglActive)if(a.__webglActive=!0,a instanceof THREE.Mesh)if(d instanceof THREE.BufferGeometry)p(ea,d,a);else{if(d instanceof THREE.Geometry)for(var d=Xa[d.id],e=0,f=d.length;e<f;e++)p(ea,d[e],a)}else a instanceof THREE.Line||a instanceof
THREE.PointCloud?p(ea,d,a):(a instanceof THREE.ImmediateRenderObject||a.immediateRenderCallback)&&ta.push({id:null,object:a,opaque:null,transparent:null,z:0});if(a instanceof THREE.Light)fa.push(a);else if(a instanceof THREE.Sprite)$a.push(a);else if(a instanceof THREE.LensFlare)ab.push(a);else if((d=ea[a.id])&&(!1===a.frustumCulled||!0===fb.intersectsObject(a)))for(e=0,f=d.length;e<f;e++){var g=d[e],h=g,l=h.object,m=h.buffer,q=l.geometry,l=l.material;l instanceof THREE.MeshFaceMaterial?(l=l.materials[q instanceof
THREE.BufferGeometry?0:m.materialIndex],h.material=l,l.transparent?Ta.push(h):Na.push(h)):l&&(h.material=l,l.transparent?Ta.push(h):Na.push(h));g.render=!0;!0===D.sortObjects&&(za.setFromMatrixPosition(a.matrixWorld),za.applyProjection(gb),g.z=za.z)}}e=0;for(f=a.children.length;e<f;e++)k(a.children[e])}}function l(a,b,d,e,f){for(var g,h=0,k=a.length;h<k;h++){g=a[h];var l=g.object,n=g.buffer;y(l,b);if(f)g=f;else{g=g.material;if(!g)continue;w(g)}D.setMaterialFaces(g);n instanceof THREE.BufferGeometry?
D.renderBufferDirect(b,d,e,g,n,l):D.renderBuffer(b,d,e,g,n,l)}}function m(a,b,d,e,f,g){for(var h,k=0,l=a.length;k<l;k++){h=a[k];var n=h.object;if(n.visible){if(g)h=g;else{h=h[b];if(!h)continue;w(h)}D.renderImmediateObject(d,e,f,h,n)}}}function q(a){var b=a.object.material;b.transparent?(a.transparent=b,a.opaque=null):(a.opaque=b,a.transparent=null)}function r(a,b){var e=a.material,f=!1;if(void 0===Xa[b.id]||!0===b.groupsNeedUpdate){delete ea[a.id];for(var g=Xa,h=b.id,e=e instanceof THREE.MeshFaceMaterial,
k=ga.get("OES_element_index_uint")?4294967296:65535,l,f={},m=b.morphTargets.length,q=b.morphNormals.length,r,u={},v=[],t=0,y=b.faces.length;t<y;t++){l=b.faces[t];var w=e?l.materialIndex:0;w in f||(f[w]={hash:w,counter:0});l=f[w].hash+"_"+f[w].counter;l in u||(r={id:Tb++,faces3:[],materialIndex:w,vertices:0,numMorphTargets:m,numMorphNormals:q},u[l]=r,v.push(r));u[l].vertices+3>k&&(f[w].counter+=1,l=f[w].hash+"_"+f[w].counter,l in u||(r={id:Tb++,faces3:[],materialIndex:w,vertices:0,numMorphTargets:m,
numMorphNormals:q},u[l]=r,v.push(r)));u[l].faces3.push(t);u[l].vertices+=3}g[h]=v;b.groupsNeedUpdate=!1}g=Xa[b.id];h=0;for(e=g.length;h<e;h++){k=g[h];if(void 0===k.__webglVertexBuffer){f=k;f.__webglVertexBuffer=n.createBuffer();f.__webglNormalBuffer=n.createBuffer();f.__webglTangentBuffer=n.createBuffer();f.__webglColorBuffer=n.createBuffer();f.__webglUVBuffer=n.createBuffer();f.__webglUV2Buffer=n.createBuffer();f.__webglSkinIndicesBuffer=n.createBuffer();f.__webglSkinWeightsBuffer=n.createBuffer();
f.__webglFaceBuffer=n.createBuffer();f.__webglLineBuffer=n.createBuffer();if(q=f.numMorphTargets)for(f.__webglMorphTargetsBuffers=[],m=0;m<q;m++)f.__webglMorphTargetsBuffers.push(n.createBuffer());if(q=f.numMorphNormals)for(f.__webglMorphNormalsBuffers=[],m=0;m<q;m++)f.__webglMorphNormalsBuffers.push(n.createBuffer());D.info.memory.geometries++;f=k;t=a;y=t.geometry;q=f.faces3;m=3*q.length;u=1*q.length;v=3*q.length;q=d(t,f);f.__vertexArray=new Float32Array(3*m);f.__normalArray=new Float32Array(3*m);
f.__colorArray=new Float32Array(3*m);f.__uvArray=new Float32Array(2*m);1<y.faceVertexUvs.length&&(f.__uv2Array=new Float32Array(2*m));y.hasTangents&&(f.__tangentArray=new Float32Array(4*m));t.geometry.skinWeights.length&&t.geometry.skinIndices.length&&(f.__skinIndexArray=new Float32Array(4*m),f.__skinWeightArray=new Float32Array(4*m));t=null!==ga.get("OES_element_index_uint")&&21845<u?Uint32Array:Uint16Array;f.__typeArray=t;f.__faceArray=new t(3*u);f.__lineArray=new t(2*v);if(y=f.numMorphTargets)for(f.__morphTargetsArrays=
[],t=0;t<y;t++)f.__morphTargetsArrays.push(new Float32Array(3*m));if(y=f.numMorphNormals)for(f.__morphNormalsArrays=[],t=0;t<y;t++)f.__morphNormalsArrays.push(new Float32Array(3*m));f.__webglFaceCount=3*u;f.__webglLineCount=2*v;if(q.attributes)for(u in void 0===f.__webglCustomAttributesList&&(f.__webglCustomAttributesList=[]),u=void 0,q.attributes){var v=q.attributes[u],t={},x;for(x in v)t[x]=v[x];if(!t.__webglInitialized||t.createUniqueBuffers)t.__webglInitialized=!0,y=1,"v2"===t.type?y=2:"v3"===
t.type?y=3:"v4"===t.type?y=4:"c"===t.type&&(y=3),t.size=y,t.array=new Float32Array(m*y),t.buffer=n.createBuffer(),t.buffer.belongsToAttribute=u,v.needsUpdate=!0,t.__original=v;f.__webglCustomAttributesList.push(t)}f.__inittedArrays=!0;b.verticesNeedUpdate=!0;b.morphTargetsNeedUpdate=!0;b.elementsNeedUpdate=!0;b.uvsNeedUpdate=!0;b.normalsNeedUpdate=!0;b.tangentsNeedUpdate=!0;f=b.colorsNeedUpdate=!0}else f=!1;(f||void 0===a.__webglActive)&&p(ea,k,a)}a.__webglActive=!0}function p(a,b,d){var e=d.id;a[e]=
a[e]||[];a[e].push({id:e,buffer:b,object:d,material:null,z:0})}function v(a){var b=a.geometry;if(b instanceof THREE.BufferGeometry)for(var e=b.attributes,f=b.attributesKeys,g=0,h=f.length;g<h;g++){var k=f[g],l=e[k],p="index"===k?n.ELEMENT_ARRAY_BUFFER:n.ARRAY_BUFFER;void 0===l.buffer?(l.buffer=n.createBuffer(),n.bindBuffer(p,l.buffer),n.bufferData(p,l.array,l instanceof THREE.DynamicBufferAttribute?n.DYNAMIC_DRAW:n.STATIC_DRAW),l.needsUpdate=!1):!0===l.needsUpdate&&(n.bindBuffer(p,l.buffer),void 0===
l.updateRange||-1===l.updateRange.count?n.bufferSubData(p,0,l.array):0===l.updateRange.count?console.error("THREE.WebGLRenderer.updateObject: using updateRange for THREE.DynamicBufferAttribute and marked as needsUpdate but count is 0, ensure you are using set methods or updating manually."):(n.bufferSubData(p,l.updateRange.offset*l.array.BYTES_PER_ELEMENT,l.array.subarray(l.updateRange.offset,l.updateRange.offset+l.updateRange.count)),l.updateRange.count=0),l.needsUpdate=!1)}else if(a instanceof THREE.Mesh){!0===
b.groupsNeedUpdate&&r(a,b);for(var m=Xa[b.id],g=0,q=m.length;g<q;g++){var v=m[g],y=d(a,v),w=y.attributes&&t(y);if(b.verticesNeedUpdate||b.morphTargetsNeedUpdate||b.elementsNeedUpdate||b.uvsNeedUpdate||b.normalsNeedUpdate||b.colorsNeedUpdate||b.tangentsNeedUpdate||w){var x=v,z=a,F=n.DYNAMIC_DRAW,C=!b.dynamic,G=y;if(x.__inittedArrays){var I=!1===G instanceof THREE.MeshPhongMaterial&&G.shading===THREE.FlatShading,A=void 0,B=void 0,H=void 0,D=void 0,K=void 0,J=void 0,O=void 0,T=void 0,R=void 0,W=void 0,
Q=void 0,L=void 0,N=void 0,P=void 0,Na=void 0,X=void 0,Y=void 0,Ta=void 0,ab=void 0,$a=void 0,ga=void 0,ea=void 0,ma=void 0,Sa=void 0,na=void 0,S=void 0,ka=void 0,la=void 0,rb=void 0,aa=void 0,xb=void 0,sa=void 0,db=void 0,ra=void 0,fa=void 0,ta=void 0,Fa=void 0,wa=void 0,qa=void 0,za=void 0,Oa=0,Pa=0,nb=0,Bb=0,Cb=0,Ua=0,Da=0,hb=0,Ka=0,oa=0,ua=0,M=0,Ca=void 0,Va=x.__vertexArray,Db=x.__uvArray,ob=x.__uv2Array,Qa=x.__normalArray,va=x.__tangentArray,Ga=x.__colorArray,Ha=x.__skinIndexArray,Ia=x.__skinWeightArray,
Jb=x.__morphTargetsArrays,Eb=x.__morphNormalsArrays,pb=x.__webglCustomAttributesList,E=void 0,Ya=x.__faceArray,Wa=x.__lineArray,ha=z.geometry,ib=ha.elementsNeedUpdate,yb=ha.uvsNeedUpdate,Pb=ha.normalsNeedUpdate,Rb=ha.tangentsNeedUpdate,lb=ha.colorsNeedUpdate,vb=ha.morphTargetsNeedUpdate,Fb=ha.vertices,ca=x.faces3,Aa=ha.faces,Kb=ha.faceVertexUvs[0],Ra=ha.faceVertexUvs[1],cb=ha.skinIndices,Ja=ha.skinWeights,qb=ha.morphTargets,eb=ha.morphNormals;if(ha.verticesNeedUpdate){A=0;for(B=ca.length;A<B;A++)D=
Aa[ca[A]],L=Fb[D.a],N=Fb[D.b],P=Fb[D.c],Va[Pa]=L.x,Va[Pa+1]=L.y,Va[Pa+2]=L.z,Va[Pa+3]=N.x,Va[Pa+4]=N.y,Va[Pa+5]=N.z,Va[Pa+6]=P.x,Va[Pa+7]=P.y,Va[Pa+8]=P.z,Pa+=9;n.bindBuffer(n.ARRAY_BUFFER,x.__webglVertexBuffer);n.bufferData(n.ARRAY_BUFFER,Va,F)}if(vb)for(fa=0,ta=qb.length;fa<ta;fa++){A=ua=0;for(B=ca.length;A<B;A++)qa=ca[A],D=Aa[qa],L=qb[fa].vertices[D.a],N=qb[fa].vertices[D.b],P=qb[fa].vertices[D.c],Fa=Jb[fa],Fa[ua]=L.x,Fa[ua+1]=L.y,Fa[ua+2]=L.z,Fa[ua+3]=N.x,Fa[ua+4]=N.y,Fa[ua+5]=N.z,Fa[ua+6]=P.x,
Fa[ua+7]=P.y,Fa[ua+8]=P.z,G.morphNormals&&(I?$a=ab=Ta=eb[fa].faceNormals[qa]:(za=eb[fa].vertexNormals[qa],Ta=za.a,ab=za.b,$a=za.c),wa=Eb[fa],wa[ua]=Ta.x,wa[ua+1]=Ta.y,wa[ua+2]=Ta.z,wa[ua+3]=ab.x,wa[ua+4]=ab.y,wa[ua+5]=ab.z,wa[ua+6]=$a.x,wa[ua+7]=$a.y,wa[ua+8]=$a.z),ua+=9;n.bindBuffer(n.ARRAY_BUFFER,x.__webglMorphTargetsBuffers[fa]);n.bufferData(n.ARRAY_BUFFER,Jb[fa],F);G.morphNormals&&(n.bindBuffer(n.ARRAY_BUFFER,x.__webglMorphNormalsBuffers[fa]),n.bufferData(n.ARRAY_BUFFER,Eb[fa],F))}if(Ja.length){A=
0;for(B=ca.length;A<B;A++)D=Aa[ca[A]],Sa=Ja[D.a],na=Ja[D.b],S=Ja[D.c],Ia[oa]=Sa.x,Ia[oa+1]=Sa.y,Ia[oa+2]=Sa.z,Ia[oa+3]=Sa.w,Ia[oa+4]=na.x,Ia[oa+5]=na.y,Ia[oa+6]=na.z,Ia[oa+7]=na.w,Ia[oa+8]=S.x,Ia[oa+9]=S.y,Ia[oa+10]=S.z,Ia[oa+11]=S.w,ka=cb[D.a],la=cb[D.b],rb=cb[D.c],Ha[oa]=ka.x,Ha[oa+1]=ka.y,Ha[oa+2]=ka.z,Ha[oa+3]=ka.w,Ha[oa+4]=la.x,Ha[oa+5]=la.y,Ha[oa+6]=la.z,Ha[oa+7]=la.w,Ha[oa+8]=rb.x,Ha[oa+9]=rb.y,Ha[oa+10]=rb.z,Ha[oa+11]=rb.w,oa+=12;0<oa&&(n.bindBuffer(n.ARRAY_BUFFER,x.__webglSkinIndicesBuffer),
n.bufferData(n.ARRAY_BUFFER,Ha,F),n.bindBuffer(n.ARRAY_BUFFER,x.__webglSkinWeightsBuffer),n.bufferData(n.ARRAY_BUFFER,Ia,F))}if(lb){A=0;for(B=ca.length;A<B;A++)D=Aa[ca[A]],O=D.vertexColors,T=D.color,3===O.length&&G.vertexColors===THREE.VertexColors?(ga=O[0],ea=O[1],ma=O[2]):ma=ea=ga=T,Ga[Ka]=ga.r,Ga[Ka+1]=ga.g,Ga[Ka+2]=ga.b,Ga[Ka+3]=ea.r,Ga[Ka+4]=ea.g,Ga[Ka+5]=ea.b,Ga[Ka+6]=ma.r,Ga[Ka+7]=ma.g,Ga[Ka+8]=ma.b,Ka+=9;0<Ka&&(n.bindBuffer(n.ARRAY_BUFFER,x.__webglColorBuffer),n.bufferData(n.ARRAY_BUFFER,
Ga,F))}if(Rb&&ha.hasTangents){A=0;for(B=ca.length;A<B;A++)D=Aa[ca[A]],R=D.vertexTangents,Na=R[0],X=R[1],Y=R[2],va[Da]=Na.x,va[Da+1]=Na.y,va[Da+2]=Na.z,va[Da+3]=Na.w,va[Da+4]=X.x,va[Da+5]=X.y,va[Da+6]=X.z,va[Da+7]=X.w,va[Da+8]=Y.x,va[Da+9]=Y.y,va[Da+10]=Y.z,va[Da+11]=Y.w,Da+=12;n.bindBuffer(n.ARRAY_BUFFER,x.__webglTangentBuffer);n.bufferData(n.ARRAY_BUFFER,va,F)}if(Pb){A=0;for(B=ca.length;A<B;A++)if(D=Aa[ca[A]],K=D.vertexNormals,J=D.normal,3===K.length&&!1===I)for(aa=0;3>aa;aa++)sa=K[aa],Qa[Ua]=sa.x,
Qa[Ua+1]=sa.y,Qa[Ua+2]=sa.z,Ua+=3;else for(aa=0;3>aa;aa++)Qa[Ua]=J.x,Qa[Ua+1]=J.y,Qa[Ua+2]=J.z,Ua+=3;n.bindBuffer(n.ARRAY_BUFFER,x.__webglNormalBuffer);n.bufferData(n.ARRAY_BUFFER,Qa,F)}if(yb&&Kb){A=0;for(B=ca.length;A<B;A++)if(H=ca[A],W=Kb[H],void 0!==W)for(aa=0;3>aa;aa++)db=W[aa],Db[nb]=db.x,Db[nb+1]=db.y,nb+=2;0<nb&&(n.bindBuffer(n.ARRAY_BUFFER,x.__webglUVBuffer),n.bufferData(n.ARRAY_BUFFER,Db,F))}if(yb&&Ra){A=0;for(B=ca.length;A<B;A++)if(H=ca[A],Q=Ra[H],void 0!==Q)for(aa=0;3>aa;aa++)ra=Q[aa],
ob[Bb]=ra.x,ob[Bb+1]=ra.y,Bb+=2;0<Bb&&(n.bindBuffer(n.ARRAY_BUFFER,x.__webglUV2Buffer),n.bufferData(n.ARRAY_BUFFER,ob,F))}if(ib){A=0;for(B=ca.length;A<B;A++)Ya[Cb]=Oa,Ya[Cb+1]=Oa+1,Ya[Cb+2]=Oa+2,Cb+=3,Wa[hb]=Oa,Wa[hb+1]=Oa+1,Wa[hb+2]=Oa,Wa[hb+3]=Oa+2,Wa[hb+4]=Oa+1,Wa[hb+5]=Oa+2,hb+=6,Oa+=3;n.bindBuffer(n.ELEMENT_ARRAY_BUFFER,x.__webglFaceBuffer);n.bufferData(n.ELEMENT_ARRAY_BUFFER,Ya,F);n.bindBuffer(n.ELEMENT_ARRAY_BUFFER,x.__webglLineBuffer);n.bufferData(n.ELEMENT_ARRAY_BUFFER,Wa,F)}if(pb)for(aa=
0,xb=pb.length;aa<xb;aa++)if(E=pb[aa],E.__original.needsUpdate){M=0;if(1===E.size)if(void 0===E.boundTo||"vertices"===E.boundTo)for(A=0,B=ca.length;A<B;A++)D=Aa[ca[A]],E.array[M]=E.value[D.a],E.array[M+1]=E.value[D.b],E.array[M+2]=E.value[D.c],M+=3;else{if("faces"===E.boundTo)for(A=0,B=ca.length;A<B;A++)Ca=E.value[ca[A]],E.array[M]=Ca,E.array[M+1]=Ca,E.array[M+2]=Ca,M+=3}else if(2===E.size)if(void 0===E.boundTo||"vertices"===E.boundTo)for(A=0,B=ca.length;A<B;A++)D=Aa[ca[A]],L=E.value[D.a],N=E.value[D.b],
P=E.value[D.c],E.array[M]=L.x,E.array[M+1]=L.y,E.array[M+2]=N.x,E.array[M+3]=N.y,E.array[M+4]=P.x,E.array[M+5]=P.y,M+=6;else{if("faces"===E.boundTo)for(A=0,B=ca.length;A<B;A++)P=N=L=Ca=E.value[ca[A]],E.array[M]=L.x,E.array[M+1]=L.y,E.array[M+2]=N.x,E.array[M+3]=N.y,E.array[M+4]=P.x,E.array[M+5]=P.y,M+=6}else if(3===E.size){var V;V="c"===E.type?["r","g","b"]:["x","y","z"];if(void 0===E.boundTo||"vertices"===E.boundTo)for(A=0,B=ca.length;A<B;A++)D=Aa[ca[A]],L=E.value[D.a],N=E.value[D.b],P=E.value[D.c],
E.array[M]=L[V[0]],E.array[M+1]=L[V[1]],E.array[M+2]=L[V[2]],E.array[M+3]=N[V[0]],E.array[M+4]=N[V[1]],E.array[M+5]=N[V[2]],E.array[M+6]=P[V[0]],E.array[M+7]=P[V[1]],E.array[M+8]=P[V[2]],M+=9;else if("faces"===E.boundTo)for(A=0,B=ca.length;A<B;A++)P=N=L=Ca=E.value[ca[A]],E.array[M]=L[V[0]],E.array[M+1]=L[V[1]],E.array[M+2]=L[V[2]],E.array[M+3]=N[V[0]],E.array[M+4]=N[V[1]],E.array[M+5]=N[V[2]],E.array[M+6]=P[V[0]],E.array[M+7]=P[V[1]],E.array[M+8]=P[V[2]],M+=9;else if("faceVertices"===E.boundTo)for(A=
0,B=ca.length;A<B;A++)Ca=E.value[ca[A]],L=Ca[0],N=Ca[1],P=Ca[2],E.array[M]=L[V[0]],E.array[M+1]=L[V[1]],E.array[M+2]=L[V[2]],E.array[M+3]=N[V[0]],E.array[M+4]=N[V[1]],E.array[M+5]=N[V[2]],E.array[M+6]=P[V[0]],E.array[M+7]=P[V[1]],E.array[M+8]=P[V[2]],M+=9}else if(4===E.size)if(void 0===E.boundTo||"vertices"===E.boundTo)for(A=0,B=ca.length;A<B;A++)D=Aa[ca[A]],L=E.value[D.a],N=E.value[D.b],P=E.value[D.c],E.array[M]=L.x,E.array[M+1]=L.y,E.array[M+2]=L.z,E.array[M+3]=L.w,E.array[M+4]=N.x,E.array[M+5]=
N.y,E.array[M+6]=N.z,E.array[M+7]=N.w,E.array[M+8]=P.x,E.array[M+9]=P.y,E.array[M+10]=P.z,E.array[M+11]=P.w,M+=12;else if("faces"===E.boundTo)for(A=0,B=ca.length;A<B;A++)P=N=L=Ca=E.value[ca[A]],E.array[M]=L.x,E.array[M+1]=L.y,E.array[M+2]=L.z,E.array[M+3]=L.w,E.array[M+4]=N.x,E.array[M+5]=N.y,E.array[M+6]=N.z,E.array[M+7]=N.w,E.array[M+8]=P.x,E.array[M+9]=P.y,E.array[M+10]=P.z,E.array[M+11]=P.w,M+=12;else if("faceVertices"===E.boundTo)for(A=0,B=ca.length;A<B;A++)Ca=E.value[ca[A]],L=Ca[0],N=Ca[1],
P=Ca[2],E.array[M]=L.x,E.array[M+1]=L.y,E.array[M+2]=L.z,E.array[M+3]=L.w,E.array[M+4]=N.x,E.array[M+5]=N.y,E.array[M+6]=N.z,E.array[M+7]=N.w,E.array[M+8]=P.x,E.array[M+9]=P.y,E.array[M+10]=P.z,E.array[M+11]=P.w,M+=12;n.bindBuffer(n.ARRAY_BUFFER,E.buffer);n.bufferData(n.ARRAY_BUFFER,E.array,F)}C&&(delete x.__inittedArrays,delete x.__colorArray,delete x.__normalArray,delete x.__tangentArray,delete x.__uvArray,delete x.__uv2Array,delete x.__faceArray,delete x.__vertexArray,delete x.__lineArray,delete x.__skinIndexArray,
delete x.__skinWeightArray)}}}b.verticesNeedUpdate=!1;b.morphTargetsNeedUpdate=!1;b.elementsNeedUpdate=!1;b.uvsNeedUpdate=!1;b.normalsNeedUpdate=!1;b.colorsNeedUpdate=!1;b.tangentsNeedUpdate=!1;y.attributes&&u(y)}else if(a instanceof THREE.Line){y=d(a,b);w=y.attributes&&t(y);if(b.verticesNeedUpdate||b.colorsNeedUpdate||b.lineDistancesNeedUpdate||w){var Gb=n.DYNAMIC_DRAW,U,da,ba,Ea,Z,Hb,Ub=b.vertices,Lb=b.colors,jb=b.lineDistances,Ba=Ub.length,sb=Lb.length,tb=jb.length,Za=b.__vertexArray,wb=b.__colorArray,
kb=b.__lineDistanceArray,cc=b.colorsNeedUpdate,Ib=b.lineDistancesNeedUpdate,Vb=b.__webglCustomAttributesList,Mb,fb,xa,Nb,La,ia;if(b.verticesNeedUpdate){for(U=0;U<Ba;U++)Ea=Ub[U],Z=3*U,Za[Z]=Ea.x,Za[Z+1]=Ea.y,Za[Z+2]=Ea.z;n.bindBuffer(n.ARRAY_BUFFER,b.__webglVertexBuffer);n.bufferData(n.ARRAY_BUFFER,Za,Gb)}if(cc){for(da=0;da<sb;da++)Hb=Lb[da],Z=3*da,wb[Z]=Hb.r,wb[Z+1]=Hb.g,wb[Z+2]=Hb.b;n.bindBuffer(n.ARRAY_BUFFER,b.__webglColorBuffer);n.bufferData(n.ARRAY_BUFFER,wb,Gb)}if(Ib){for(ba=0;ba<tb;ba++)kb[ba]=
jb[ba];n.bindBuffer(n.ARRAY_BUFFER,b.__webglLineDistanceBuffer);n.bufferData(n.ARRAY_BUFFER,kb,Gb)}if(Vb)for(Mb=0,fb=Vb.length;Mb<fb;Mb++)if(ia=Vb[Mb],ia.needsUpdate&&(void 0===ia.boundTo||"vertices"===ia.boundTo)){Z=0;Nb=ia.value.length;if(1===ia.size)for(xa=0;xa<Nb;xa++)ia.array[xa]=ia.value[xa];else if(2===ia.size)for(xa=0;xa<Nb;xa++)La=ia.value[xa],ia.array[Z]=La.x,ia.array[Z+1]=La.y,Z+=2;else if(3===ia.size)if("c"===ia.type)for(xa=0;xa<Nb;xa++)La=ia.value[xa],ia.array[Z]=La.r,ia.array[Z+1]=La.g,
ia.array[Z+2]=La.b,Z+=3;else for(xa=0;xa<Nb;xa++)La=ia.value[xa],ia.array[Z]=La.x,ia.array[Z+1]=La.y,ia.array[Z+2]=La.z,Z+=3;else if(4===ia.size)for(xa=0;xa<Nb;xa++)La=ia.value[xa],ia.array[Z]=La.x,ia.array[Z+1]=La.y,ia.array[Z+2]=La.z,ia.array[Z+3]=La.w,Z+=4;n.bindBuffer(n.ARRAY_BUFFER,ia.buffer);n.bufferData(n.ARRAY_BUFFER,ia.array,Gb);ia.needsUpdate=!1}}b.verticesNeedUpdate=!1;b.colorsNeedUpdate=!1;b.lineDistancesNeedUpdate=!1;y.attributes&&u(y)}else if(a instanceof THREE.PointCloud){y=d(a,b);
w=y.attributes&&t(y);if(b.verticesNeedUpdate||b.colorsNeedUpdate||w){var gb=n.DYNAMIC_DRAW,Wb,Xb,dc,pa,ec,Qb=b.vertices,Yb=Qb.length,Sb=b.colors,ub=Sb.length,fc=b.__vertexArray,gc=b.__colorArray,zb=b.colorsNeedUpdate,jc=b.__webglCustomAttributesList,hc,mb,ya,Ob,Ma,ja;if(b.verticesNeedUpdate){for(Wb=0;Wb<Yb;Wb++)dc=Qb[Wb],pa=3*Wb,fc[pa]=dc.x,fc[pa+1]=dc.y,fc[pa+2]=dc.z;n.bindBuffer(n.ARRAY_BUFFER,b.__webglVertexBuffer);n.bufferData(n.ARRAY_BUFFER,fc,gb)}if(zb){for(Xb=0;Xb<ub;Xb++)ec=Sb[Xb],pa=3*Xb,
gc[pa]=ec.r,gc[pa+1]=ec.g,gc[pa+2]=ec.b;n.bindBuffer(n.ARRAY_BUFFER,b.__webglColorBuffer);n.bufferData(n.ARRAY_BUFFER,gc,gb)}if(jc)for(hc=0,mb=jc.length;hc<mb;hc++){ja=jc[hc];if(ja.needsUpdate&&(void 0===ja.boundTo||"vertices"===ja.boundTo))if(Ob=ja.value.length,pa=0,1===ja.size)for(ya=0;ya<Ob;ya++)ja.array[ya]=ja.value[ya];else if(2===ja.size)for(ya=0;ya<Ob;ya++)Ma=ja.value[ya],ja.array[pa]=Ma.x,ja.array[pa+1]=Ma.y,pa+=2;else if(3===ja.size)if("c"===ja.type)for(ya=0;ya<Ob;ya++)Ma=ja.value[ya],ja.array[pa]=
Ma.r,ja.array[pa+1]=Ma.g,ja.array[pa+2]=Ma.b,pa+=3;else for(ya=0;ya<Ob;ya++)Ma=ja.value[ya],ja.array[pa]=Ma.x,ja.array[pa+1]=Ma.y,ja.array[pa+2]=Ma.z,pa+=3;else if(4===ja.size)for(ya=0;ya<Ob;ya++)Ma=ja.value[ya],ja.array[pa]=Ma.x,ja.array[pa+1]=Ma.y,ja.array[pa+2]=Ma.z,ja.array[pa+3]=Ma.w,pa+=4;n.bindBuffer(n.ARRAY_BUFFER,ja.buffer);n.bufferData(n.ARRAY_BUFFER,ja.array,gb);ja.needsUpdate=!1}}b.verticesNeedUpdate=!1;b.colorsNeedUpdate=!1;y.attributes&&u(y)}}function t(a){for(var b in a.attributes)if(a.attributes[b].needsUpdate)return!0;
return!1}function u(a){for(var b in a.attributes)a.attributes[b].needsUpdate=!1}function w(a){!0===a.transparent?Y.setBlending(a.blending,a.blendEquation,a.blendSrc,a.blendDst,a.blendEquationAlpha,a.blendSrcAlpha,a.blendDstAlpha):Y.setBlending(THREE.NoBlending);Y.setDepthTest(a.depthTest);Y.setDepthWrite(a.depthWrite);Y.setColorWrite(a.colorWrite);Y.setPolygonOffset(a.polygonOffset,a.polygonOffsetFactor,a.polygonOffsetUnits)}function x(a,b,d,e,f){var g,h,k,l;Pb=0;if(e.needsUpdate){e.program&&kc(e);
e.addEventListener("dispose",lc);var p=sc[e.type];if(p){var m=THREE.ShaderLib[p];e.__webglShader={uniforms:THREE.UniformsUtils.clone(m.uniforms),vertexShader:m.vertexShader,fragmentShader:m.fragmentShader}}else e.__webglShader={uniforms:e.uniforms,vertexShader:e.vertexShader,fragmentShader:e.fragmentShader};for(var q=0,r=0,t=0,u=0,v=0,y=b.length;v<y;v++){var x=b[v];x.onlyShadow||!1===x.visible||(x instanceof THREE.DirectionalLight&&q++,x instanceof THREE.PointLight&&r++,x instanceof THREE.SpotLight&&
t++,x instanceof THREE.HemisphereLight&&u++)}g=q;h=r;k=t;l=u;for(var w,B=0,I=0,H=b.length;I<H;I++){var L=b[I];L.castShadow&&(L instanceof THREE.SpotLight&&B++,L instanceof THREE.DirectionalLight&&!L.shadowCascade&&B++)}w=B;var J;if(Qb&&f&&f.skeleton&&f.skeleton.useVertexTexture)J=1024;else{var P=n.getParameter(n.MAX_VERTEX_UNIFORM_VECTORS),O=Math.floor((P-20)/4);void 0!==f&&f instanceof THREE.SkinnedMesh&&(O=Math.min(f.skeleton.bones.length,O),O<f.skeleton.bones.length&&THREE.warn("WebGLRenderer: too many bones - "+
f.skeleton.bones.length+", this GPU supports just "+O+" (try OpenGL instead of ANGLE)"));J=O}var R={precision:N,supportsVertexTextures:Yb,map:!!e.map,envMap:!!e.envMap,envMapMode:e.envMap&&e.envMap.mapping,lightMap:!!e.lightMap,bumpMap:!!e.bumpMap,normalMap:!!e.normalMap,specularMap:!!e.specularMap,alphaMap:!!e.alphaMap,combine:e.combine,vertexColors:e.vertexColors,fog:d,useFog:e.fog,fogExp:d instanceof THREE.FogExp2,flatShading:e.shading===THREE.FlatShading,sizeAttenuation:e.sizeAttenuation,logarithmicDepthBuffer:ma,
skinning:e.skinning,maxBones:J,useVertexTexture:Qb&&f&&f.skeleton&&f.skeleton.useVertexTexture,morphTargets:e.morphTargets,morphNormals:e.morphNormals,maxMorphTargets:D.maxMorphTargets,maxMorphNormals:D.maxMorphNormals,maxDirLights:g,maxPointLights:h,maxSpotLights:k,maxHemiLights:l,maxShadows:w,shadowMapEnabled:D.shadowMapEnabled&&f.receiveShadow&&0<w,shadowMapType:D.shadowMapType,shadowMapDebug:D.shadowMapDebug,shadowMapCascade:D.shadowMapCascade,alphaTest:e.alphaTest,metal:e.metal,wrapAround:e.wrapAround,
doubleSided:e.side===THREE.DoubleSide,flipSided:e.side===THREE.BackSide},T=[];p?T.push(p):(T.push(e.fragmentShader),T.push(e.vertexShader));if(void 0!==e.defines)for(var Q in e.defines)T.push(Q),T.push(e.defines[Q]);for(Q in R)T.push(Q),T.push(R[Q]);for(var Na=T.join(),X,Y=0,Ta=Sa.length;Y<Ta;Y++){var ab=Sa[Y];if(ab.code===Na){X=ab;X.usedTimes++;break}}void 0===X&&(X=new THREE.WebGLProgram(D,Na,e,R),Sa.push(X),D.info.memory.programs=Sa.length);e.program=X;var $a=X.attributes;if(e.morphTargets){e.numSupportedMorphTargets=
0;for(var fa,ga="morphTarget",ea=0;ea<D.maxMorphTargets;ea++)fa=ga+ea,0<=$a[fa]&&e.numSupportedMorphTargets++}if(e.morphNormals)for(e.numSupportedMorphNormals=0,ga="morphNormal",ea=0;ea<D.maxMorphNormals;ea++)fa=ga+ea,0<=$a[fa]&&e.numSupportedMorphNormals++;e.uniformsList=[];for(var ka in e.__webglShader.uniforms){var wa=e.program.uniforms[ka];wa&&e.uniformsList.push([e.__webglShader.uniforms[ka],wa])}e.needsUpdate=!1}e.morphTargets&&!f.__webglMorphTargetInfluences&&(f.__webglMorphTargetInfluences=
new Float32Array(D.maxMorphTargets));var db=!1,ra=!1,ta=!1,Xa=e.program,na=Xa.uniforms,S=e.__webglShader.uniforms;Xa.id!==rb&&(n.useProgram(Xa.program),rb=Xa.id,ta=ra=db=!0);e.id!==xb&&(-1===xb&&(ta=!0),xb=e.id,ra=!0);if(db||a!==yb)n.uniformMatrix4fv(na.projectionMatrix,!1,a.projectionMatrix.elements),ma&&n.uniform1f(na.logDepthBufFC,2/(Math.log(a.far+1)/Math.LN2)),a!==yb&&(yb=a),(e instanceof THREE.ShaderMaterial||e instanceof THREE.MeshPhongMaterial||e.envMap)&&null!==na.cameraPosition&&(za.setFromMatrixPosition(a.matrixWorld),
n.uniform3f(na.cameraPosition,za.x,za.y,za.z)),(e instanceof THREE.MeshPhongMaterial||e instanceof THREE.MeshLambertMaterial||e instanceof THREE.MeshBasicMaterial||e instanceof THREE.ShaderMaterial||e.skinning)&&null!==na.viewMatrix&&n.uniformMatrix4fv(na.viewMatrix,!1,a.matrixWorldInverse.elements);if(e.skinning)if(f.bindMatrix&&null!==na.bindMatrix&&n.uniformMatrix4fv(na.bindMatrix,!1,f.bindMatrix.elements),f.bindMatrixInverse&&null!==na.bindMatrixInverse&&n.uniformMatrix4fv(na.bindMatrixInverse,
!1,f.bindMatrixInverse.elements),Qb&&f.skeleton&&f.skeleton.useVertexTexture){if(null!==na.boneTexture){var gb=F();n.uniform1i(na.boneTexture,gb);D.setTexture(f.skeleton.boneTexture,gb)}null!==na.boneTextureWidth&&n.uniform1i(na.boneTextureWidth,f.skeleton.boneTextureWidth);null!==na.boneTextureHeight&&n.uniform1i(na.boneTextureHeight,f.skeleton.boneTextureHeight)}else f.skeleton&&f.skeleton.boneMatrices&&null!==na.boneGlobalMatrices&&n.uniformMatrix4fv(na.boneGlobalMatrices,!1,f.skeleton.boneMatrices);
if(ra){d&&e.fog&&(S.fogColor.value=d.color,d instanceof THREE.Fog?(S.fogNear.value=d.near,S.fogFar.value=d.far):d instanceof THREE.FogExp2&&(S.fogDensity.value=d.density));if(e instanceof THREE.MeshPhongMaterial||e instanceof THREE.MeshLambertMaterial||e.lights){if(Rb){var ta=!0,la,bb,aa,eb=0,fb=0,lb=0,Ab,sb,tb,Fa,mb,qa=mc,ub=qa.directional.colors,Oa=qa.directional.positions,Pa=qa.point.colors,nb=qa.point.positions,Bb=qa.point.distances,Cb=qa.point.decays,Ua=qa.spot.colors,Da=qa.spot.positions,hb=
qa.spot.distances,Ka=qa.spot.directions,oa=qa.spot.anglesCos,ua=qa.spot.exponents,M=qa.spot.decays,Ca=qa.hemi.skyColors,Va=qa.hemi.groundColors,Db=qa.hemi.positions,ob=0,Qa=0,va=0,Ga=0,Ha=0,Ia=0,Jb=0,Eb=0,pb=0,E=0,Ya=0,Wa=0;la=0;for(bb=b.length;la<bb;la++)aa=b[la],aa.onlyShadow||(Ab=aa.color,Fa=aa.intensity,mb=aa.distance,aa instanceof THREE.AmbientLight?aa.visible&&(eb+=Ab.r,fb+=Ab.g,lb+=Ab.b):aa instanceof THREE.DirectionalLight?(Ha+=1,aa.visible&&(sa.setFromMatrixPosition(aa.matrixWorld),za.setFromMatrixPosition(aa.target.matrixWorld),
sa.sub(za),sa.normalize(),pb=3*ob,Oa[pb]=sa.x,Oa[pb+1]=sa.y,Oa[pb+2]=sa.z,A(ub,pb,Ab,Fa),ob+=1)):aa instanceof THREE.PointLight?(Ia+=1,aa.visible&&(E=3*Qa,A(Pa,E,Ab,Fa),za.setFromMatrixPosition(aa.matrixWorld),nb[E]=za.x,nb[E+1]=za.y,nb[E+2]=za.z,Bb[Qa]=mb,Cb[Qa]=0===aa.distance?0:aa.decay,Qa+=1)):aa instanceof THREE.SpotLight?(Jb+=1,aa.visible&&(Ya=3*va,A(Ua,Ya,Ab,Fa),sa.setFromMatrixPosition(aa.matrixWorld),Da[Ya]=sa.x,Da[Ya+1]=sa.y,Da[Ya+2]=sa.z,hb[va]=mb,za.setFromMatrixPosition(aa.target.matrixWorld),
sa.sub(za),sa.normalize(),Ka[Ya]=sa.x,Ka[Ya+1]=sa.y,Ka[Ya+2]=sa.z,oa[va]=Math.cos(aa.angle),ua[va]=aa.exponent,M[va]=0===aa.distance?0:aa.decay,va+=1)):aa instanceof THREE.HemisphereLight&&(Eb+=1,aa.visible&&(sa.setFromMatrixPosition(aa.matrixWorld),sa.normalize(),Wa=3*Ga,Db[Wa]=sa.x,Db[Wa+1]=sa.y,Db[Wa+2]=sa.z,sb=aa.color,tb=aa.groundColor,A(Ca,Wa,sb,Fa),A(Va,Wa,tb,Fa),Ga+=1)));la=3*ob;for(bb=Math.max(ub.length,3*Ha);la<bb;la++)ub[la]=0;la=3*Qa;for(bb=Math.max(Pa.length,3*Ia);la<bb;la++)Pa[la]=0;
la=3*va;for(bb=Math.max(Ua.length,3*Jb);la<bb;la++)Ua[la]=0;la=3*Ga;for(bb=Math.max(Ca.length,3*Eb);la<bb;la++)Ca[la]=0;la=3*Ga;for(bb=Math.max(Va.length,3*Eb);la<bb;la++)Va[la]=0;qa.directional.length=ob;qa.point.length=Qa;qa.spot.length=va;qa.hemi.length=Ga;qa.ambient[0]=eb;qa.ambient[1]=fb;qa.ambient[2]=lb;Rb=!1}if(ta){var ha=mc;S.ambientLightColor.value=ha.ambient;S.directionalLightColor.value=ha.directional.colors;S.directionalLightDirection.value=ha.directional.positions;S.pointLightColor.value=
ha.point.colors;S.pointLightPosition.value=ha.point.positions;S.pointLightDistance.value=ha.point.distances;S.pointLightDecay.value=ha.point.decays;S.spotLightColor.value=ha.spot.colors;S.spotLightPosition.value=ha.spot.positions;S.spotLightDistance.value=ha.spot.distances;S.spotLightDirection.value=ha.spot.directions;S.spotLightAngleCos.value=ha.spot.anglesCos;S.spotLightExponent.value=ha.spot.exponents;S.spotLightDecay.value=ha.spot.decays;S.hemisphereLightSkyColor.value=ha.hemi.skyColors;S.hemisphereLightGroundColor.value=
ha.hemi.groundColors;S.hemisphereLightDirection.value=ha.hemi.positions;z(S,!0)}else z(S,!1)}if(e instanceof THREE.MeshBasicMaterial||e instanceof THREE.MeshLambertMaterial||e instanceof THREE.MeshPhongMaterial){S.opacity.value=e.opacity;S.diffuse.value=e.color;S.map.value=e.map;S.lightMap.value=e.lightMap;S.specularMap.value=e.specularMap;S.alphaMap.value=e.alphaMap;e.bumpMap&&(S.bumpMap.value=e.bumpMap,S.bumpScale.value=e.bumpScale);e.normalMap&&(S.normalMap.value=e.normalMap,S.normalScale.value.copy(e.normalScale));
var ib;e.map?ib=e.map:e.specularMap?ib=e.specularMap:e.normalMap?ib=e.normalMap:e.bumpMap?ib=e.bumpMap:e.alphaMap&&(ib=e.alphaMap);if(void 0!==ib){var zb=ib.offset,Tb=ib.repeat;S.offsetRepeat.value.set(zb.x,zb.y,Tb.x,Tb.y)}S.envMap.value=e.envMap;S.flipEnvMap.value=e.envMap instanceof THREE.WebGLRenderTargetCube?1:-1;S.reflectivity.value=e.reflectivity;S.refractionRatio.value=e.refractionRatio}if(e instanceof THREE.LineBasicMaterial)S.diffuse.value=e.color,S.opacity.value=e.opacity;else if(e instanceof
THREE.LineDashedMaterial)S.diffuse.value=e.color,S.opacity.value=e.opacity,S.dashSize.value=e.dashSize,S.totalSize.value=e.dashSize+e.gapSize,S.scale.value=e.scale;else if(e instanceof THREE.PointCloudMaterial){if(S.psColor.value=e.color,S.opacity.value=e.opacity,S.size.value=e.size,S.scale.value=W.height/2,S.map.value=e.map,null!==e.map){var Zb=e.map.offset,$b=e.map.repeat;S.offsetRepeat.value.set(Zb.x,Zb.y,$b.x,$b.y)}}else e instanceof THREE.MeshPhongMaterial?(S.shininess.value=e.shininess,S.emissive.value=
e.emissive,S.specular.value=e.specular,e.wrapAround&&S.wrapRGB.value.copy(e.wrapRGB)):e instanceof THREE.MeshLambertMaterial?(S.emissive.value=e.emissive,e.wrapAround&&S.wrapRGB.value.copy(e.wrapRGB)):e instanceof THREE.MeshDepthMaterial?(S.mNear.value=a.near,S.mFar.value=a.far,S.opacity.value=e.opacity):e instanceof THREE.MeshNormalMaterial&&(S.opacity.value=e.opacity);if(f.receiveShadow&&!e._shadowPass&&S.shadowMatrix)for(var vb=0,Fb=0,ca=b.length;Fb<ca;Fb++){var Aa=b[Fb];Aa.castShadow&&(Aa instanceof
THREE.SpotLight||Aa instanceof THREE.DirectionalLight&&!Aa.shadowCascade)&&(S.shadowMap.value[vb]=Aa.shadowMap,S.shadowMapSize.value[vb]=Aa.shadowMapSize,S.shadowMatrix.value[vb]=Aa.shadowMatrix,S.shadowDarkness.value[vb]=Aa.shadowDarkness,S.shadowBias.value[vb]=Aa.shadowBias,vb++)}for(var Kb=e.uniformsList,Ra,cb,Ja,qb=0,ic=Kb.length;qb<ic;qb++){var V=Kb[qb][0];if(!1!==V.needsUpdate){var Gb=V.type,U=V.value,da=Kb[qb][1];switch(Gb){case "1i":n.uniform1i(da,U);break;case "1f":n.uniform1f(da,U);break;
case "2f":n.uniform2f(da,U[0],U[1]);break;case "3f":n.uniform3f(da,U[0],U[1],U[2]);break;case "4f":n.uniform4f(da,U[0],U[1],U[2],U[3]);break;case "1iv":n.uniform1iv(da,U);break;case "3iv":n.uniform3iv(da,U);break;case "1fv":n.uniform1fv(da,U);break;case "2fv":n.uniform2fv(da,U);break;case "3fv":n.uniform3fv(da,U);break;case "4fv":n.uniform4fv(da,U);break;case "Matrix3fv":n.uniformMatrix3fv(da,!1,U);break;case "Matrix4fv":n.uniformMatrix4fv(da,!1,U);break;case "i":n.uniform1i(da,U);break;case "f":n.uniform1f(da,
U);break;case "v2":n.uniform2f(da,U.x,U.y);break;case "v3":n.uniform3f(da,U.x,U.y,U.z);break;case "v4":n.uniform4f(da,U.x,U.y,U.z,U.w);break;case "c":n.uniform3f(da,U.r,U.g,U.b);break;case "iv1":n.uniform1iv(da,U);break;case "iv":n.uniform3iv(da,U);break;case "fv1":n.uniform1fv(da,U);break;case "fv":n.uniform3fv(da,U);break;case "v2v":void 0===V._array&&(V._array=new Float32Array(2*U.length));for(var ba=0,Ea=U.length;ba<Ea;ba++)Ja=2*ba,V._array[Ja]=U[ba].x,V._array[Ja+1]=U[ba].y;n.uniform2fv(da,V._array);
break;case "v3v":void 0===V._array&&(V._array=new Float32Array(3*U.length));ba=0;for(Ea=U.length;ba<Ea;ba++)Ja=3*ba,V._array[Ja]=U[ba].x,V._array[Ja+1]=U[ba].y,V._array[Ja+2]=U[ba].z;n.uniform3fv(da,V._array);break;case "v4v":void 0===V._array&&(V._array=new Float32Array(4*U.length));ba=0;for(Ea=U.length;ba<Ea;ba++)Ja=4*ba,V._array[Ja]=U[ba].x,V._array[Ja+1]=U[ba].y,V._array[Ja+2]=U[ba].z,V._array[Ja+3]=U[ba].w;n.uniform4fv(da,V._array);break;case "m3":n.uniformMatrix3fv(da,!1,U.elements);break;case "m3v":void 0===
V._array&&(V._array=new Float32Array(9*U.length));ba=0;for(Ea=U.length;ba<Ea;ba++)U[ba].flattenToArrayOffset(V._array,9*ba);n.uniformMatrix3fv(da,!1,V._array);break;case "m4":n.uniformMatrix4fv(da,!1,U.elements);break;case "m4v":void 0===V._array&&(V._array=new Float32Array(16*U.length));ba=0;for(Ea=U.length;ba<Ea;ba++)U[ba].flattenToArrayOffset(V._array,16*ba);n.uniformMatrix4fv(da,!1,V._array);break;case "t":Ra=U;cb=F();n.uniform1i(da,cb);if(!Ra)continue;if(Ra instanceof THREE.CubeTexture||Ra.image instanceof
Array&&6===Ra.image.length){var Z=Ra,Hb=cb;if(6===Z.image.length)if(Z.needsUpdate){Z.image.__webglTextureCube||(Z.addEventListener("dispose",Sb),Z.image.__webglTextureCube=n.createTexture(),D.info.memory.textures++);n.activeTexture(n.TEXTURE0+Hb);n.bindTexture(n.TEXTURE_CUBE_MAP,Z.image.__webglTextureCube);n.pixelStorei(n.UNPACK_FLIP_Y_WEBGL,Z.flipY);for(var Ub=Z instanceof THREE.CompressedTexture,Lb=Z.image[0]instanceof THREE.DataTexture,jb=[],Ba=0;6>Ba;Ba++)jb[Ba]=!D.autoScaleCubemaps||Ub||Lb?Lb?
Z.image[Ba].image:Z.image[Ba]:G(Z.image[Ba],tc);var ac=jb[0],bc=THREE.Math.isPowerOfTwo(ac.width)&&THREE.Math.isPowerOfTwo(ac.height),Za=K(Z.format),wb=K(Z.type);C(n.TEXTURE_CUBE_MAP,Z,bc);for(Ba=0;6>Ba;Ba++)if(Ub)for(var kb,cc=jb[Ba].mipmaps,Ib=0,Vb=cc.length;Ib<Vb;Ib++)kb=cc[Ib],Z.format!==THREE.RGBAFormat&&Z.format!==THREE.RGBFormat?-1<nc().indexOf(Za)?n.compressedTexImage2D(n.TEXTURE_CUBE_MAP_POSITIVE_X+Ba,Ib,Za,kb.width,kb.height,0,kb.data):THREE.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setCubeTexture()"):
n.texImage2D(n.TEXTURE_CUBE_MAP_POSITIVE_X+Ba,Ib,Za,kb.width,kb.height,0,Za,wb,kb.data);else Lb?n.texImage2D(n.TEXTURE_CUBE_MAP_POSITIVE_X+Ba,0,Za,jb[Ba].width,jb[Ba].height,0,Za,wb,jb[Ba].data):n.texImage2D(n.TEXTURE_CUBE_MAP_POSITIVE_X+Ba,0,Za,Za,wb,jb[Ba]);Z.generateMipmaps&&bc&&n.generateMipmap(n.TEXTURE_CUBE_MAP);Z.needsUpdate=!1;if(Z.onUpdate)Z.onUpdate()}else n.activeTexture(n.TEXTURE0+Hb),n.bindTexture(n.TEXTURE_CUBE_MAP,Z.image.__webglTextureCube)}else if(Ra instanceof THREE.WebGLRenderTargetCube){var Mb=
Ra;n.activeTexture(n.TEXTURE0+cb);n.bindTexture(n.TEXTURE_CUBE_MAP,Mb.__webglTexture)}else D.setTexture(Ra,cb);break;case "tv":void 0===V._array&&(V._array=[]);ba=0;for(Ea=V.value.length;ba<Ea;ba++)V._array[ba]=F();n.uniform1iv(da,V._array);ba=0;for(Ea=V.value.length;ba<Ea;ba++)Ra=V.value[ba],cb=V._array[ba],Ra&&D.setTexture(Ra,cb);break;default:THREE.warn("THREE.WebGLRenderer: Unknown uniform type: "+Gb)}}}}n.uniformMatrix4fv(na.modelViewMatrix,!1,f._modelViewMatrix.elements);na.normalMatrix&&n.uniformMatrix3fv(na.normalMatrix,
!1,f._normalMatrix.elements);null!==na.modelMatrix&&n.uniformMatrix4fv(na.modelMatrix,!1,f.matrixWorld.elements);return Xa}function z(a,b){a.ambientLightColor.needsUpdate=b;a.directionalLightColor.needsUpdate=b;a.directionalLightDirection.needsUpdate=b;a.pointLightColor.needsUpdate=b;a.pointLightPosition.needsUpdate=b;a.pointLightDistance.needsUpdate=b;a.pointLightDecay.needsUpdate=b;a.spotLightColor.needsUpdate=b;a.spotLightPosition.needsUpdate=b;a.spotLightDistance.needsUpdate=b;a.spotLightDirection.needsUpdate=
b;a.spotLightAngleCos.needsUpdate=b;a.spotLightExponent.needsUpdate=b;a.spotLightDecay.needsUpdate=b;a.hemisphereLightSkyColor.needsUpdate=b;a.hemisphereLightGroundColor.needsUpdate=b;a.hemisphereLightDirection.needsUpdate=b}function F(){var a=Pb;a>=Zb&&THREE.warn("WebGLRenderer: trying to use "+a+" texture units while this GPU supports only "+Zb);Pb+=1;return a}function y(a,b){a._modelViewMatrix.multiplyMatrices(b.matrixWorldInverse,a.matrixWorld);a._normalMatrix.getNormalMatrix(a._modelViewMatrix)}
function A(a,b,d,e){a[b]=d.r*e;a[b+1]=d.g*e;a[b+2]=d.b*e}function C(a,b,d){d?(n.texParameteri(a,n.TEXTURE_WRAP_S,K(b.wrapS)),n.texParameteri(a,n.TEXTURE_WRAP_T,K(b.wrapT)),n.texParameteri(a,n.TEXTURE_MAG_FILTER,K(b.magFilter)),n.texParameteri(a,n.TEXTURE_MIN_FILTER,K(b.minFilter))):(n.texParameteri(a,n.TEXTURE_WRAP_S,n.CLAMP_TO_EDGE),n.texParameteri(a,n.TEXTURE_WRAP_T,n.CLAMP_TO_EDGE),b.wrapS===THREE.ClampToEdgeWrapping&&b.wrapT===THREE.ClampToEdgeWrapping||THREE.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping. ( "+
b.sourceFile+" )"),n.texParameteri(a,n.TEXTURE_MAG_FILTER,B(b.magFilter)),n.texParameteri(a,n.TEXTURE_MIN_FILTER,B(b.minFilter)),b.minFilter!==THREE.NearestFilter&&b.minFilter!==THREE.LinearFilter&&THREE.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter. ( "+b.sourceFile+" )"));(d=ga.get("EXT_texture_filter_anisotropic"))&&b.type!==THREE.FloatType&&b.type!==THREE.HalfFloatType&&(1<b.anisotropy||b.__currentAnisotropy)&&
(n.texParameterf(a,d.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(b.anisotropy,D.getMaxAnisotropy())),b.__currentAnisotropy=b.anisotropy)}function G(a,b){if(a.width>b||a.height>b){var d=b/Math.max(a.width,a.height),e=document.createElement("canvas");e.width=Math.floor(a.width*d);e.height=Math.floor(a.height*d);e.getContext("2d").drawImage(a,0,0,a.width,a.height,0,0,e.width,e.height);THREE.warn("THREE.WebGLRenderer: image is too big ("+a.width+"x"+a.height+"). Resized to "+e.width+"x"+e.height,a);return e}return a}
function I(a,b){n.bindRenderbuffer(n.RENDERBUFFER,a);b.depthBuffer&&!b.stencilBuffer?(n.renderbufferStorage(n.RENDERBUFFER,n.DEPTH_COMPONENT16,b.width,b.height),n.framebufferRenderbuffer(n.FRAMEBUFFER,n.DEPTH_ATTACHMENT,n.RENDERBUFFER,a)):b.depthBuffer&&b.stencilBuffer?(n.renderbufferStorage(n.RENDERBUFFER,n.DEPTH_STENCIL,b.width,b.height),n.framebufferRenderbuffer(n.FRAMEBUFFER,n.DEPTH_STENCIL_ATTACHMENT,n.RENDERBUFFER,a)):n.renderbufferStorage(n.RENDERBUFFER,n.RGBA4,b.width,b.height)}function H(a){a instanceof
THREE.WebGLRenderTargetCube?(n.bindTexture(n.TEXTURE_CUBE_MAP,a.__webglTexture),n.generateMipmap(n.TEXTURE_CUBE_MAP),n.bindTexture(n.TEXTURE_CUBE_MAP,null)):(n.bindTexture(n.TEXTURE_2D,a.__webglTexture),n.generateMipmap(n.TEXTURE_2D),n.bindTexture(n.TEXTURE_2D,null))}function B(a){return a===THREE.NearestFilter||a===THREE.NearestMipMapNearestFilter||a===THREE.NearestMipMapLinearFilter?n.NEAREST:n.LINEAR}function K(a){var b;if(a===THREE.RepeatWrapping)return n.REPEAT;if(a===THREE.ClampToEdgeWrapping)return n.CLAMP_TO_EDGE;
if(a===THREE.MirroredRepeatWrapping)return n.MIRRORED_REPEAT;if(a===THREE.NearestFilter)return n.NEAREST;if(a===THREE.NearestMipMapNearestFilter)return n.NEAREST_MIPMAP_NEAREST;if(a===THREE.NearestMipMapLinearFilter)return n.NEAREST_MIPMAP_LINEAR;if(a===THREE.LinearFilter)return n.LINEAR;if(a===THREE.LinearMipMapNearestFilter)return n.LINEAR_MIPMAP_NEAREST;if(a===THREE.LinearMipMapLinearFilter)return n.LINEAR_MIPMAP_LINEAR;if(a===THREE.UnsignedByteType)return n.UNSIGNED_BYTE;if(a===THREE.UnsignedShort4444Type)return n.UNSIGNED_SHORT_4_4_4_4;
if(a===THREE.UnsignedShort5551Type)return n.UNSIGNED_SHORT_5_5_5_1;if(a===THREE.UnsignedShort565Type)return n.UNSIGNED_SHORT_5_6_5;if(a===THREE.ByteType)return n.BYTE;if(a===THREE.ShortType)return n.SHORT;if(a===THREE.UnsignedShortType)return n.UNSIGNED_SHORT;if(a===THREE.IntType)return n.INT;if(a===THREE.UnsignedIntType)return n.UNSIGNED_INT;if(a===THREE.FloatType)return n.FLOAT;b=ga.get("OES_texture_half_float");if(null!==b&&a===THREE.HalfFloatType)return b.HALF_FLOAT_OES;if(a===THREE.AlphaFormat)return n.ALPHA;
if(a===THREE.RGBFormat)return n.RGB;if(a===THREE.RGBAFormat)return n.RGBA;if(a===THREE.LuminanceFormat)return n.LUMINANCE;if(a===THREE.LuminanceAlphaFormat)return n.LUMINANCE_ALPHA;if(a===THREE.AddEquation)return n.FUNC_ADD;if(a===THREE.SubtractEquation)return n.FUNC_SUBTRACT;if(a===THREE.ReverseSubtractEquation)return n.FUNC_REVERSE_SUBTRACT;if(a===THREE.ZeroFactor)return n.ZERO;if(a===THREE.OneFactor)return n.ONE;if(a===THREE.SrcColorFactor)return n.SRC_COLOR;if(a===THREE.OneMinusSrcColorFactor)return n.ONE_MINUS_SRC_COLOR;
if(a===THREE.SrcAlphaFactor)return n.SRC_ALPHA;if(a===THREE.OneMinusSrcAlphaFactor)return n.ONE_MINUS_SRC_ALPHA;if(a===THREE.DstAlphaFactor)return n.DST_ALPHA;if(a===THREE.OneMinusDstAlphaFactor)return n.ONE_MINUS_DST_ALPHA;if(a===THREE.DstColorFactor)return n.DST_COLOR;if(a===THREE.OneMinusDstColorFactor)return n.ONE_MINUS_DST_COLOR;if(a===THREE.SrcAlphaSaturateFactor)return n.SRC_ALPHA_SATURATE;b=ga.get("WEBGL_compressed_texture_s3tc");if(null!==b){if(a===THREE.RGB_S3TC_DXT1_Format)return b.COMPRESSED_RGB_S3TC_DXT1_EXT;
if(a===THREE.RGBA_S3TC_DXT1_Format)return b.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(a===THREE.RGBA_S3TC_DXT3_Format)return b.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(a===THREE.RGBA_S3TC_DXT5_Format)return b.COMPRESSED_RGBA_S3TC_DXT5_EXT}b=ga.get("WEBGL_compressed_texture_pvrtc");if(null!==b){if(a===THREE.RGB_PVRTC_4BPPV1_Format)return b.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(a===THREE.RGB_PVRTC_2BPPV1_Format)return b.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(a===THREE.RGBA_PVRTC_4BPPV1_Format)return b.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;
if(a===THREE.RGBA_PVRTC_2BPPV1_Format)return b.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}b=ga.get("EXT_blend_minmax");if(null!==b){if(a===THREE.MinEquation)return b.MIN_EXT;if(a===THREE.MaxEquation)return b.MAX_EXT}return 0}console.log("THREE.WebGLRenderer",THREE.REVISION);a=a||{};var W=void 0!==a.canvas?a.canvas:document.createElement("canvas"),O=void 0!==a.context?a.context:null,J=1,N=void 0!==a.precision?a.precision:"highp",R=void 0!==a.alpha?a.alpha:!1,P=void 0!==a.depth?a.depth:!0,T=void 0!==a.stencil?
a.stencil:!0,X=void 0!==a.antialias?a.antialias:!1,L=void 0!==a.premultipliedAlpha?a.premultipliedAlpha:!0,ra=void 0!==a.preserveDrawingBuffer?a.preserveDrawingBuffer:!1,ma=void 0!==a.logarithmicDepthBuffer?a.logarithmicDepthBuffer:!1,ka=new THREE.Color(0),Q=0,fa=[],ea={},ta=[],Na=[],Ta=[],$a=[],ab=[];this.domElement=W;this.context=null;this.sortObjects=this.autoClearStencil=this.autoClearDepth=this.autoClearColor=this.autoClear=!0;this.gammaFactor=2;this.shadowMapEnabled=this.gammaOutput=this.gammaInput=
!1;this.shadowMapType=THREE.PCFShadowMap;this.shadowMapCullFace=THREE.CullFaceFront;this.shadowMapCascade=this.shadowMapDebug=!1;this.maxMorphTargets=8;this.maxMorphNormals=4;this.autoScaleCubemaps=!0;this.info={memory:{programs:0,geometries:0,textures:0},render:{calls:0,vertices:0,faces:0,points:0}};var D=this,Sa=[],rb=null,db=null,xb=-1,wa="",yb=null,Pb=0,lb=0,eb=0,sb=W.width,tb=W.height,$b=0,ic=0,fb=new THREE.Frustum,gb=new THREE.Matrix4,za=new THREE.Vector3,sa=new THREE.Vector3,Rb=!0,mc={ambient:[0,
0,0],directional:{length:0,colors:[],positions:[]},point:{length:0,colors:[],positions:[],distances:[],decays:[]},spot:{length:0,colors:[],positions:[],distances:[],directions:[],anglesCos:[],exponents:[],decays:[]},hemi:{length:0,skyColors:[],groundColors:[],positions:[]}},n;try{var ac={alpha:R,depth:P,stencil:T,antialias:X,premultipliedAlpha:L,preserveDrawingBuffer:ra};n=O||W.getContext("webgl",ac)||W.getContext("experimental-webgl",ac);if(null===n){if(null!==W.getContext("webgl"))throw"Error creating WebGL context with your selected attributes.";
throw"Error creating WebGL context.";}W.addEventListener("webglcontextlost",function(a){a.preventDefault();bc();oc();ea={}},!1)}catch(uc){THREE.error("THREE.WebGLRenderer: "+uc)}var Y=new THREE.WebGLState(n,K);void 0===n.getShaderPrecisionFormat&&(n.getShaderPrecisionFormat=function(){return{rangeMin:1,rangeMax:1,precision:1}});var ga=new THREE.WebGLExtensions(n);ga.get("OES_texture_float");ga.get("OES_texture_float_linear");ga.get("OES_texture_half_float");ga.get("OES_texture_half_float_linear");
ga.get("OES_standard_derivatives");ma&&ga.get("EXT_frag_depth");var ub=function(a,b,d,e){!0===L&&(a*=e,b*=e,d*=e);n.clearColor(a,b,d,e)},oc=function(){n.clearColor(0,0,0,1);n.clearDepth(1);n.clearStencil(0);n.enable(n.DEPTH_TEST);n.depthFunc(n.LEQUAL);n.frontFace(n.CCW);n.cullFace(n.BACK);n.enable(n.CULL_FACE);n.enable(n.BLEND);n.blendEquation(n.FUNC_ADD);n.blendFunc(n.SRC_ALPHA,n.ONE_MINUS_SRC_ALPHA);n.viewport(lb,eb,sb,tb);ub(ka.r,ka.g,ka.b,Q)},bc=function(){yb=rb=null;wa="";xb=-1;Rb=!0;Y.reset()};
oc();this.context=n;this.state=Y;var Zb=n.getParameter(n.MAX_TEXTURE_IMAGE_UNITS),vc=n.getParameter(n.MAX_VERTEX_TEXTURE_IMAGE_UNITS),wc=n.getParameter(n.MAX_TEXTURE_SIZE),tc=n.getParameter(n.MAX_CUBE_MAP_TEXTURE_SIZE),Yb=0<vc,Qb=Yb&&ga.get("OES_texture_float"),xc=n.getShaderPrecisionFormat(n.VERTEX_SHADER,n.HIGH_FLOAT),yc=n.getShaderPrecisionFormat(n.VERTEX_SHADER,n.MEDIUM_FLOAT),zc=n.getShaderPrecisionFormat(n.FRAGMENT_SHADER,n.HIGH_FLOAT),Ac=n.getShaderPrecisionFormat(n.FRAGMENT_SHADER,n.MEDIUM_FLOAT),
nc=function(){var a;return function(){if(void 0!==a)return a;a=[];if(ga.get("WEBGL_compressed_texture_pvrtc")||ga.get("WEBGL_compressed_texture_s3tc"))for(var b=n.getParameter(n.COMPRESSED_TEXTURE_FORMATS),d=0;d<b.length;d++)a.push(b[d]);return a}}(),Bc=0<xc.precision&&0<zc.precision,pc=0<yc.precision&&0<Ac.precision;"highp"!==N||Bc||(pc?(N="mediump",THREE.warn("THREE.WebGLRenderer: highp not supported, using mediump.")):(N="lowp",THREE.warn("THREE.WebGLRenderer: highp and mediump not supported, using lowp.")));
"mediump"!==N||pc||(N="lowp",THREE.warn("THREE.WebGLRenderer: mediump not supported, using lowp."));var Cc=new THREE.ShadowMapPlugin(this,fa,ea,ta),Dc=new THREE.SpritePlugin(this,$a),Ec=new THREE.LensFlarePlugin(this,ab);this.getContext=function(){return n};this.forceContextLoss=function(){ga.get("WEBGL_lose_context").loseContext()};this.supportsVertexTextures=function(){return Yb};this.supportsFloatTextures=function(){return ga.get("OES_texture_float")};this.supportsHalfFloatTextures=function(){return ga.get("OES_texture_half_float")};
this.supportsStandardDerivatives=function(){return ga.get("OES_standard_derivatives")};this.supportsCompressedTextureS3TC=function(){return ga.get("WEBGL_compressed_texture_s3tc")};this.supportsCompressedTexturePVRTC=function(){return ga.get("WEBGL_compressed_texture_pvrtc")};this.supportsBlendMinMax=function(){return ga.get("EXT_blend_minmax")};this.getMaxAnisotropy=function(){var a;return function(){if(void 0!==a)return a;var b=ga.get("EXT_texture_filter_anisotropic");return a=null!==b?n.getParameter(b.MAX_TEXTURE_MAX_ANISOTROPY_EXT):
0}}();this.getPrecision=function(){return N};this.getPixelRatio=function(){return J};this.setPixelRatio=function(a){J=a};this.setSize=function(a,b,d){W.width=a*J;W.height=b*J;!1!==d&&(W.style.width=a+"px",W.style.height=b+"px");this.setViewport(0,0,a,b)};this.setViewport=function(a,b,d,e){lb=a*J;eb=b*J;sb=d*J;tb=e*J;n.viewport(lb,eb,sb,tb)};this.setScissor=function(a,b,d,e){n.scissor(a*J,b*J,d*J,e*J)};this.enableScissorTest=function(a){a?n.enable(n.SCISSOR_TEST):n.disable(n.SCISSOR_TEST)};this.getClearColor=
function(){return ka};this.setClearColor=function(a,b){ka.set(a);Q=void 0!==b?b:1;ub(ka.r,ka.g,ka.b,Q)};this.getClearAlpha=function(){return Q};this.setClearAlpha=function(a){Q=a;ub(ka.r,ka.g,ka.b,Q)};this.clear=function(a,b,d){var e=0;if(void 0===a||a)e|=n.COLOR_BUFFER_BIT;if(void 0===b||b)e|=n.DEPTH_BUFFER_BIT;if(void 0===d||d)e|=n.STENCIL_BUFFER_BIT;n.clear(e)};this.clearColor=function(){n.clear(n.COLOR_BUFFER_BIT)};this.clearDepth=function(){n.clear(n.DEPTH_BUFFER_BIT)};this.clearStencil=function(){n.clear(n.STENCIL_BUFFER_BIT)};
this.clearTarget=function(a,b,d,e){this.setRenderTarget(a);this.clear(b,d,e)};this.resetGLState=bc;var zb=function(a){a.target.traverse(function(a){a.removeEventListener("remove",zb);if(a instanceof THREE.Mesh||a instanceof THREE.PointCloud||a instanceof THREE.Line)delete ea[a.id];else if(a instanceof THREE.ImmediateRenderObject||a.immediateRenderCallback)for(var b=ta,d=b.length-1;0<=d;d--)b[d].object===a&&b.splice(d,1);delete a.__webglInit;delete a._modelViewMatrix;delete a._normalMatrix;delete a.__webglActive})},
mb=function(a){a=a.target;a.removeEventListener("dispose",mb);delete a.__webglInit;if(a instanceof THREE.BufferGeometry){for(var b in a.attributes){var d=a.attributes[b];void 0!==d.buffer&&(n.deleteBuffer(d.buffer),delete d.buffer)}D.info.memory.geometries--}else if(b=Xa[a.id],void 0!==b){for(var d=0,e=b.length;d<e;d++){var f=b[d];if(void 0!==f.numMorphTargets){for(var g=0,h=f.numMorphTargets;g<h;g++)n.deleteBuffer(f.__webglMorphTargetsBuffers[g]);delete f.__webglMorphTargetsBuffers}if(void 0!==f.numMorphNormals){g=
0;for(h=f.numMorphNormals;g<h;g++)n.deleteBuffer(f.__webglMorphNormalsBuffers[g]);delete f.__webglMorphNormalsBuffers}qc(f)}delete Xa[a.id]}else qc(a);wa=""},Sb=function(a){a=a.target;a.removeEventListener("dispose",Sb);a.image&&a.image.__webglTextureCube?(n.deleteTexture(a.image.__webglTextureCube),delete a.image.__webglTextureCube):void 0!==a.__webglInit&&(n.deleteTexture(a.__webglTexture),delete a.__webglTexture,delete a.__webglInit);D.info.memory.textures--},rc=function(a){a=a.target;a.removeEventListener("dispose",
rc);if(a&&void 0!==a.__webglTexture){n.deleteTexture(a.__webglTexture);delete a.__webglTexture;if(a instanceof THREE.WebGLRenderTargetCube)for(var b=0;6>b;b++)n.deleteFramebuffer(a.__webglFramebuffer[b]),n.deleteRenderbuffer(a.__webglRenderbuffer[b]);else n.deleteFramebuffer(a.__webglFramebuffer),n.deleteRenderbuffer(a.__webglRenderbuffer);delete a.__webglFramebuffer;delete a.__webglRenderbuffer}D.info.memory.textures--},lc=function(a){a=a.target;a.removeEventListener("dispose",lc);kc(a)},qc=function(a){for(var b=
"__webglVertexBuffer __webglNormalBuffer __webglTangentBuffer __webglColorBuffer __webglUVBuffer __webglUV2Buffer __webglSkinIndicesBuffer __webglSkinWeightsBuffer __webglFaceBuffer __webglLineBuffer __webglLineDistanceBuffer".split(" "),d=0,e=b.length;d<e;d++){var f=b[d];void 0!==a[f]&&(n.deleteBuffer(a[f]),delete a[f])}if(void 0!==a.__webglCustomAttributesList){for(f in a.__webglCustomAttributesList)n.deleteBuffer(a.__webglCustomAttributesList[f].buffer);delete a.__webglCustomAttributesList}D.info.memory.geometries--},
kc=function(a){var b=a.program.program;if(void 0!==b){a.program=void 0;var d,e,f=!1;a=0;for(d=Sa.length;a<d;a++)if(e=Sa[a],e.program===b){e.usedTimes--;0===e.usedTimes&&(f=!0);break}if(!0===f){f=[];a=0;for(d=Sa.length;a<d;a++)e=Sa[a],e.program!==b&&f.push(e);Sa=f;n.deleteProgram(b);D.info.memory.programs--}}};this.renderBufferImmediate=function(a,b,d){Y.initAttributes();a.hasPositions&&!a.__webglVertexBuffer&&(a.__webglVertexBuffer=n.createBuffer());a.hasNormals&&!a.__webglNormalBuffer&&(a.__webglNormalBuffer=
n.createBuffer());a.hasUvs&&!a.__webglUvBuffer&&(a.__webglUvBuffer=n.createBuffer());a.hasColors&&!a.__webglColorBuffer&&(a.__webglColorBuffer=n.createBuffer());a.hasPositions&&(n.bindBuffer(n.ARRAY_BUFFER,a.__webglVertexBuffer),n.bufferData(n.ARRAY_BUFFER,a.positionArray,n.DYNAMIC_DRAW),Y.enableAttribute(b.attributes.position),n.vertexAttribPointer(b.attributes.position,3,n.FLOAT,!1,0,0));if(a.hasNormals){n.bindBuffer(n.ARRAY_BUFFER,a.__webglNormalBuffer);if(!1===d instanceof THREE.MeshPhongMaterial&&
d.shading===THREE.FlatShading){var e,f,g,h,k,l,p,m,q,r,t,u=3*a.count;for(t=0;t<u;t+=9)r=a.normalArray,e=r[t],f=r[t+1],g=r[t+2],h=r[t+3],l=r[t+4],m=r[t+5],k=r[t+6],p=r[t+7],q=r[t+8],e=(e+h+k)/3,f=(f+l+p)/3,g=(g+m+q)/3,r[t]=e,r[t+1]=f,r[t+2]=g,r[t+3]=e,r[t+4]=f,r[t+5]=g,r[t+6]=e,r[t+7]=f,r[t+8]=g}n.bufferData(n.ARRAY_BUFFER,a.normalArray,n.DYNAMIC_DRAW);Y.enableAttribute(b.attributes.normal);n.vertexAttribPointer(b.attributes.normal,3,n.FLOAT,!1,0,0)}a.hasUvs&&d.map&&(n.bindBuffer(n.ARRAY_BUFFER,a.__webglUvBuffer),
n.bufferData(n.ARRAY_BUFFER,a.uvArray,n.DYNAMIC_DRAW),Y.enableAttribute(b.attributes.uv),n.vertexAttribPointer(b.attributes.uv,2,n.FLOAT,!1,0,0));a.hasColors&&d.vertexColors!==THREE.NoColors&&(n.bindBuffer(n.ARRAY_BUFFER,a.__webglColorBuffer),n.bufferData(n.ARRAY_BUFFER,a.colorArray,n.DYNAMIC_DRAW),Y.enableAttribute(b.attributes.color),n.vertexAttribPointer(b.attributes.color,3,n.FLOAT,!1,0,0));Y.disableUnusedAttributes();n.drawArrays(n.TRIANGLES,0,a.count);a.count=0};this.renderBufferDirect=function(a,
b,d,f,g,h){if(!1!==f.visible)if(v(h),a=x(a,b,d,f,h),b=!1,d="direct_"+g.id+"_"+a.id+"_"+(f.wireframe?1:0),d!==wa&&(wa=d,b=!0),b&&Y.initAttributes(),h instanceof THREE.Mesh){h=!0===f.wireframe?n.LINES:n.TRIANGLES;var k=g.attributes.index;if(k){var l,p;k.array instanceof Uint32Array&&ga.get("OES_element_index_uint")?(l=n.UNSIGNED_INT,p=4):(l=n.UNSIGNED_SHORT,p=2);d=g.offsets;if(0===d.length)b&&(e(f,a,g,0),n.bindBuffer(n.ELEMENT_ARRAY_BUFFER,k.buffer)),n.drawElements(h,k.array.length,l,0),D.info.render.calls++,
D.info.render.vertices+=k.array.length,D.info.render.faces+=k.array.length/3;else{b=!0;for(var m=0,q=d.length;m<q;m++){var r=d[m].index;b&&(e(f,a,g,r),n.bindBuffer(n.ELEMENT_ARRAY_BUFFER,k.buffer));n.drawElements(h,d[m].count,l,d[m].start*p);D.info.render.calls++;D.info.render.vertices+=d[m].count;D.info.render.faces+=d[m].count/3}}}else b&&e(f,a,g,0),f=g.attributes.position,n.drawArrays(h,0,f.array.length/f.itemSize),D.info.render.calls++,D.info.render.vertices+=f.array.length/f.itemSize,D.info.render.faces+=
f.array.length/(3*f.itemSize)}else if(h instanceof THREE.PointCloud)if(h=n.POINTS,k=g.attributes.index)if(k.array instanceof Uint32Array&&ga.get("OES_element_index_uint")?(l=n.UNSIGNED_INT,p=4):(l=n.UNSIGNED_SHORT,p=2),d=g.offsets,0===d.length)b&&(e(f,a,g,0),n.bindBuffer(n.ELEMENT_ARRAY_BUFFER,k.buffer)),n.drawElements(h,k.array.length,l,0),D.info.render.calls++,D.info.render.points+=k.array.length;else for(1<d.length&&(b=!0),m=0,q=d.length;m<q;m++)r=d[m].index,b&&(e(f,a,g,r),n.bindBuffer(n.ELEMENT_ARRAY_BUFFER,
k.buffer)),n.drawElements(h,d[m].count,l,d[m].start*p),D.info.render.calls++,D.info.render.points+=d[m].count;else if(b&&e(f,a,g,0),f=g.attributes.position,d=g.offsets,0===d.length)n.drawArrays(h,0,f.array.length/3),D.info.render.calls++,D.info.render.points+=f.array.length/3;else for(m=0,q=d.length;m<q;m++)n.drawArrays(h,d[m].index,d[m].count),D.info.render.calls++,D.info.render.points+=d[m].count;else if(h instanceof THREE.Line)if(h=h.mode===THREE.LineStrip?n.LINE_STRIP:n.LINES,Y.setLineWidth(f.linewidth*
J),k=g.attributes.index)if(k.array instanceof Uint32Array?(l=n.UNSIGNED_INT,p=4):(l=n.UNSIGNED_SHORT,p=2),d=g.offsets,0===d.length)b&&(e(f,a,g,0),n.bindBuffer(n.ELEMENT_ARRAY_BUFFER,k.buffer)),n.drawElements(h,k.array.length,l,0),D.info.render.calls++,D.info.render.vertices+=k.array.length;else for(1<d.length&&(b=!0),m=0,q=d.length;m<q;m++)r=d[m].index,b&&(e(f,a,g,r),n.bindBuffer(n.ELEMENT_ARRAY_BUFFER,k.buffer)),n.drawElements(h,d[m].count,l,d[m].start*p),D.info.render.calls++,D.info.render.vertices+=
d[m].count;else if(b&&e(f,a,g,0),f=g.attributes.position,d=g.offsets,0===d.length)n.drawArrays(h,0,f.array.length/3),D.info.render.calls++,D.info.render.vertices+=f.array.length/3;else for(m=0,q=d.length;m<q;m++)n.drawArrays(h,d[m].index,d[m].count),D.info.render.calls++,D.info.render.vertices+=d[m].count};this.renderBuffer=function(a,b,d,e,f,g){if(!1!==e.visible){v(g);d=x(a,b,d,e,g);b=d.attributes;a=!1;d=f.id+"_"+d.id+"_"+(e.wireframe?1:0);d!==wa&&(wa=d,a=!0);a&&Y.initAttributes();if(!e.morphTargets&&
0<=b.position)a&&(n.bindBuffer(n.ARRAY_BUFFER,f.__webglVertexBuffer),Y.enableAttribute(b.position),n.vertexAttribPointer(b.position,3,n.FLOAT,!1,0,0));else if(g.morphTargetBase){d=e.program.attributes;-1!==g.morphTargetBase&&0<=d.position?(n.bindBuffer(n.ARRAY_BUFFER,f.__webglMorphTargetsBuffers[g.morphTargetBase]),Y.enableAttribute(d.position),n.vertexAttribPointer(d.position,3,n.FLOAT,!1,0,0)):0<=d.position&&(n.bindBuffer(n.ARRAY_BUFFER,f.__webglVertexBuffer),Y.enableAttribute(d.position),n.vertexAttribPointer(d.position,
3,n.FLOAT,!1,0,0));if(g.morphTargetForcedOrder.length)for(var k=0,l=g.morphTargetForcedOrder,p=g.morphTargetInfluences,m;k<e.numSupportedMorphTargets&&k<l.length;)m=d["morphTarget"+k],0<=m&&(n.bindBuffer(n.ARRAY_BUFFER,f.__webglMorphTargetsBuffers[l[k]]),Y.enableAttribute(m),n.vertexAttribPointer(m,3,n.FLOAT,!1,0,0)),m=d["morphNormal"+k],0<=m&&e.morphNormals&&(n.bindBuffer(n.ARRAY_BUFFER,f.__webglMorphNormalsBuffers[l[k]]),Y.enableAttribute(m),n.vertexAttribPointer(m,3,n.FLOAT,!1,0,0)),g.__webglMorphTargetInfluences[k]=
p[l[k]],k++;else{l=[];p=g.morphTargetInfluences;k=g.geometry.morphTargets;p.length>k.length&&(console.warn("THREE.WebGLRenderer: Influences array is bigger than morphTargets array."),p.length=k.length);k=0;for(m=p.length;k<m;k++)l.push([p[k],k]);l.length>e.numSupportedMorphTargets?(l.sort(h),l.length=e.numSupportedMorphTargets):l.length>e.numSupportedMorphNormals?l.sort(h):0===l.length&&l.push([0,0]);for(var k=0,q=e.numSupportedMorphTargets;k<q;k++)if(l[k]){var r=l[k][1];m=d["morphTarget"+k];0<=m&&
(n.bindBuffer(n.ARRAY_BUFFER,f.__webglMorphTargetsBuffers[r]),Y.enableAttribute(m),n.vertexAttribPointer(m,3,n.FLOAT,!1,0,0));m=d["morphNormal"+k];0<=m&&e.morphNormals&&(n.bindBuffer(n.ARRAY_BUFFER,f.__webglMorphNormalsBuffers[r]),Y.enableAttribute(m),n.vertexAttribPointer(m,3,n.FLOAT,!1,0,0));g.__webglMorphTargetInfluences[k]=p[r]}else g.__webglMorphTargetInfluences[k]=0}null!==e.program.uniforms.morphTargetInfluences&&n.uniform1fv(e.program.uniforms.morphTargetInfluences,g.__webglMorphTargetInfluences)}if(a){if(f.__webglCustomAttributesList)for(d=
0,p=f.__webglCustomAttributesList.length;d<p;d++)l=f.__webglCustomAttributesList[d],0<=b[l.buffer.belongsToAttribute]&&(n.bindBuffer(n.ARRAY_BUFFER,l.buffer),Y.enableAttribute(b[l.buffer.belongsToAttribute]),n.vertexAttribPointer(b[l.buffer.belongsToAttribute],l.size,n.FLOAT,!1,0,0));0<=b.color&&(0<g.geometry.colors.length||0<g.geometry.faces.length?(n.bindBuffer(n.ARRAY_BUFFER,f.__webglColorBuffer),Y.enableAttribute(b.color),n.vertexAttribPointer(b.color,3,n.FLOAT,!1,0,0)):void 0!==e.defaultAttributeValues&&
n.vertexAttrib3fv(b.color,e.defaultAttributeValues.color));0<=b.normal&&(n.bindBuffer(n.ARRAY_BUFFER,f.__webglNormalBuffer),Y.enableAttribute(b.normal),n.vertexAttribPointer(b.normal,3,n.FLOAT,!1,0,0));0<=b.tangent&&(n.bindBuffer(n.ARRAY_BUFFER,f.__webglTangentBuffer),Y.enableAttribute(b.tangent),n.vertexAttribPointer(b.tangent,4,n.FLOAT,!1,0,0));0<=b.uv&&(g.geometry.faceVertexUvs[0]?(n.bindBuffer(n.ARRAY_BUFFER,f.__webglUVBuffer),Y.enableAttribute(b.uv),n.vertexAttribPointer(b.uv,2,n.FLOAT,!1,0,
0)):void 0!==e.defaultAttributeValues&&n.vertexAttrib2fv(b.uv,e.defaultAttributeValues.uv));0<=b.uv2&&(g.geometry.faceVertexUvs[1]?(n.bindBuffer(n.ARRAY_BUFFER,f.__webglUV2Buffer),Y.enableAttribute(b.uv2),n.vertexAttribPointer(b.uv2,2,n.FLOAT,!1,0,0)):void 0!==e.defaultAttributeValues&&n.vertexAttrib2fv(b.uv2,e.defaultAttributeValues.uv2));e.skinning&&0<=b.skinIndex&&0<=b.skinWeight&&(n.bindBuffer(n.ARRAY_BUFFER,f.__webglSkinIndicesBuffer),Y.enableAttribute(b.skinIndex),n.vertexAttribPointer(b.skinIndex,
4,n.FLOAT,!1,0,0),n.bindBuffer(n.ARRAY_BUFFER,f.__webglSkinWeightsBuffer),Y.enableAttribute(b.skinWeight),n.vertexAttribPointer(b.skinWeight,4,n.FLOAT,!1,0,0));0<=b.lineDistance&&(n.bindBuffer(n.ARRAY_BUFFER,f.__webglLineDistanceBuffer),Y.enableAttribute(b.lineDistance),n.vertexAttribPointer(b.lineDistance,1,n.FLOAT,!1,0,0))}Y.disableUnusedAttributes();g instanceof THREE.Mesh?(g=f.__typeArray===Uint32Array?n.UNSIGNED_INT:n.UNSIGNED_SHORT,e.wireframe?(Y.setLineWidth(e.wireframeLinewidth*J),a&&n.bindBuffer(n.ELEMENT_ARRAY_BUFFER,
f.__webglLineBuffer),n.drawElements(n.LINES,f.__webglLineCount,g,0)):(a&&n.bindBuffer(n.ELEMENT_ARRAY_BUFFER,f.__webglFaceBuffer),n.drawElements(n.TRIANGLES,f.__webglFaceCount,g,0)),D.info.render.calls++,D.info.render.vertices+=f.__webglFaceCount,D.info.render.faces+=f.__webglFaceCount/3):g instanceof THREE.Line?(g=g.mode===THREE.LineStrip?n.LINE_STRIP:n.LINES,Y.setLineWidth(e.linewidth*J),n.drawArrays(g,0,f.__webglLineCount),D.info.render.calls++):g instanceof THREE.PointCloud&&(n.drawArrays(n.POINTS,
0,f.__webglParticleCount),D.info.render.calls++,D.info.render.points+=f.__webglParticleCount)}};this.render=function(a,b,d,e){if(!1===b instanceof THREE.Camera)THREE.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.");else{var h=a.fog;wa="";xb=-1;yb=null;Rb=!0;!0===a.autoUpdate&&a.updateMatrixWorld();void 0===b.parent&&b.updateMatrixWorld();a.traverse(function(a){a instanceof THREE.SkinnedMesh&&a.skeleton.update()});b.matrixWorldInverse.getInverse(b.matrixWorld);gb.multiplyMatrices(b.projectionMatrix,
b.matrixWorldInverse);fb.setFromMatrix(gb);fa.length=0;Na.length=0;Ta.length=0;$a.length=0;ab.length=0;k(a);!0===D.sortObjects&&(Na.sort(f),Ta.sort(g));Cc.render(a,b);D.info.render.calls=0;D.info.render.vertices=0;D.info.render.faces=0;D.info.render.points=0;this.setRenderTarget(d);(this.autoClear||e)&&this.clear(this.autoClearColor,this.autoClearDepth,this.autoClearStencil);e=0;for(var p=ta.length;e<p;e++){var n=ta[e],r=n.object;r.visible&&(y(r,b),q(n))}a.overrideMaterial?(e=a.overrideMaterial,w(e),
l(Na,b,fa,h,e),l(Ta,b,fa,h,e),m(ta,"",b,fa,h,e)):(Y.setBlending(THREE.NoBlending),l(Na,b,fa,h,null),m(ta,"opaque",b,fa,h,null),l(Ta,b,fa,h,null),m(ta,"transparent",b,fa,h,null));Dc.render(a,b);Ec.render(a,b,$b,ic);d&&d.generateMipmaps&&d.minFilter!==THREE.NearestFilter&&d.minFilter!==THREE.LinearFilter&&H(d);Y.setDepthTest(!0);Y.setDepthWrite(!0);Y.setColorWrite(!0)}};this.renderImmediateObject=function(a,b,d,e,f){var g=x(a,b,d,e,f);wa="";D.setMaterialFaces(e);f.immediateRenderCallback?f.immediateRenderCallback(g,
n,fb):f.render(function(a){D.renderBufferImmediate(a,g,e)})};var Xa={},Tb=0,sc={MeshDepthMaterial:"depth",MeshNormalMaterial:"normal",MeshBasicMaterial:"basic",MeshLambertMaterial:"lambert",MeshPhongMaterial:"phong",LineBasicMaterial:"basic",LineDashedMaterial:"dashed",PointCloudMaterial:"particle_basic"};this.setFaceCulling=function(a,b){a===THREE.CullFaceNone?n.disable(n.CULL_FACE):(b===THREE.FrontFaceDirectionCW?n.frontFace(n.CW):n.frontFace(n.CCW),a===THREE.CullFaceBack?n.cullFace(n.BACK):a===
THREE.CullFaceFront?n.cullFace(n.FRONT):n.cullFace(n.FRONT_AND_BACK),n.enable(n.CULL_FACE))};this.setMaterialFaces=function(a){Y.setDoubleSided(a.side===THREE.DoubleSide);Y.setFlipSided(a.side===THREE.BackSide)};this.uploadTexture=function(a){void 0===a.__webglInit&&(a.__webglInit=!0,a.addEventListener("dispose",Sb),a.__webglTexture=n.createTexture(),D.info.memory.textures++);n.bindTexture(n.TEXTURE_2D,a.__webglTexture);n.pixelStorei(n.UNPACK_FLIP_Y_WEBGL,a.flipY);n.pixelStorei(n.UNPACK_PREMULTIPLY_ALPHA_WEBGL,
a.premultiplyAlpha);n.pixelStorei(n.UNPACK_ALIGNMENT,a.unpackAlignment);a.image=G(a.image,wc);var b=a.image,d=THREE.Math.isPowerOfTwo(b.width)&&THREE.Math.isPowerOfTwo(b.height),e=K(a.format),f=K(a.type);C(n.TEXTURE_2D,a,d);var g=a.mipmaps;if(a instanceof THREE.DataTexture)if(0<g.length&&d){for(var h=0,k=g.length;h<k;h++)b=g[h],n.texImage2D(n.TEXTURE_2D,h,e,b.width,b.height,0,e,f,b.data);a.generateMipmaps=!1}else n.texImage2D(n.TEXTURE_2D,0,e,b.width,b.height,0,e,f,b.data);else if(a instanceof THREE.CompressedTexture)for(h=
0,k=g.length;h<k;h++)b=g[h],a.format!==THREE.RGBAFormat&&a.format!==THREE.RGBFormat?-1<nc().indexOf(e)?n.compressedTexImage2D(n.TEXTURE_2D,h,e,b.width,b.height,0,b.data):THREE.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):n.texImage2D(n.TEXTURE_2D,h,e,b.width,b.height,0,e,f,b.data);else if(0<g.length&&d){h=0;for(k=g.length;h<k;h++)b=g[h],n.texImage2D(n.TEXTURE_2D,h,e,e,f,b);a.generateMipmaps=!1}else n.texImage2D(n.TEXTURE_2D,0,e,e,f,a.image);
a.generateMipmaps&&d&&n.generateMipmap(n.TEXTURE_2D);a.needsUpdate=!1;if(a.onUpdate)a.onUpdate()};this.setTexture=function(a,b){n.activeTexture(n.TEXTURE0+b);a.needsUpdate?D.uploadTexture(a):n.bindTexture(n.TEXTURE_2D,a.__webglTexture)};this.setRenderTarget=function(a){var b=a instanceof THREE.WebGLRenderTargetCube;if(a&&void 0===a.__webglFramebuffer){void 0===a.depthBuffer&&(a.depthBuffer=!0);void 0===a.stencilBuffer&&(a.stencilBuffer=!0);a.addEventListener("dispose",rc);a.__webglTexture=n.createTexture();
D.info.memory.textures++;var d=THREE.Math.isPowerOfTwo(a.width)&&THREE.Math.isPowerOfTwo(a.height),e=K(a.format),f=K(a.type);if(b){a.__webglFramebuffer=[];a.__webglRenderbuffer=[];n.bindTexture(n.TEXTURE_CUBE_MAP,a.__webglTexture);C(n.TEXTURE_CUBE_MAP,a,d);for(var g=0;6>g;g++){a.__webglFramebuffer[g]=n.createFramebuffer();a.__webglRenderbuffer[g]=n.createRenderbuffer();n.texImage2D(n.TEXTURE_CUBE_MAP_POSITIVE_X+g,0,e,a.width,a.height,0,e,f,null);var h=a,k=n.TEXTURE_CUBE_MAP_POSITIVE_X+g;n.bindFramebuffer(n.FRAMEBUFFER,
a.__webglFramebuffer[g]);n.framebufferTexture2D(n.FRAMEBUFFER,n.COLOR_ATTACHMENT0,k,h.__webglTexture,0);I(a.__webglRenderbuffer[g],a)}d&&n.generateMipmap(n.TEXTURE_CUBE_MAP)}else a.__webglFramebuffer=n.createFramebuffer(),a.__webglRenderbuffer=a.shareDepthFrom?a.shareDepthFrom.__webglRenderbuffer:n.createRenderbuffer(),n.bindTexture(n.TEXTURE_2D,a.__webglTexture),C(n.TEXTURE_2D,a,d),n.texImage2D(n.TEXTURE_2D,0,e,a.width,a.height,0,e,f,null),e=n.TEXTURE_2D,n.bindFramebuffer(n.FRAMEBUFFER,a.__webglFramebuffer),
n.framebufferTexture2D(n.FRAMEBUFFER,n.COLOR_ATTACHMENT0,e,a.__webglTexture,0),a.shareDepthFrom?a.depthBuffer&&!a.stencilBuffer?n.framebufferRenderbuffer(n.FRAMEBUFFER,n.DEPTH_ATTACHMENT,n.RENDERBUFFER,a.__webglRenderbuffer):a.depthBuffer&&a.stencilBuffer&&n.framebufferRenderbuffer(n.FRAMEBUFFER,n.DEPTH_STENCIL_ATTACHMENT,n.RENDERBUFFER,a.__webglRenderbuffer):I(a.__webglRenderbuffer,a),d&&n.generateMipmap(n.TEXTURE_2D);b?n.bindTexture(n.TEXTURE_CUBE_MAP,null):n.bindTexture(n.TEXTURE_2D,null);n.bindRenderbuffer(n.RENDERBUFFER,
null);n.bindFramebuffer(n.FRAMEBUFFER,null)}a?(b=b?a.__webglFramebuffer[a.activeCubeFace]:a.__webglFramebuffer,d=a.width,a=a.height,f=e=0):(b=null,d=sb,a=tb,e=lb,f=eb);b!==db&&(n.bindFramebuffer(n.FRAMEBUFFER,b),n.viewport(e,f,d,a),db=b);$b=d;ic=a};this.readRenderTargetPixels=function(a,b,d,e,f,g){if(!(a instanceof THREE.WebGLRenderTarget))console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");else if(a.__webglFramebuffer)if(a.format!==THREE.RGBAFormat)console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA format. readPixels can read only RGBA format.");
else{var h=!1;a.__webglFramebuffer!==db&&(n.bindFramebuffer(n.FRAMEBUFFER,a.__webglFramebuffer),h=!0);n.checkFramebufferStatus(n.FRAMEBUFFER)===n.FRAMEBUFFER_COMPLETE?n.readPixels(b,d,e,f,n.RGBA,n.UNSIGNED_BYTE,g):console.error("THREE.WebGLRenderer.readRenderTargetPixels: readPixels from renderTarget failed. Framebuffer not complete.");h&&n.bindFramebuffer(n.FRAMEBUFFER,db)}};this.initMaterial=function(){THREE.warn("THREE.WebGLRenderer: .initMaterial() has been removed.")};this.addPrePlugin=function(){THREE.warn("THREE.WebGLRenderer: .addPrePlugin() has been removed.")};
this.addPostPlugin=function(){THREE.warn("THREE.WebGLRenderer: .addPostPlugin() has been removed.")};this.updateShadowMap=function(){THREE.warn("THREE.WebGLRenderer: .updateShadowMap() has been removed.")}};
THREE.WebGLRenderTarget=function(a,b,d){this.width=a;this.height=b;d=d||{};this.wrapS=void 0!==d.wrapS?d.wrapS:THREE.ClampToEdgeWrapping;this.wrapT=void 0!==d.wrapT?d.wrapT:THREE.ClampToEdgeWrapping;this.magFilter=void 0!==d.magFilter?d.magFilter:THREE.LinearFilter;this.minFilter=void 0!==d.minFilter?d.minFilter:THREE.LinearMipMapLinearFilter;this.anisotropy=void 0!==d.anisotropy?d.anisotropy:1;this.offset=new THREE.Vector2(0,0);this.repeat=new THREE.Vector2(1,1);this.format=void 0!==d.format?d.format:
THREE.RGBAFormat;this.type=void 0!==d.type?d.type:THREE.UnsignedByteType;this.depthBuffer=void 0!==d.depthBuffer?d.depthBuffer:!0;this.stencilBuffer=void 0!==d.stencilBuffer?d.stencilBuffer:!0;this.generateMipmaps=!0;this.shareDepthFrom=void 0!==d.shareDepthFrom?d.shareDepthFrom:null};
THREE.WebGLRenderTarget.prototype={constructor:THREE.WebGLRenderTarget,setSize:function(a,b){this.width=a;this.height=b},clone:function(){var a=new THREE.WebGLRenderTarget(this.width,this.height);a.wrapS=this.wrapS;a.wrapT=this.wrapT;a.magFilter=this.magFilter;a.minFilter=this.minFilter;a.anisotropy=this.anisotropy;a.offset.copy(this.offset);a.repeat.copy(this.repeat);a.format=this.format;a.type=this.type;a.depthBuffer=this.depthBuffer;a.stencilBuffer=this.stencilBuffer;a.generateMipmaps=this.generateMipmaps;
a.shareDepthFrom=this.shareDepthFrom;return a},dispose:function(){this.dispatchEvent({type:"dispose"})}};THREE.EventDispatcher.prototype.apply(THREE.WebGLRenderTarget.prototype);THREE.WebGLRenderTargetCube=function(a,b,d){THREE.WebGLRenderTarget.call(this,a,b,d);this.activeCubeFace=0};THREE.WebGLRenderTargetCube.prototype=Object.create(THREE.WebGLRenderTarget.prototype);THREE.WebGLRenderTargetCube.prototype.constructor=THREE.WebGLRenderTargetCube;
THREE.WebGLExtensions=function(a){var b={};this.get=function(d){if(void 0!==b[d])return b[d];var e;switch(d){case "EXT_texture_filter_anisotropic":e=a.getExtension("EXT_texture_filter_anisotropic")||a.getExtension("MOZ_EXT_texture_filter_anisotropic")||a.getExtension("WEBKIT_EXT_texture_filter_anisotropic");break;case "WEBGL_compressed_texture_s3tc":e=a.getExtension("WEBGL_compressed_texture_s3tc")||a.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||a.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");
break;case "WEBGL_compressed_texture_pvrtc":e=a.getExtension("WEBGL_compressed_texture_pvrtc")||a.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");break;default:e=a.getExtension(d)}null===e&&THREE.warn("THREE.WebGLRenderer: "+d+" extension not supported.");return b[d]=e}};
THREE.WebGLProgram=function(){var a=0;return function(b,d,e,f){var g=b.context,h=e.defines,k=e.__webglShader.uniforms,l=e.attributes,m=e.__webglShader.vertexShader,q=e.__webglShader.fragmentShader,r=e.index0AttributeName;void 0===r&&!0===f.morphTargets&&(r="position");var p="SHADOWMAP_TYPE_BASIC";f.shadowMapType===THREE.PCFShadowMap?p="SHADOWMAP_TYPE_PCF":f.shadowMapType===THREE.PCFSoftShadowMap&&(p="SHADOWMAP_TYPE_PCF_SOFT");var v="ENVMAP_TYPE_CUBE",t="ENVMAP_MODE_REFLECTION",u="ENVMAP_BLENDING_MULTIPLY";
if(f.envMap){switch(e.envMap.mapping){case THREE.CubeReflectionMapping:case THREE.CubeRefractionMapping:v="ENVMAP_TYPE_CUBE";break;case THREE.EquirectangularReflectionMapping:case THREE.EquirectangularRefractionMapping:v="ENVMAP_TYPE_EQUIREC";break;case THREE.SphericalReflectionMapping:v="ENVMAP_TYPE_SPHERE"}switch(e.envMap.mapping){case THREE.CubeRefractionMapping:case THREE.EquirectangularRefractionMapping:t="ENVMAP_MODE_REFRACTION"}switch(e.combine){case THREE.MultiplyOperation:u="ENVMAP_BLENDING_MULTIPLY";
break;case THREE.MixOperation:u="ENVMAP_BLENDING_MIX";break;case THREE.AddOperation:u="ENVMAP_BLENDING_ADD"}}var w=0<b.gammaFactor?b.gammaFactor:1,x,z;x=[];for(var F in h)z=h[F],!1!==z&&(z="#define "+F+" "+z,x.push(z));x=x.join("\n");h=g.createProgram();e instanceof THREE.RawShaderMaterial?b=e="":(e=["precision "+f.precision+" float;","precision "+f.precision+" int;",x,f.supportsVertexTextures?"#define VERTEX_TEXTURES":"",b.gammaInput?"#define GAMMA_INPUT":"",b.gammaOutput?"#define GAMMA_OUTPUT":
"","#define GAMMA_FACTOR "+w,"#define MAX_DIR_LIGHTS "+f.maxDirLights,"#define MAX_POINT_LIGHTS "+f.maxPointLights,"#define MAX_SPOT_LIGHTS "+f.maxSpotLights,"#define MAX_HEMI_LIGHTS "+f.maxHemiLights,"#define MAX_SHADOWS "+f.maxShadows,"#define MAX_BONES "+f.maxBones,f.map?"#define USE_MAP":"",f.envMap?"#define USE_ENVMAP":"",f.envMap?"#define "+t:"",f.lightMap?"#define USE_LIGHTMAP":"",f.bumpMap?"#define USE_BUMPMAP":"",f.normalMap?"#define USE_NORMALMAP":"",f.specularMap?"#define USE_SPECULARMAP":
"",f.alphaMap?"#define USE_ALPHAMAP":"",f.vertexColors?"#define USE_COLOR":"",f.flatShading?"#define FLAT_SHADED":"",f.skinning?"#define USE_SKINNING":"",f.useVertexTexture?"#define BONE_TEXTURE":"",f.morphTargets?"#define USE_MORPHTARGETS":"",f.morphNormals?"#define USE_MORPHNORMALS":"",f.wrapAround?"#define WRAP_AROUND":"",f.doubleSided?"#define DOUBLE_SIDED":"",f.flipSided?"#define FLIP_SIDED":"",f.shadowMapEnabled?"#define USE_SHADOWMAP":"",f.shadowMapEnabled?"#define "+p:"",f.shadowMapDebug?
"#define SHADOWMAP_DEBUG":"",f.shadowMapCascade?"#define SHADOWMAP_CASCADE":"",f.sizeAttenuation?"#define USE_SIZEATTENUATION":"",f.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"","uniform mat4 modelMatrix;\nuniform mat4 modelViewMatrix;\nuniform mat4 projectionMatrix;\nuniform mat4 viewMatrix;\nuniform mat3 normalMatrix;\nuniform vec3 cameraPosition;\nattribute vec3 position;\nattribute vec3 normal;\nattribute vec2 uv;\nattribute vec2 uv2;\n#ifdef USE_COLOR\n\tattribute vec3 color;\n#endif\n#ifdef USE_MORPHTARGETS\n\tattribute vec3 morphTarget0;\n\tattribute vec3 morphTarget1;\n\tattribute vec3 morphTarget2;\n\tattribute vec3 morphTarget3;\n\t#ifdef USE_MORPHNORMALS\n\t\tattribute vec3 morphNormal0;\n\t\tattribute vec3 morphNormal1;\n\t\tattribute vec3 morphNormal2;\n\t\tattribute vec3 morphNormal3;\n\t#else\n\t\tattribute vec3 morphTarget4;\n\t\tattribute vec3 morphTarget5;\n\t\tattribute vec3 morphTarget6;\n\t\tattribute vec3 morphTarget7;\n\t#endif\n#endif\n#ifdef USE_SKINNING\n\tattribute vec4 skinIndex;\n\tattribute vec4 skinWeight;\n#endif\n"].join("\n"),
b=["precision "+f.precision+" float;","precision "+f.precision+" int;",f.bumpMap||f.normalMap||f.flatShading?"#extension GL_OES_standard_derivatives : enable":"",x,"#define MAX_DIR_LIGHTS "+f.maxDirLights,"#define MAX_POINT_LIGHTS "+f.maxPointLights,"#define MAX_SPOT_LIGHTS "+f.maxSpotLights,"#define MAX_HEMI_LIGHTS "+f.maxHemiLights,"#define MAX_SHADOWS "+f.maxShadows,f.alphaTest?"#define ALPHATEST "+f.alphaTest:"",b.gammaInput?"#define GAMMA_INPUT":"",b.gammaOutput?"#define GAMMA_OUTPUT":"","#define GAMMA_FACTOR "+
w,f.useFog&&f.fog?"#define USE_FOG":"",f.useFog&&f.fogExp?"#define FOG_EXP2":"",f.map?"#define USE_MAP":"",f.envMap?"#define USE_ENVMAP":"",f.envMap?"#define "+v:"",f.envMap?"#define "+t:"",f.envMap?"#define "+u:"",f.lightMap?"#define USE_LIGHTMAP":"",f.bumpMap?"#define USE_BUMPMAP":"",f.normalMap?"#define USE_NORMALMAP":"",f.specularMap?"#define USE_SPECULARMAP":"",f.alphaMap?"#define USE_ALPHAMAP":"",f.vertexColors?"#define USE_COLOR":"",f.flatShading?"#define FLAT_SHADED":"",f.metal?"#define METAL":
"",f.wrapAround?"#define WRAP_AROUND":"",f.doubleSided?"#define DOUBLE_SIDED":"",f.flipSided?"#define FLIP_SIDED":"",f.shadowMapEnabled?"#define USE_SHADOWMAP":"",f.shadowMapEnabled?"#define "+p:"",f.shadowMapDebug?"#define SHADOWMAP_DEBUG":"",f.shadowMapCascade?"#define SHADOWMAP_CASCADE":"",f.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"","uniform mat4 viewMatrix;\nuniform vec3 cameraPosition;\n"].join("\n"));m=new THREE.WebGLShader(g,g.VERTEX_SHADER,e+m);q=new THREE.WebGLShader(g,g.FRAGMENT_SHADER,
b+q);g.attachShader(h,m);g.attachShader(h,q);void 0!==r&&g.bindAttribLocation(h,0,r);g.linkProgram(h);r=g.getProgramInfoLog(h);!1===g.getProgramParameter(h,g.LINK_STATUS)&&THREE.error("THREE.WebGLProgram: shader error: "+g.getError(),"gl.VALIDATE_STATUS",g.getProgramParameter(h,g.VALIDATE_STATUS),"gl.getPRogramInfoLog",r);""!==r&&THREE.warn("THREE.WebGLProgram: gl.getProgramInfoLog()"+r);g.deleteShader(m);g.deleteShader(q);r="viewMatrix modelViewMatrix projectionMatrix normalMatrix modelMatrix cameraPosition morphTargetInfluences bindMatrix bindMatrixInverse".split(" ");
f.useVertexTexture?(r.push("boneTexture"),r.push("boneTextureWidth"),r.push("boneTextureHeight")):r.push("boneGlobalMatrices");f.logarithmicDepthBuffer&&r.push("logDepthBufFC");for(var y in k)r.push(y);k=r;y={};r=0;for(b=k.length;r<b;r++)p=k[r],y[p]=g.getUniformLocation(h,p);this.uniforms=y;r="position normal uv uv2 tangent color skinIndex skinWeight lineDistance".split(" ");for(k=0;k<f.maxMorphTargets;k++)r.push("morphTarget"+k);for(k=0;k<f.maxMorphNormals;k++)r.push("morphNormal"+k);for(var A in l)r.push(A);
f=r;l={};A=0;for(k=f.length;A<k;A++)y=f[A],l[y]=g.getAttribLocation(h,y);this.attributes=l;this.attributesKeys=Object.keys(this.attributes);this.id=a++;this.code=d;this.usedTimes=1;this.program=h;this.vertexShader=m;this.fragmentShader=q;return this}}();
THREE.WebGLShader=function(){var a=function(a){a=a.split("\n");for(var d=0;d<a.length;d++)a[d]=d+1+": "+a[d];return a.join("\n")};return function(b,d,e){d=b.createShader(d);b.shaderSource(d,e);b.compileShader(d);!1===b.getShaderParameter(d,b.COMPILE_STATUS)&&THREE.error("THREE.WebGLShader: Shader couldn't compile.");""!==b.getShaderInfoLog(d)&&THREE.warn("THREE.WebGLShader: gl.getShaderInfoLog()",b.getShaderInfoLog(d),a(e));return d}}();
THREE.WebGLState=function(a,b){var d=new Uint8Array(16),e=new Uint8Array(16),f=null,g=null,h=null,k=null,l=null,m=null,q=null,r=null,p=null,v=null,t=null,u=null,w=null,x=null,z=null,F=null;this.initAttributes=function(){for(var a=0,b=d.length;a<b;a++)d[a]=0};this.enableAttribute=function(b){d[b]=1;0===e[b]&&(a.enableVertexAttribArray(b),e[b]=1)};this.disableUnusedAttributes=function(){for(var b=0,f=e.length;b<f;b++)e[b]!==d[b]&&(a.disableVertexAttribArray(b),e[b]=0)};this.setBlending=function(d,e,
p,r,t,u,v){d!==f&&(d===THREE.NoBlending?a.disable(a.BLEND):d===THREE.AdditiveBlending?(a.enable(a.BLEND),a.blendEquation(a.FUNC_ADD),a.blendFunc(a.SRC_ALPHA,a.ONE)):d===THREE.SubtractiveBlending?(a.enable(a.BLEND),a.blendEquation(a.FUNC_ADD),a.blendFunc(a.ZERO,a.ONE_MINUS_SRC_COLOR)):d===THREE.MultiplyBlending?(a.enable(a.BLEND),a.blendEquation(a.FUNC_ADD),a.blendFunc(a.ZERO,a.SRC_COLOR)):d===THREE.CustomBlending?a.enable(a.BLEND):(a.enable(a.BLEND),a.blendEquationSeparate(a.FUNC_ADD,a.FUNC_ADD),
a.blendFuncSeparate(a.SRC_ALPHA,a.ONE_MINUS_SRC_ALPHA,a.ONE,a.ONE_MINUS_SRC_ALPHA)),f=d);if(d===THREE.CustomBlending){t=t||e;u=u||p;v=v||r;if(e!==g||t!==l)a.blendEquationSeparate(b(e),b(t)),g=e,l=t;if(p!==h||r!==k||u!==m||v!==q)a.blendFuncSeparate(b(p),b(r),b(u),b(v)),h=p,k=r,m=u,q=v}else q=m=l=k=h=g=null};this.setDepthTest=function(b){r!==b&&(b?a.enable(a.DEPTH_TEST):a.disable(a.DEPTH_TEST),r=b)};this.setDepthWrite=function(b){p!==b&&(a.depthMask(b),p=b)};this.setColorWrite=function(b){v!==b&&(a.colorMask(b,
b,b,b),v=b)};this.setDoubleSided=function(b){t!==b&&(b?a.disable(a.CULL_FACE):a.enable(a.CULL_FACE),t=b)};this.setFlipSided=function(b){u!==b&&(b?a.frontFace(a.CW):a.frontFace(a.CCW),u=b)};this.setLineWidth=function(b){b!==w&&(a.lineWidth(b),w=b)};this.setPolygonOffset=function(b,d,e){x!==b&&(b?a.enable(a.POLYGON_OFFSET_FILL):a.disable(a.POLYGON_OFFSET_FILL),x=b);!b||z===d&&F===e||(a.polygonOffset(d,e),z=d,F=e)};this.reset=function(){for(var a=0;a<e.length;a++)e[a]=0;u=t=v=p=r=f=null}};
THREE.LensFlarePlugin=function(a,b){var d,e,f,g,h,k,l,m,q,r,p=a.context,v,t,u,w,x,z;this.render=function(F,y,A,C){if(0!==b.length){F=new THREE.Vector3;var G=C/A,I=.5*A,H=.5*C,B=16/C,K=new THREE.Vector2(B*G,B),W=new THREE.Vector3(1,1,0),O=new THREE.Vector2(1,1);if(void 0===u){var B=new Float32Array([-1,-1,0,0,1,-1,1,0,1,1,1,1,-1,1,0,1]),J=new Uint16Array([0,1,2,0,2,3]);v=p.createBuffer();t=p.createBuffer();p.bindBuffer(p.ARRAY_BUFFER,v);p.bufferData(p.ARRAY_BUFFER,B,p.STATIC_DRAW);p.bindBuffer(p.ELEMENT_ARRAY_BUFFER,
t);p.bufferData(p.ELEMENT_ARRAY_BUFFER,J,p.STATIC_DRAW);x=p.createTexture();z=p.createTexture();p.bindTexture(p.TEXTURE_2D,x);p.texImage2D(p.TEXTURE_2D,0,p.RGB,16,16,0,p.RGB,p.UNSIGNED_BYTE,null);p.texParameteri(p.TEXTURE_2D,p.TEXTURE_WRAP_S,p.CLAMP_TO_EDGE);p.texParameteri(p.TEXTURE_2D,p.TEXTURE_WRAP_T,p.CLAMP_TO_EDGE);p.texParameteri(p.TEXTURE_2D,p.TEXTURE_MAG_FILTER,p.NEAREST);p.texParameteri(p.TEXTURE_2D,p.TEXTURE_MIN_FILTER,p.NEAREST);p.bindTexture(p.TEXTURE_2D,z);p.texImage2D(p.TEXTURE_2D,0,
p.RGBA,16,16,0,p.RGBA,p.UNSIGNED_BYTE,null);p.texParameteri(p.TEXTURE_2D,p.TEXTURE_WRAP_S,p.CLAMP_TO_EDGE);p.texParameteri(p.TEXTURE_2D,p.TEXTURE_WRAP_T,p.CLAMP_TO_EDGE);p.texParameteri(p.TEXTURE_2D,p.TEXTURE_MAG_FILTER,p.NEAREST);p.texParameteri(p.TEXTURE_2D,p.TEXTURE_MIN_FILTER,p.NEAREST);var B=(w=0<p.getParameter(p.MAX_VERTEX_TEXTURE_IMAGE_UNITS))?{vertexShader:"uniform lowp int renderType;\nuniform vec3 screenPosition;\nuniform vec2 scale;\nuniform float rotation;\nuniform sampler2D occlusionMap;\nattribute vec2 position;\nattribute vec2 uv;\nvarying vec2 vUV;\nvarying float vVisibility;\nvoid main() {\nvUV = uv;\nvec2 pos = position;\nif( renderType == 2 ) {\nvec4 visibility = texture2D( occlusionMap, vec2( 0.1, 0.1 ) );\nvisibility += texture2D( occlusionMap, vec2( 0.5, 0.1 ) );\nvisibility += texture2D( occlusionMap, vec2( 0.9, 0.1 ) );\nvisibility += texture2D( occlusionMap, vec2( 0.9, 0.5 ) );\nvisibility += texture2D( occlusionMap, vec2( 0.9, 0.9 ) );\nvisibility += texture2D( occlusionMap, vec2( 0.5, 0.9 ) );\nvisibility += texture2D( occlusionMap, vec2( 0.1, 0.9 ) );\nvisibility += texture2D( occlusionMap, vec2( 0.1, 0.5 ) );\nvisibility += texture2D( occlusionMap, vec2( 0.5, 0.5 ) );\nvVisibility =        visibility.r / 9.0;\nvVisibility *= 1.0 - visibility.g / 9.0;\nvVisibility *=       visibility.b / 9.0;\nvVisibility *= 1.0 - visibility.a / 9.0;\npos.x = cos( rotation ) * position.x - sin( rotation ) * position.y;\npos.y = sin( rotation ) * position.x + cos( rotation ) * position.y;\n}\ngl_Position = vec4( ( pos * scale + screenPosition.xy ).xy, screenPosition.z, 1.0 );\n}",
fragmentShader:"uniform lowp int renderType;\nuniform sampler2D map;\nuniform float opacity;\nuniform vec3 color;\nvarying vec2 vUV;\nvarying float vVisibility;\nvoid main() {\nif( renderType == 0 ) {\ngl_FragColor = vec4( 1.0, 0.0, 1.0, 0.0 );\n} else if( renderType == 1 ) {\ngl_FragColor = texture2D( map, vUV );\n} else {\nvec4 texture = texture2D( map, vUV );\ntexture.a *= opacity * vVisibility;\ngl_FragColor = texture;\ngl_FragColor.rgb *= color;\n}\n}"}:{vertexShader:"uniform lowp int renderType;\nuniform vec3 screenPosition;\nuniform vec2 scale;\nuniform float rotation;\nattribute vec2 position;\nattribute vec2 uv;\nvarying vec2 vUV;\nvoid main() {\nvUV = uv;\nvec2 pos = position;\nif( renderType == 2 ) {\npos.x = cos( rotation ) * position.x - sin( rotation ) * position.y;\npos.y = sin( rotation ) * position.x + cos( rotation ) * position.y;\n}\ngl_Position = vec4( ( pos * scale + screenPosition.xy ).xy, screenPosition.z, 1.0 );\n}",
fragmentShader:"precision mediump float;\nuniform lowp int renderType;\nuniform sampler2D map;\nuniform sampler2D occlusionMap;\nuniform float opacity;\nuniform vec3 color;\nvarying vec2 vUV;\nvoid main() {\nif( renderType == 0 ) {\ngl_FragColor = vec4( texture2D( map, vUV ).rgb, 0.0 );\n} else if( renderType == 1 ) {\ngl_FragColor = texture2D( map, vUV );\n} else {\nfloat visibility = texture2D( occlusionMap, vec2( 0.5, 0.1 ) ).a;\nvisibility += texture2D( occlusionMap, vec2( 0.9, 0.5 ) ).a;\nvisibility += texture2D( occlusionMap, vec2( 0.5, 0.9 ) ).a;\nvisibility += texture2D( occlusionMap, vec2( 0.1, 0.5 ) ).a;\nvisibility = ( 1.0 - visibility / 4.0 );\nvec4 texture = texture2D( map, vUV );\ntexture.a *= opacity * visibility;\ngl_FragColor = texture;\ngl_FragColor.rgb *= color;\n}\n}"},
J=p.createProgram(),N=p.createShader(p.FRAGMENT_SHADER),R=p.createShader(p.VERTEX_SHADER),P="precision "+a.getPrecision()+" float;\n";p.shaderSource(N,P+B.fragmentShader);p.shaderSource(R,P+B.vertexShader);p.compileShader(N);p.compileShader(R);p.attachShader(J,N);p.attachShader(J,R);p.linkProgram(J);u=J;q=p.getAttribLocation(u,"position");r=p.getAttribLocation(u,"uv");d=p.getUniformLocation(u,"renderType");e=p.getUniformLocation(u,"map");f=p.getUniformLocation(u,"occlusionMap");g=p.getUniformLocation(u,
"opacity");h=p.getUniformLocation(u,"color");k=p.getUniformLocation(u,"scale");l=p.getUniformLocation(u,"rotation");m=p.getUniformLocation(u,"screenPosition")}p.useProgram(u);p.enableVertexAttribArray(q);p.enableVertexAttribArray(r);p.uniform1i(f,0);p.uniform1i(e,1);p.bindBuffer(p.ARRAY_BUFFER,v);p.vertexAttribPointer(q,2,p.FLOAT,!1,16,0);p.vertexAttribPointer(r,2,p.FLOAT,!1,16,8);p.bindBuffer(p.ELEMENT_ARRAY_BUFFER,t);p.disable(p.CULL_FACE);p.depthMask(!1);J=0;for(N=b.length;J<N;J++)if(B=16/C,K.set(B*
G,B),R=b[J],F.set(R.matrixWorld.elements[12],R.matrixWorld.elements[13],R.matrixWorld.elements[14]),F.applyMatrix4(y.matrixWorldInverse),F.applyProjection(y.projectionMatrix),W.copy(F),O.x=W.x*I+I,O.y=W.y*H+H,w||0<O.x&&O.x<A&&0<O.y&&O.y<C){p.activeTexture(p.TEXTURE1);p.bindTexture(p.TEXTURE_2D,x);p.copyTexImage2D(p.TEXTURE_2D,0,p.RGB,O.x-8,O.y-8,16,16,0);p.uniform1i(d,0);p.uniform2f(k,K.x,K.y);p.uniform3f(m,W.x,W.y,W.z);p.disable(p.BLEND);p.enable(p.DEPTH_TEST);p.drawElements(p.TRIANGLES,6,p.UNSIGNED_SHORT,
0);p.activeTexture(p.TEXTURE0);p.bindTexture(p.TEXTURE_2D,z);p.copyTexImage2D(p.TEXTURE_2D,0,p.RGBA,O.x-8,O.y-8,16,16,0);p.uniform1i(d,1);p.disable(p.DEPTH_TEST);p.activeTexture(p.TEXTURE1);p.bindTexture(p.TEXTURE_2D,x);p.drawElements(p.TRIANGLES,6,p.UNSIGNED_SHORT,0);R.positionScreen.copy(W);R.customUpdateCallback?R.customUpdateCallback(R):R.updateLensFlares();p.uniform1i(d,2);p.enable(p.BLEND);for(var P=0,T=R.lensFlares.length;P<T;P++){var X=R.lensFlares[P];.001<X.opacity&&.001<X.scale&&(W.x=X.x,
W.y=X.y,W.z=X.z,B=X.size*X.scale/C,K.x=B*G,K.y=B,p.uniform3f(m,W.x,W.y,W.z),p.uniform2f(k,K.x,K.y),p.uniform1f(l,X.rotation),p.uniform1f(g,X.opacity),p.uniform3f(h,X.color.r,X.color.g,X.color.b),a.state.setBlending(X.blending,X.blendEquation,X.blendSrc,X.blendDst),a.setTexture(X.texture,1),p.drawElements(p.TRIANGLES,6,p.UNSIGNED_SHORT,0))}}p.enable(p.CULL_FACE);p.enable(p.DEPTH_TEST);p.depthMask(!0);a.resetGLState()}}};
THREE.ShadowMapPlugin=function(a,b,d,e){function f(a,b,e){if(b.visible){var g=d[b.id];if(g&&b.castShadow&&(!1===b.frustumCulled||!0===q.intersectsObject(b)))for(var h=0,k=g.length;h<k;h++){var l=g[h];b._modelViewMatrix.multiplyMatrices(e.matrixWorldInverse,b.matrixWorld);u.push(l)}h=0;for(k=b.children.length;h<k;h++)f(a,b.children[h],e)}}var g=a.context,h,k,l,m,q=new THREE.Frustum,r=new THREE.Matrix4,p=new THREE.Vector3,v=new THREE.Vector3,t=new THREE.Vector3,u=[],w=THREE.ShaderLib.depthRGBA,x=THREE.UniformsUtils.clone(w.uniforms);
h=new THREE.ShaderMaterial({uniforms:x,vertexShader:w.vertexShader,fragmentShader:w.fragmentShader});k=new THREE.ShaderMaterial({uniforms:x,vertexShader:w.vertexShader,fragmentShader:w.fragmentShader,morphTargets:!0});l=new THREE.ShaderMaterial({uniforms:x,vertexShader:w.vertexShader,fragmentShader:w.fragmentShader,skinning:!0});m=new THREE.ShaderMaterial({uniforms:x,vertexShader:w.vertexShader,fragmentShader:w.fragmentShader,morphTargets:!0,skinning:!0});h._shadowPass=!0;k._shadowPass=!0;l._shadowPass=
!0;m._shadowPass=!0;this.render=function(d,x){if(!1!==a.shadowMapEnabled){var w,A,C,G,I,H,B,K,W=[];G=0;g.clearColor(1,1,1,1);g.disable(g.BLEND);g.enable(g.CULL_FACE);g.frontFace(g.CCW);a.shadowMapCullFace===THREE.CullFaceFront?g.cullFace(g.FRONT):g.cullFace(g.BACK);a.state.setDepthTest(!0);w=0;for(A=b.length;w<A;w++)if(C=b[w],C.castShadow)if(C instanceof THREE.DirectionalLight&&C.shadowCascade)for(I=0;I<C.shadowCascadeCount;I++){var O;if(C.shadowCascadeArray[I])O=C.shadowCascadeArray[I];else{B=C;
var J=I;O=new THREE.DirectionalLight;O.isVirtual=!0;O.onlyShadow=!0;O.castShadow=!0;O.shadowCameraNear=B.shadowCameraNear;O.shadowCameraFar=B.shadowCameraFar;O.shadowCameraLeft=B.shadowCameraLeft;O.shadowCameraRight=B.shadowCameraRight;O.shadowCameraBottom=B.shadowCameraBottom;O.shadowCameraTop=B.shadowCameraTop;O.shadowCameraVisible=B.shadowCameraVisible;O.shadowDarkness=B.shadowDarkness;O.shadowBias=B.shadowCascadeBias[J];O.shadowMapWidth=B.shadowCascadeWidth[J];O.shadowMapHeight=B.shadowCascadeHeight[J];
O.pointsWorld=[];O.pointsFrustum=[];K=O.pointsWorld;H=O.pointsFrustum;for(var N=0;8>N;N++)K[N]=new THREE.Vector3,H[N]=new THREE.Vector3;K=B.shadowCascadeNearZ[J];B=B.shadowCascadeFarZ[J];H[0].set(-1,-1,K);H[1].set(1,-1,K);H[2].set(-1,1,K);H[3].set(1,1,K);H[4].set(-1,-1,B);H[5].set(1,-1,B);H[6].set(-1,1,B);H[7].set(1,1,B);O.originalCamera=x;H=new THREE.Gyroscope;H.position.copy(C.shadowCascadeOffset);H.add(O);H.add(O.target);x.add(H);C.shadowCascadeArray[I]=O}J=C;K=I;B=J.shadowCascadeArray[K];B.position.copy(J.position);
B.target.position.copy(J.target.position);B.lookAt(B.target);B.shadowCameraVisible=J.shadowCameraVisible;B.shadowDarkness=J.shadowDarkness;B.shadowBias=J.shadowCascadeBias[K];H=J.shadowCascadeNearZ[K];J=J.shadowCascadeFarZ[K];B=B.pointsFrustum;B[0].z=H;B[1].z=H;B[2].z=H;B[3].z=H;B[4].z=J;B[5].z=J;B[6].z=J;B[7].z=J;W[G]=O;G++}else W[G]=C,G++;w=0;for(A=W.length;w<A;w++){C=W[w];C.shadowMap||(I=THREE.LinearFilter,a.shadowMapType===THREE.PCFSoftShadowMap&&(I=THREE.NearestFilter),C.shadowMap=new THREE.WebGLRenderTarget(C.shadowMapWidth,
C.shadowMapHeight,{minFilter:I,magFilter:I,format:THREE.RGBAFormat}),C.shadowMapSize=new THREE.Vector2(C.shadowMapWidth,C.shadowMapHeight),C.shadowMatrix=new THREE.Matrix4);if(!C.shadowCamera){if(C instanceof THREE.SpotLight)C.shadowCamera=new THREE.PerspectiveCamera(C.shadowCameraFov,C.shadowMapWidth/C.shadowMapHeight,C.shadowCameraNear,C.shadowCameraFar);else if(C instanceof THREE.DirectionalLight)C.shadowCamera=new THREE.OrthographicCamera(C.shadowCameraLeft,C.shadowCameraRight,C.shadowCameraTop,
C.shadowCameraBottom,C.shadowCameraNear,C.shadowCameraFar);else{THREE.error("THREE.ShadowMapPlugin: Unsupported light type for shadow",C);continue}d.add(C.shadowCamera);!0===d.autoUpdate&&d.updateMatrixWorld()}C.shadowCameraVisible&&!C.cameraHelper&&(C.cameraHelper=new THREE.CameraHelper(C.shadowCamera),d.add(C.cameraHelper));if(C.isVirtual&&O.originalCamera==x){I=x;G=C.shadowCamera;H=C.pointsFrustum;B=C.pointsWorld;p.set(Infinity,Infinity,Infinity);v.set(-Infinity,-Infinity,-Infinity);for(J=0;8>
J;J++)K=B[J],K.copy(H[J]),K.unproject(I),K.applyMatrix4(G.matrixWorldInverse),K.x<p.x&&(p.x=K.x),K.x>v.x&&(v.x=K.x),K.y<p.y&&(p.y=K.y),K.y>v.y&&(v.y=K.y),K.z<p.z&&(p.z=K.z),K.z>v.z&&(v.z=K.z);G.left=p.x;G.right=v.x;G.top=v.y;G.bottom=p.y;G.updateProjectionMatrix()}G=C.shadowMap;H=C.shadowMatrix;I=C.shadowCamera;I.position.setFromMatrixPosition(C.matrixWorld);t.setFromMatrixPosition(C.target.matrixWorld);I.lookAt(t);I.updateMatrixWorld();I.matrixWorldInverse.getInverse(I.matrixWorld);C.cameraHelper&&
(C.cameraHelper.visible=C.shadowCameraVisible);C.shadowCameraVisible&&C.cameraHelper.update();H.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1);H.multiply(I.projectionMatrix);H.multiply(I.matrixWorldInverse);r.multiplyMatrices(I.projectionMatrix,I.matrixWorldInverse);q.setFromMatrix(r);a.setRenderTarget(G);a.clear();u.length=0;f(d,d,I);C=0;for(G=u.length;C<G;C++)B=u[C],H=B.object,B=B.buffer,J=H.material instanceof THREE.MeshFaceMaterial?H.material.materials[0]:H.material,K=void 0!==H.geometry.morphTargets&&
0<H.geometry.morphTargets.length&&J.morphTargets,N=H instanceof THREE.SkinnedMesh&&J.skinning,K=H.customDepthMaterial?H.customDepthMaterial:N?K?m:l:K?k:h,a.setMaterialFaces(J),B instanceof THREE.BufferGeometry?a.renderBufferDirect(I,b,null,K,B,H):a.renderBuffer(I,b,null,K,B,H);C=0;for(G=e.length;C<G;C++)B=e[C],H=B.object,H.visible&&H.castShadow&&(H._modelViewMatrix.multiplyMatrices(I.matrixWorldInverse,H.matrixWorld),a.renderImmediateObject(I,b,null,h,H))}w=a.getClearColor();A=a.getClearAlpha();g.clearColor(w.r,
w.g,w.b,A);g.enable(g.BLEND);a.shadowMapCullFace===THREE.CullFaceFront&&g.cullFace(g.BACK);a.resetGLState()}}};
THREE.SpritePlugin=function(a,b){var d,e,f,g,h,k,l,m,q,r,p,v,t,u,w,x,z;function F(a,b){return a.z!==b.z?b.z-a.z:b.id-a.id}var y=a.context,A,C,G,I,H=new THREE.Vector3,B=new THREE.Quaternion,K=new THREE.Vector3;this.render=function(W,O){if(0!==b.length){if(void 0===G){var J=new Float32Array([-.5,-.5,0,0,.5,-.5,1,0,.5,.5,1,1,-.5,.5,0,1]),N=new Uint16Array([0,1,2,0,2,3]);A=y.createBuffer();C=y.createBuffer();y.bindBuffer(y.ARRAY_BUFFER,A);y.bufferData(y.ARRAY_BUFFER,J,y.STATIC_DRAW);y.bindBuffer(y.ELEMENT_ARRAY_BUFFER,
C);y.bufferData(y.ELEMENT_ARRAY_BUFFER,N,y.STATIC_DRAW);var J=y.createProgram(),N=y.createShader(y.VERTEX_SHADER),R=y.createShader(y.FRAGMENT_SHADER);y.shaderSource(N,["precision "+a.getPrecision()+" float;","uniform mat4 modelViewMatrix;\nuniform mat4 projectionMatrix;\nuniform float rotation;\nuniform vec2 scale;\nuniform vec2 uvOffset;\nuniform vec2 uvScale;\nattribute vec2 position;\nattribute vec2 uv;\nvarying vec2 vUV;\nvoid main() {\nvUV = uvOffset + uv * uvScale;\nvec2 alignedPosition = position * scale;\nvec2 rotatedPosition;\nrotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;\nrotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;\nvec4 finalPosition;\nfinalPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );\nfinalPosition.xy += rotatedPosition;\nfinalPosition = projectionMatrix * finalPosition;\ngl_Position = finalPosition;\n}"].join("\n"));
y.shaderSource(R,["precision "+a.getPrecision()+" float;","uniform vec3 color;\nuniform sampler2D map;\nuniform float opacity;\nuniform int fogType;\nuniform vec3 fogColor;\nuniform float fogDensity;\nuniform float fogNear;\nuniform float fogFar;\nuniform float alphaTest;\nvarying vec2 vUV;\nvoid main() {\nvec4 texture = texture2D( map, vUV );\nif ( texture.a < alphaTest ) discard;\ngl_FragColor = vec4( color * texture.xyz, texture.a * opacity );\nif ( fogType > 0 ) {\nfloat depth = gl_FragCoord.z / gl_FragCoord.w;\nfloat fogFactor = 0.0;\nif ( fogType == 1 ) {\nfogFactor = smoothstep( fogNear, fogFar, depth );\n} else {\nconst float LOG2 = 1.442695;\nfloat fogFactor = exp2( - fogDensity * fogDensity * depth * depth * LOG2 );\nfogFactor = 1.0 - clamp( fogFactor, 0.0, 1.0 );\n}\ngl_FragColor = mix( gl_FragColor, vec4( fogColor, gl_FragColor.w ), fogFactor );\n}\n}"].join("\n"));
y.compileShader(N);y.compileShader(R);y.attachShader(J,N);y.attachShader(J,R);y.linkProgram(J);G=J;x=y.getAttribLocation(G,"position");z=y.getAttribLocation(G,"uv");d=y.getUniformLocation(G,"uvOffset");e=y.getUniformLocation(G,"uvScale");f=y.getUniformLocation(G,"rotation");g=y.getUniformLocation(G,"scale");h=y.getUniformLocation(G,"color");k=y.getUniformLocation(G,"map");l=y.getUniformLocation(G,"opacity");m=y.getUniformLocation(G,"modelViewMatrix");q=y.getUniformLocation(G,"projectionMatrix");r=
y.getUniformLocation(G,"fogType");p=y.getUniformLocation(G,"fogDensity");v=y.getUniformLocation(G,"fogNear");t=y.getUniformLocation(G,"fogFar");u=y.getUniformLocation(G,"fogColor");w=y.getUniformLocation(G,"alphaTest");J=document.createElement("canvas");J.width=8;J.height=8;N=J.getContext("2d");N.fillStyle="white";N.fillRect(0,0,8,8);I=new THREE.Texture(J);I.needsUpdate=!0}y.useProgram(G);y.enableVertexAttribArray(x);y.enableVertexAttribArray(z);y.disable(y.CULL_FACE);y.enable(y.BLEND);y.bindBuffer(y.ARRAY_BUFFER,
A);y.vertexAttribPointer(x,2,y.FLOAT,!1,16,0);y.vertexAttribPointer(z,2,y.FLOAT,!1,16,8);y.bindBuffer(y.ELEMENT_ARRAY_BUFFER,C);y.uniformMatrix4fv(q,!1,O.projectionMatrix.elements);y.activeTexture(y.TEXTURE0);y.uniform1i(k,0);N=J=0;(R=W.fog)?(y.uniform3f(u,R.color.r,R.color.g,R.color.b),R instanceof THREE.Fog?(y.uniform1f(v,R.near),y.uniform1f(t,R.far),y.uniform1i(r,1),N=J=1):R instanceof THREE.FogExp2&&(y.uniform1f(p,R.density),y.uniform1i(r,2),N=J=2)):(y.uniform1i(r,0),N=J=0);for(var R=0,P=b.length;R<
P;R++){var T=b[R];T._modelViewMatrix.multiplyMatrices(O.matrixWorldInverse,T.matrixWorld);T.z=-T._modelViewMatrix.elements[14]}b.sort(F);for(var X=[],R=0,P=b.length;R<P;R++){var T=b[R],L=T.material;y.uniform1f(w,L.alphaTest);y.uniformMatrix4fv(m,!1,T._modelViewMatrix.elements);T.matrixWorld.decompose(H,B,K);X[0]=K.x;X[1]=K.y;T=0;W.fog&&L.fog&&(T=N);J!==T&&(y.uniform1i(r,T),J=T);null!==L.map?(y.uniform2f(d,L.map.offset.x,L.map.offset.y),y.uniform2f(e,L.map.repeat.x,L.map.repeat.y)):(y.uniform2f(d,
0,0),y.uniform2f(e,1,1));y.uniform1f(l,L.opacity);y.uniform3f(h,L.color.r,L.color.g,L.color.b);y.uniform1f(f,L.rotation);y.uniform2fv(g,X);a.state.setBlending(L.blending,L.blendEquation,L.blendSrc,L.blendDst);a.state.setDepthTest(L.depthTest);a.state.setDepthWrite(L.depthWrite);L.map&&L.map.image&&L.map.image.width?a.setTexture(L.map,0):a.setTexture(I,0);y.drawElements(y.TRIANGLES,6,y.UNSIGNED_SHORT,0)}y.enable(y.CULL_FACE);a.resetGLState()}}};
THREE.GeometryUtils={merge:function(a,b,d){THREE.warn("THREE.GeometryUtils: .merge() has been moved to Geometry. Use geometry.merge( geometry2, matrix, materialIndexOffset ) instead.");var e;b instanceof THREE.Mesh&&(b.matrixAutoUpdate&&b.updateMatrix(),e=b.matrix,b=b.geometry);a.merge(b,e,d)},center:function(a){THREE.warn("THREE.GeometryUtils: .center() has been moved to Geometry. Use geometry.center() instead.");return a.center()}};
THREE.ImageUtils={crossOrigin:void 0,loadTexture:function(a,b,d,e){var f=new THREE.ImageLoader;f.crossOrigin=this.crossOrigin;var g=new THREE.Texture(void 0,b);f.load(a,function(a){g.image=a;g.needsUpdate=!0;d&&d(g)},void 0,function(a){e&&e(a)});g.sourceFile=a;return g},loadTextureCube:function(a,b,d,e){var f=new THREE.ImageLoader;f.crossOrigin=this.crossOrigin;var g=new THREE.CubeTexture([],b);g.flipY=!1;var h=0;b=function(b){f.load(a[b],function(a){g.images[b]=a;h+=1;6===h&&(g.needsUpdate=!0,d&&
d(g))},void 0,e)};for(var k=0,l=a.length;k<l;++k)b(k);return g},loadCompressedTexture:function(){THREE.error("THREE.ImageUtils.loadCompressedTexture has been removed. Use THREE.DDSLoader instead.")},loadCompressedTextureCube:function(){THREE.error("THREE.ImageUtils.loadCompressedTextureCube has been removed. Use THREE.DDSLoader instead.")},getNormalMap:function(a,b){var d=function(a){var b=Math.sqrt(a[0]*a[0]+a[1]*a[1]+a[2]*a[2]);return[a[0]/b,a[1]/b,a[2]/b]};b|=1;var e=a.width,f=a.height,g=document.createElement("canvas");
g.width=e;g.height=f;var h=g.getContext("2d");h.drawImage(a,0,0);for(var k=h.getImageData(0,0,e,f).data,l=h.createImageData(e,f),m=l.data,q=0;q<e;q++)for(var r=0;r<f;r++){var p=0>r-1?0:r-1,v=r+1>f-1?f-1:r+1,t=0>q-1?0:q-1,u=q+1>e-1?e-1:q+1,w=[],x=[0,0,k[4*(r*e+q)]/255*b];w.push([-1,0,k[4*(r*e+t)]/255*b]);w.push([-1,-1,k[4*(p*e+t)]/255*b]);w.push([0,-1,k[4*(p*e+q)]/255*b]);w.push([1,-1,k[4*(p*e+u)]/255*b]);w.push([1,0,k[4*(r*e+u)]/255*b]);w.push([1,1,k[4*(v*e+u)]/255*b]);w.push([0,1,k[4*(v*e+q)]/255*
b]);w.push([-1,1,k[4*(v*e+t)]/255*b]);p=[];t=w.length;for(v=0;v<t;v++){var u=w[v],z=w[(v+1)%t],u=[u[0]-x[0],u[1]-x[1],u[2]-x[2]],z=[z[0]-x[0],z[1]-x[1],z[2]-x[2]];p.push(d([u[1]*z[2]-u[2]*z[1],u[2]*z[0]-u[0]*z[2],u[0]*z[1]-u[1]*z[0]]))}w=[0,0,0];for(v=0;v<p.length;v++)w[0]+=p[v][0],w[1]+=p[v][1],w[2]+=p[v][2];w[0]/=p.length;w[1]/=p.length;w[2]/=p.length;x=4*(r*e+q);m[x]=(w[0]+1)/2*255|0;m[x+1]=(w[1]+1)/2*255|0;m[x+2]=255*w[2]|0;m[x+3]=255}h.putImageData(l,0,0);return g},generateDataTexture:function(a,
b,d){var e=a*b,f=new Uint8Array(3*e),g=Math.floor(255*d.r),h=Math.floor(255*d.g);d=Math.floor(255*d.b);for(var k=0;k<e;k++)f[3*k]=g,f[3*k+1]=h,f[3*k+2]=d;a=new THREE.DataTexture(f,a,b,THREE.RGBFormat);a.needsUpdate=!0;return a}};
THREE.SceneUtils={createMultiMaterialObject:function(a,b){for(var d=new THREE.Object3D,e=0,f=b.length;e<f;e++)d.add(new THREE.Mesh(a,b[e]));return d},detach:function(a,b,d){a.applyMatrix(b.matrixWorld);b.remove(a);d.add(a)},attach:function(a,b,d){var e=new THREE.Matrix4;e.getInverse(d.matrixWorld);a.applyMatrix(e);b.remove(a);d.add(a)}};
THREE.FontUtils={faces:{},face:"helvetiker",weight:"normal",style:"normal",size:150,divisions:10,getFace:function(){try{return this.faces[this.face][this.weight][this.style]}catch(a){throw"The font "+this.face+" with "+this.weight+" weight and "+this.style+" style is missing.";}},loadFace:function(a){var b=a.familyName.toLowerCase();this.faces[b]=this.faces[b]||{};this.faces[b][a.cssFontWeight]=this.faces[b][a.cssFontWeight]||{};this.faces[b][a.cssFontWeight][a.cssFontStyle]=a;return this.faces[b][a.cssFontWeight][a.cssFontStyle]=
a},drawText:function(a){var b=this.getFace(),d=this.size/b.resolution,e=0,f=String(a).split(""),g=f.length,h=[];for(a=0;a<g;a++){var k=new THREE.Path,k=this.extractGlyphPoints(f[a],b,d,e,k),e=e+k.offset;h.push(k.path)}return{paths:h,offset:e/2}},extractGlyphPoints:function(a,b,d,e,f){var g=[],h,k,l,m,q,r,p,v,t,u,w,x=b.glyphs[a]||b.glyphs["?"];if(x){if(x.o)for(b=x._cachedOutline||(x._cachedOutline=x.o.split(" ")),m=b.length,a=0;a<m;)switch(l=b[a++],l){case "m":l=b[a++]*d+e;q=b[a++]*d;f.moveTo(l,q);
break;case "l":l=b[a++]*d+e;q=b[a++]*d;f.lineTo(l,q);break;case "q":l=b[a++]*d+e;q=b[a++]*d;v=b[a++]*d+e;t=b[a++]*d;f.quadraticCurveTo(v,t,l,q);if(h=g[g.length-1])for(r=h.x,p=h.y,h=1,k=this.divisions;h<=k;h++){var z=h/k;THREE.Shape.Utils.b2(z,r,v,l);THREE.Shape.Utils.b2(z,p,t,q)}break;case "b":if(l=b[a++]*d+e,q=b[a++]*d,v=b[a++]*d+e,t=b[a++]*d,u=b[a++]*d+e,w=b[a++]*d,f.bezierCurveTo(v,t,u,w,l,q),h=g[g.length-1])for(r=h.x,p=h.y,h=1,k=this.divisions;h<=k;h++)z=h/k,THREE.Shape.Utils.b3(z,r,v,u,l),THREE.Shape.Utils.b3(z,
p,t,w,q)}return{offset:x.ha*d,path:f}}}};
THREE.FontUtils.generateShapes=function(a,b){b=b||{};var d=void 0!==b.curveSegments?b.curveSegments:4,e=void 0!==b.font?b.font:"helvetiker",f=void 0!==b.weight?b.weight:"normal",g=void 0!==b.style?b.style:"normal";THREE.FontUtils.size=void 0!==b.size?b.size:100;THREE.FontUtils.divisions=d;THREE.FontUtils.face=e;THREE.FontUtils.weight=f;THREE.FontUtils.style=g;d=THREE.FontUtils.drawText(a).paths;e=[];f=0;for(g=d.length;f<g;f++)Array.prototype.push.apply(e,d[f].toShapes());return e};
(function(a){var b=function(a){for(var b=a.length,f=0,g=b-1,h=0;h<b;g=h++)f+=a[g].x*a[h].y-a[h].x*a[g].y;return.5*f};a.Triangulate=function(a,e){var f=a.length;if(3>f)return null;var g=[],h=[],k=[],l,m,q;if(0<b(a))for(m=0;m<f;m++)h[m]=m;else for(m=0;m<f;m++)h[m]=f-1-m;var r=2*f;for(m=f-1;2<f;){if(0>=r--){THREE.warn("THREE.FontUtils: Warning, unable to triangulate polygon! in Triangulate.process()");break}l=m;f<=l&&(l=0);m=l+1;f<=m&&(m=0);q=m+1;f<=q&&(q=0);var p;a:{var v=p=void 0,t=void 0,u=void 0,
w=void 0,x=void 0,z=void 0,F=void 0,y=void 0,v=a[h[l]].x,t=a[h[l]].y,u=a[h[m]].x,w=a[h[m]].y,x=a[h[q]].x,z=a[h[q]].y;if(1E-10>(u-v)*(z-t)-(w-t)*(x-v))p=!1;else{var A=void 0,C=void 0,G=void 0,I=void 0,H=void 0,B=void 0,K=void 0,W=void 0,O=void 0,J=void 0,O=W=K=y=F=void 0,A=x-u,C=z-w,G=v-x,I=t-z,H=u-v,B=w-t;for(p=0;p<f;p++)if(F=a[h[p]].x,y=a[h[p]].y,!(F===v&&y===t||F===u&&y===w||F===x&&y===z)&&(K=F-v,W=y-t,O=F-u,J=y-w,F-=x,y-=z,O=A*J-C*O,K=H*W-B*K,W=G*y-I*F,-1E-10<=O&&-1E-10<=W&&-1E-10<=K)){p=!1;break a}p=
!0}}if(p){g.push([a[h[l]],a[h[m]],a[h[q]]]);k.push([h[l],h[m],h[q]]);l=m;for(q=m+1;q<f;l++,q++)h[l]=h[q];f--;r=2*f}}return e?k:g};a.Triangulate.area=b;return a})(THREE.FontUtils);self._typeface_js={faces:THREE.FontUtils.faces,loadFace:THREE.FontUtils.loadFace};THREE.typeface_js=self._typeface_js;
THREE.Audio=function(a){THREE.Object3D.call(this);this.type="Audio";this.context=a.context;this.source=this.context.createBufferSource();this.source.onended=this.onEnded.bind(this);this.gain=this.context.createGain();this.gain.connect(this.context.destination);this.panner=this.context.createPanner();this.panner.connect(this.gain);this.autoplay=!1;this.startTime=0;this.isPlaying=!1};THREE.Audio.prototype=Object.create(THREE.Object3D.prototype);THREE.Audio.prototype.constructor=THREE.Audio;
THREE.Audio.prototype.load=function(a){var b=this,d=new XMLHttpRequest;d.open("GET",a,!0);d.responseType="arraybuffer";d.onload=function(a){b.context.decodeAudioData(this.response,function(a){b.source.buffer=a;b.autoplay&&b.play()})};d.send();return this};
THREE.Audio.prototype.play=function(){if(!0===this.isPlaying)THREE.warn("THREE.Audio: Audio is already playing.");else{var a=this.context.createBufferSource();a.buffer=this.source.buffer;a.loop=this.source.loop;a.onended=this.source.onended;a.connect(this.panner);a.start(0,this.startTime);this.isPlaying=!0;this.source=a}};THREE.Audio.prototype.pause=function(){this.source.stop();this.startTime=this.context.currentTime};THREE.Audio.prototype.stop=function(){this.source.stop();this.startTime=0};
THREE.Audio.prototype.onEnded=function(){this.isPlaying=!1};THREE.Audio.prototype.setLoop=function(a){this.source.loop=a};THREE.Audio.prototype.setRefDistance=function(a){this.panner.refDistance=a};THREE.Audio.prototype.setRolloffFactor=function(a){this.panner.rolloffFactor=a};THREE.Audio.prototype.setVolume=function(a){this.gain.gain.value=a};
THREE.Audio.prototype.updateMatrixWorld=function(){var a=new THREE.Vector3;return function(b){THREE.Object3D.prototype.updateMatrixWorld.call(this,b);a.setFromMatrixPosition(this.matrixWorld);this.panner.setPosition(a.x,a.y,a.z)}}();THREE.AudioListener=function(){THREE.Object3D.call(this);this.type="AudioListener";this.context=new (window.AudioContext||window.webkitAudioContext)};THREE.AudioListener.prototype=Object.create(THREE.Object3D.prototype);THREE.AudioListener.prototype.constructor=THREE.AudioListener;
THREE.AudioListener.prototype.updateMatrixWorld=function(){var a=new THREE.Vector3,b=new THREE.Quaternion,d=new THREE.Vector3,e=new THREE.Vector3,f=new THREE.Vector3,g=new THREE.Vector3;return function(h){THREE.Object3D.prototype.updateMatrixWorld.call(this,h);h=this.context.listener;var k=this.up;this.matrixWorld.decompose(a,b,d);e.set(0,0,-1).applyQuaternion(b);f.subVectors(a,g);h.setPosition(a.x,a.y,a.z);h.setOrientation(e.x,e.y,e.z,k.x,k.y,k.z);h.setVelocity(f.x,f.y,f.z);g.copy(a)}}();
THREE.Curve=function(){};THREE.Curve.prototype.getPoint=function(a){THREE.warn("THREE.Curve: Warning, getPoint() not implemented!");return null};THREE.Curve.prototype.getPointAt=function(a){a=this.getUtoTmapping(a);return this.getPoint(a)};THREE.Curve.prototype.getPoints=function(a){a||(a=5);var b,d=[];for(b=0;b<=a;b++)d.push(this.getPoint(b/a));return d};THREE.Curve.prototype.getSpacedPoints=function(a){a||(a=5);var b,d=[];for(b=0;b<=a;b++)d.push(this.getPointAt(b/a));return d};
THREE.Curve.prototype.getLength=function(){var a=this.getLengths();return a[a.length-1]};THREE.Curve.prototype.getLengths=function(a){a||(a=this.__arcLengthDivisions?this.__arcLengthDivisions:200);if(this.cacheArcLengths&&this.cacheArcLengths.length==a+1&&!this.needsUpdate)return this.cacheArcLengths;this.needsUpdate=!1;var b=[],d,e=this.getPoint(0),f,g=0;b.push(0);for(f=1;f<=a;f++)d=this.getPoint(f/a),g+=d.distanceTo(e),b.push(g),e=d;return this.cacheArcLengths=b};
THREE.Curve.prototype.updateArcLengths=function(){this.needsUpdate=!0;this.getLengths()};THREE.Curve.prototype.getUtoTmapping=function(a,b){var d=this.getLengths(),e=0,f=d.length,g;g=b?b:a*d[f-1];for(var h=0,k=f-1,l;h<=k;)if(e=Math.floor(h+(k-h)/2),l=d[e]-g,0>l)h=e+1;else if(0<l)k=e-1;else{k=e;break}e=k;if(d[e]==g)return e/(f-1);h=d[e];return d=(e+(g-h)/(d[e+1]-h))/(f-1)};THREE.Curve.prototype.getTangent=function(a){var b=a-1E-4;a+=1E-4;0>b&&(b=0);1<a&&(a=1);b=this.getPoint(b);return this.getPoint(a).clone().sub(b).normalize()};
THREE.Curve.prototype.getTangentAt=function(a){a=this.getUtoTmapping(a);return this.getTangent(a)};
THREE.Curve.Utils={tangentQuadraticBezier:function(a,b,d,e){return 2*(1-a)*(d-b)+2*a*(e-d)},tangentCubicBezier:function(a,b,d,e,f){return-3*b*(1-a)*(1-a)+3*d*(1-a)*(1-a)-6*a*d*(1-a)+6*a*e*(1-a)-3*a*a*e+3*a*a*f},tangentSpline:function(a,b,d,e,f){return 6*a*a-6*a+(3*a*a-4*a+1)+(-6*a*a+6*a)+(3*a*a-2*a)},interpolate:function(a,b,d,e,f){a=.5*(d-a);e=.5*(e-b);var g=f*f;return(2*b-2*d+a+e)*f*g+(-3*b+3*d-2*a-e)*g+a*f+b}};
THREE.Curve.create=function(a,b){a.prototype=Object.create(THREE.Curve.prototype);a.prototype.constructor=a;a.prototype.getPoint=b;return a};THREE.CurvePath=function(){this.curves=[];this.bends=[];this.autoClose=!1};THREE.CurvePath.prototype=Object.create(THREE.Curve.prototype);THREE.CurvePath.prototype.constructor=THREE.CurvePath;THREE.CurvePath.prototype.add=function(a){this.curves.push(a)};THREE.CurvePath.prototype.checkConnection=function(){};
THREE.CurvePath.prototype.closePath=function(){var a=this.curves[0].getPoint(0),b=this.curves[this.curves.length-1].getPoint(1);a.equals(b)||this.curves.push(new THREE.LineCurve(b,a))};THREE.CurvePath.prototype.getPoint=function(a){var b=a*this.getLength(),d=this.getCurveLengths();for(a=0;a<d.length;){if(d[a]>=b)return b=d[a]-b,a=this.curves[a],b=1-b/a.getLength(),a.getPointAt(b);a++}return null};THREE.CurvePath.prototype.getLength=function(){var a=this.getCurveLengths();return a[a.length-1]};
THREE.CurvePath.prototype.getCurveLengths=function(){if(this.cacheLengths&&this.cacheLengths.length==this.curves.length)return this.cacheLengths;var a=[],b=0,d,e=this.curves.length;for(d=0;d<e;d++)b+=this.curves[d].getLength(),a.push(b);return this.cacheLengths=a};
THREE.CurvePath.prototype.getBoundingBox=function(){var a=this.getPoints(),b,d,e,f,g,h;b=d=Number.NEGATIVE_INFINITY;f=g=Number.POSITIVE_INFINITY;var k,l,m,q,r=a[0]instanceof THREE.Vector3;q=r?new THREE.Vector3:new THREE.Vector2;l=0;for(m=a.length;l<m;l++)k=a[l],k.x>b?b=k.x:k.x<f&&(f=k.x),k.y>d?d=k.y:k.y<g&&(g=k.y),r&&(k.z>e?e=k.z:k.z<h&&(h=k.z)),q.add(k);a={minX:f,minY:g,maxX:b,maxY:d};r&&(a.maxZ=e,a.minZ=h);return a};
THREE.CurvePath.prototype.createPointsGeometry=function(a){a=this.getPoints(a,!0);return this.createGeometry(a)};THREE.CurvePath.prototype.createSpacedPointsGeometry=function(a){a=this.getSpacedPoints(a,!0);return this.createGeometry(a)};THREE.CurvePath.prototype.createGeometry=function(a){for(var b=new THREE.Geometry,d=0;d<a.length;d++)b.vertices.push(new THREE.Vector3(a[d].x,a[d].y,a[d].z||0));return b};THREE.CurvePath.prototype.addWrapPath=function(a){this.bends.push(a)};
THREE.CurvePath.prototype.getTransformedPoints=function(a,b){var d=this.getPoints(a),e,f;b||(b=this.bends);e=0;for(f=b.length;e<f;e++)d=this.getWrapPoints(d,b[e]);return d};THREE.CurvePath.prototype.getTransformedSpacedPoints=function(a,b){var d=this.getSpacedPoints(a),e,f;b||(b=this.bends);e=0;for(f=b.length;e<f;e++)d=this.getWrapPoints(d,b[e]);return d};
THREE.CurvePath.prototype.getWrapPoints=function(a,b){var d=this.getBoundingBox(),e,f,g,h,k,l;e=0;for(f=a.length;e<f;e++)g=a[e],h=g.x,k=g.y,l=h/d.maxX,l=b.getUtoTmapping(l,h),h=b.getPoint(l),l=b.getTangent(l),l.set(-l.y,l.x).multiplyScalar(k),g.x=h.x+l.x,g.y=h.y+l.y;return a};THREE.Gyroscope=function(){THREE.Object3D.call(this)};THREE.Gyroscope.prototype=Object.create(THREE.Object3D.prototype);THREE.Gyroscope.prototype.constructor=THREE.Gyroscope;
THREE.Gyroscope.prototype.updateMatrixWorld=function(){var a=new THREE.Vector3,b=new THREE.Quaternion,d=new THREE.Vector3,e=new THREE.Vector3,f=new THREE.Quaternion,g=new THREE.Vector3;return function(h){this.matrixAutoUpdate&&this.updateMatrix();if(this.matrixWorldNeedsUpdate||h)this.parent?(this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),this.matrixWorld.decompose(e,f,g),this.matrix.decompose(a,b,d),this.matrixWorld.compose(e,b,g)):this.matrixWorld.copy(this.matrix),this.matrixWorldNeedsUpdate=
!1,h=!0;for(var k=0,l=this.children.length;k<l;k++)this.children[k].updateMatrixWorld(h)}}();THREE.Path=function(a){THREE.CurvePath.call(this);this.actions=[];a&&this.fromPoints(a)};THREE.Path.prototype=Object.create(THREE.CurvePath.prototype);THREE.Path.prototype.constructor=THREE.Path;THREE.PathActions={MOVE_TO:"moveTo",LINE_TO:"lineTo",QUADRATIC_CURVE_TO:"quadraticCurveTo",BEZIER_CURVE_TO:"bezierCurveTo",CSPLINE_THRU:"splineThru",ARC:"arc",ELLIPSE:"ellipse"};
THREE.Path.prototype.fromPoints=function(a){this.moveTo(a[0].x,a[0].y);for(var b=1,d=a.length;b<d;b++)this.lineTo(a[b].x,a[b].y)};THREE.Path.prototype.moveTo=function(a,b){var d=Array.prototype.slice.call(arguments);this.actions.push({action:THREE.PathActions.MOVE_TO,args:d})};
THREE.Path.prototype.lineTo=function(a,b){var d=Array.prototype.slice.call(arguments),e=this.actions[this.actions.length-1].args,e=new THREE.LineCurve(new THREE.Vector2(e[e.length-2],e[e.length-1]),new THREE.Vector2(a,b));this.curves.push(e);this.actions.push({action:THREE.PathActions.LINE_TO,args:d})};
THREE.Path.prototype.quadraticCurveTo=function(a,b,d,e){var f=Array.prototype.slice.call(arguments),g=this.actions[this.actions.length-1].args,g=new THREE.QuadraticBezierCurve(new THREE.Vector2(g[g.length-2],g[g.length-1]),new THREE.Vector2(a,b),new THREE.Vector2(d,e));this.curves.push(g);this.actions.push({action:THREE.PathActions.QUADRATIC_CURVE_TO,args:f})};
THREE.Path.prototype.bezierCurveTo=function(a,b,d,e,f,g){var h=Array.prototype.slice.call(arguments),k=this.actions[this.actions.length-1].args,k=new THREE.CubicBezierCurve(new THREE.Vector2(k[k.length-2],k[k.length-1]),new THREE.Vector2(a,b),new THREE.Vector2(d,e),new THREE.Vector2(f,g));this.curves.push(k);this.actions.push({action:THREE.PathActions.BEZIER_CURVE_TO,args:h})};
THREE.Path.prototype.splineThru=function(a){var b=Array.prototype.slice.call(arguments),d=this.actions[this.actions.length-1].args,d=[new THREE.Vector2(d[d.length-2],d[d.length-1])];Array.prototype.push.apply(d,a);d=new THREE.SplineCurve(d);this.curves.push(d);this.actions.push({action:THREE.PathActions.CSPLINE_THRU,args:b})};THREE.Path.prototype.arc=function(a,b,d,e,f,g){var h=this.actions[this.actions.length-1].args;this.absarc(a+h[h.length-2],b+h[h.length-1],d,e,f,g)};
THREE.Path.prototype.absarc=function(a,b,d,e,f,g){this.absellipse(a,b,d,d,e,f,g)};THREE.Path.prototype.ellipse=function(a,b,d,e,f,g,h){var k=this.actions[this.actions.length-1].args;this.absellipse(a+k[k.length-2],b+k[k.length-1],d,e,f,g,h)};THREE.Path.prototype.absellipse=function(a,b,d,e,f,g,h){var k=Array.prototype.slice.call(arguments),l=new THREE.EllipseCurve(a,b,d,e,f,g,h);this.curves.push(l);l=l.getPoint(1);k.push(l.x);k.push(l.y);this.actions.push({action:THREE.PathActions.ELLIPSE,args:k})};
THREE.Path.prototype.getSpacedPoints=function(a,b){a||(a=40);for(var d=[],e=0;e<a;e++)d.push(this.getPoint(e/a));return d};
THREE.Path.prototype.getPoints=function(a,b){if(this.useSpacedPoints)return console.log("tata"),this.getSpacedPoints(a,b);a=a||12;var d=[],e,f,g,h,k,l,m,q,r,p,v,t,u;e=0;for(f=this.actions.length;e<f;e++)switch(g=this.actions[e],h=g.action,g=g.args,h){case THREE.PathActions.MOVE_TO:d.push(new THREE.Vector2(g[0],g[1]));break;case THREE.PathActions.LINE_TO:d.push(new THREE.Vector2(g[0],g[1]));break;case THREE.PathActions.QUADRATIC_CURVE_TO:k=g[2];l=g[3];r=g[0];p=g[1];0<d.length?(h=d[d.length-1],v=h.x,
t=h.y):(h=this.actions[e-1].args,v=h[h.length-2],t=h[h.length-1]);for(g=1;g<=a;g++)u=g/a,h=THREE.Shape.Utils.b2(u,v,r,k),u=THREE.Shape.Utils.b2(u,t,p,l),d.push(new THREE.Vector2(h,u));break;case THREE.PathActions.BEZIER_CURVE_TO:k=g[4];l=g[5];r=g[0];p=g[1];m=g[2];q=g[3];0<d.length?(h=d[d.length-1],v=h.x,t=h.y):(h=this.actions[e-1].args,v=h[h.length-2],t=h[h.length-1]);for(g=1;g<=a;g++)u=g/a,h=THREE.Shape.Utils.b3(u,v,r,m,k),u=THREE.Shape.Utils.b3(u,t,p,q,l),d.push(new THREE.Vector2(h,u));break;case THREE.PathActions.CSPLINE_THRU:h=
this.actions[e-1].args;u=[new THREE.Vector2(h[h.length-2],h[h.length-1])];h=a*g[0].length;u=u.concat(g[0]);u=new THREE.SplineCurve(u);for(g=1;g<=h;g++)d.push(u.getPointAt(g/h));break;case THREE.PathActions.ARC:k=g[0];l=g[1];p=g[2];m=g[3];h=g[4];r=!!g[5];v=h-m;t=2*a;for(g=1;g<=t;g++)u=g/t,r||(u=1-u),u=m+u*v,h=k+p*Math.cos(u),u=l+p*Math.sin(u),d.push(new THREE.Vector2(h,u));break;case THREE.PathActions.ELLIPSE:for(k=g[0],l=g[1],p=g[2],q=g[3],m=g[4],h=g[5],r=!!g[6],v=h-m,t=2*a,g=1;g<=t;g++)u=g/t,r||
(u=1-u),u=m+u*v,h=k+p*Math.cos(u),u=l+q*Math.sin(u),d.push(new THREE.Vector2(h,u))}e=d[d.length-1];1E-10>Math.abs(e.x-d[0].x)&&1E-10>Math.abs(e.y-d[0].y)&&d.splice(d.length-1,1);b&&d.push(d[0]);return d};
THREE.Path.prototype.toShapes=function(a,b){function d(a){for(var b=[],d=0,e=a.length;d<e;d++){var f=a[d],g=new THREE.Shape;g.actions=f.actions;g.curves=f.curves;b.push(g)}return b}function e(a,b){for(var d=b.length,e=!1,f=d-1,g=0;g<d;f=g++){var h=b[f],k=b[g],l=k.x-h.x,p=k.y-h.y;if(1E-10<Math.abs(p)){if(0>p&&(h=b[g],l=-l,k=b[f],p=-p),!(a.y<h.y||a.y>k.y))if(a.y==h.y){if(a.x==h.x)return!0}else{f=p*(a.x-h.x)-l*(a.y-h.y);if(0==f)return!0;0>f||(e=!e)}}else if(a.y==h.y&&(k.x<=a.x&&a.x<=h.x||h.x<=a.x&&a.x<=
k.x))return!0}return e}var f=function(a){var b,d,e,f,g=[],h=new THREE.Path;b=0;for(d=a.length;b<d;b++)e=a[b],f=e.args,e=e.action,e==THREE.PathActions.MOVE_TO&&0!=h.actions.length&&(g.push(h),h=new THREE.Path),h[e].apply(h,f);0!=h.actions.length&&g.push(h);return g}(this.actions);if(0==f.length)return[];if(!0===b)return d(f);var g,h,k,l=[];if(1==f.length)return h=f[0],k=new THREE.Shape,k.actions=h.actions,k.curves=h.curves,l.push(k),l;var m=!THREE.Shape.Utils.isClockWise(f[0].getPoints()),m=a?!m:m;
k=[];var q=[],r=[],p=0,v;q[p]=void 0;r[p]=[];var t,u;t=0;for(u=f.length;t<u;t++)h=f[t],v=h.getPoints(),g=THREE.Shape.Utils.isClockWise(v),(g=a?!g:g)?(!m&&q[p]&&p++,q[p]={s:new THREE.Shape,p:v},q[p].s.actions=h.actions,q[p].s.curves=h.curves,m&&p++,r[p]=[]):r[p].push({h:h,p:v[0]});if(!q[0])return d(f);if(1<q.length){t=!1;u=[];h=0;for(f=q.length;h<f;h++)k[h]=[];h=0;for(f=q.length;h<f;h++)for(g=r[h],m=0;m<g.length;m++){p=g[m];v=!0;for(var w=0;w<q.length;w++)e(p.p,q[w].p)&&(h!=w&&u.push({froms:h,tos:w,
hole:m}),v?(v=!1,k[w].push(p)):t=!0);v&&k[h].push(p)}0<u.length&&(t||(r=k))}t=0;for(u=q.length;t<u;t++)for(k=q[t].s,l.push(k),h=r[t],f=0,g=h.length;f<g;f++)k.holes.push(h[f].h);return l};THREE.Shape=function(){THREE.Path.apply(this,arguments);this.holes=[]};THREE.Shape.prototype=Object.create(THREE.Path.prototype);THREE.Shape.prototype.constructor=THREE.Shape;THREE.Shape.prototype.extrude=function(a){return new THREE.ExtrudeGeometry(this,a)};
THREE.Shape.prototype.makeGeometry=function(a){return new THREE.ShapeGeometry(this,a)};THREE.Shape.prototype.getPointsHoles=function(a){var b,d=this.holes.length,e=[];for(b=0;b<d;b++)e[b]=this.holes[b].getTransformedPoints(a,this.bends);return e};THREE.Shape.prototype.getSpacedPointsHoles=function(a){var b,d=this.holes.length,e=[];for(b=0;b<d;b++)e[b]=this.holes[b].getTransformedSpacedPoints(a,this.bends);return e};
THREE.Shape.prototype.extractAllPoints=function(a){return{shape:this.getTransformedPoints(a),holes:this.getPointsHoles(a)}};THREE.Shape.prototype.extractPoints=function(a){return this.useSpacedPoints?this.extractAllSpacedPoints(a):this.extractAllPoints(a)};THREE.Shape.prototype.extractAllSpacedPoints=function(a){return{shape:this.getTransformedSpacedPoints(a),holes:this.getSpacedPointsHoles(a)}};
THREE.Shape.Utils={triangulateShape:function(a,b){function d(a,b,d){return a.x!=b.x?a.x<b.x?a.x<=d.x&&d.x<=b.x:b.x<=d.x&&d.x<=a.x:a.y<b.y?a.y<=d.y&&d.y<=b.y:b.y<=d.y&&d.y<=a.y}function e(a,b,e,f,g){var h=b.x-a.x,k=b.y-a.y,l=f.x-e.x,m=f.y-e.y,q=a.x-e.x,r=a.y-e.y,G=k*l-h*m,I=k*q-h*r;if(1E-10<Math.abs(G)){if(0<G){if(0>I||I>G)return[];l=m*q-l*r;if(0>l||l>G)return[]}else{if(0<I||I<G)return[];l=m*q-l*r;if(0<l||l<G)return[]}if(0==l)return!g||0!=I&&I!=G?[a]:[];if(l==G)return!g||0!=I&&I!=G?[b]:[];if(0==I)return[e];
if(I==G)return[f];g=l/G;return[{x:a.x+g*h,y:a.y+g*k}]}if(0!=I||m*q!=l*r)return[];k=0==h&&0==k;l=0==l&&0==m;if(k&&l)return a.x!=e.x||a.y!=e.y?[]:[a];if(k)return d(e,f,a)?[a]:[];if(l)return d(a,b,e)?[e]:[];0!=h?(a.x<b.x?(h=a,l=a.x,k=b,a=b.x):(h=b,l=b.x,k=a,a=a.x),e.x<f.x?(b=e,G=e.x,m=f,e=f.x):(b=f,G=f.x,m=e,e=e.x)):(a.y<b.y?(h=a,l=a.y,k=b,a=b.y):(h=b,l=b.y,k=a,a=a.y),e.y<f.y?(b=e,G=e.y,m=f,e=f.y):(b=f,G=f.y,m=e,e=e.y));return l<=G?a<G?[]:a==G?g?[]:[b]:a<=e?[b,k]:[b,m]:l>e?[]:l==e?g?[]:[h]:a<=e?[h,k]:
[h,m]}function f(a,b,d,e){var f=b.x-a.x,g=b.y-a.y;b=d.x-a.x;d=d.y-a.y;var h=e.x-a.x;e=e.y-a.y;a=f*d-g*b;f=f*e-g*h;return 1E-10<Math.abs(a)?(b=h*d-e*b,0<a?0<=f&&0<=b:0<=f||0<=b):0<f}var g,h,k,l,m,q={};k=a.concat();g=0;for(h=b.length;g<h;g++)Array.prototype.push.apply(k,b[g]);g=0;for(h=k.length;g<h;g++)m=k[g].x+":"+k[g].y,void 0!==q[m]&&THREE.warn("THREE.Shape: Duplicate point",m),q[m]=g;g=function(a,b){function d(a,b){var e=k.length-1,g=a-1;0>g&&(g=e);var h=a+1;h>e&&(h=0);e=f(k[a],k[g],k[h],l[b]);
if(!e)return!1;e=l.length-1;g=b-1;0>g&&(g=e);h=b+1;h>e&&(h=0);return(e=f(l[b],l[g],l[h],k[a]))?!0:!1}function g(a,b){var d,f;for(d=0;d<k.length;d++)if(f=d+1,f%=k.length,f=e(a,b,k[d],k[f],!0),0<f.length)return!0;return!1}function h(a,d){var f,g,k,l;for(f=0;f<m.length;f++)for(g=b[m[f]],k=0;k<g.length;k++)if(l=k+1,l%=g.length,l=e(a,d,g[k],g[l],!0),0<l.length)return!0;return!1}var k=a.concat(),l,m=[],q,r,C,G,I,H=[],B,K,W,O=0;for(q=b.length;O<q;O++)m.push(O);B=0;for(var J=2*m.length;0<m.length;){J--;if(0>
J){console.log("Infinite Loop! Holes left:"+m.length+", Probably Hole outside Shape!");break}for(r=B;r<k.length;r++){C=k[r];q=-1;for(O=0;O<m.length;O++)if(G=m[O],I=C.x+":"+C.y+":"+G,void 0===H[I]){l=b[G];for(K=0;K<l.length;K++)if(G=l[K],d(r,K)&&!g(C,G)&&!h(C,G)){q=K;m.splice(O,1);B=k.slice(0,r+1);G=k.slice(r);K=l.slice(q);W=l.slice(0,q+1);k=B.concat(K).concat(W).concat(G);B=r;break}if(0<=q)break;H[I]=!0}if(0<=q)break}}return k}(a,b);var r=THREE.FontUtils.Triangulate(g,!1);g=0;for(h=r.length;g<h;g++)for(l=
r[g],k=0;3>k;k++)m=l[k].x+":"+l[k].y,m=q[m],void 0!==m&&(l[k]=m);return r.concat()},isClockWise:function(a){return 0>THREE.FontUtils.Triangulate.area(a)},b2p0:function(a,b){var d=1-a;return d*d*b},b2p1:function(a,b){return 2*(1-a)*a*b},b2p2:function(a,b){return a*a*b},b2:function(a,b,d,e){return this.b2p0(a,b)+this.b2p1(a,d)+this.b2p2(a,e)},b3p0:function(a,b){var d=1-a;return d*d*d*b},b3p1:function(a,b){var d=1-a;return 3*d*d*a*b},b3p2:function(a,b){return 3*(1-a)*a*a*b},b3p3:function(a,b){return a*
a*a*b},b3:function(a,b,d,e,f){return this.b3p0(a,b)+this.b3p1(a,d)+this.b3p2(a,e)+this.b3p3(a,f)}};THREE.LineCurve=function(a,b){this.v1=a;this.v2=b};THREE.LineCurve.prototype=Object.create(THREE.Curve.prototype);THREE.LineCurve.prototype.constructor=THREE.LineCurve;THREE.LineCurve.prototype.getPoint=function(a){var b=this.v2.clone().sub(this.v1);b.multiplyScalar(a).add(this.v1);return b};THREE.LineCurve.prototype.getPointAt=function(a){return this.getPoint(a)};
THREE.LineCurve.prototype.getTangent=function(a){return this.v2.clone().sub(this.v1).normalize()};THREE.QuadraticBezierCurve=function(a,b,d){this.v0=a;this.v1=b;this.v2=d};THREE.QuadraticBezierCurve.prototype=Object.create(THREE.Curve.prototype);THREE.QuadraticBezierCurve.prototype.constructor=THREE.QuadraticBezierCurve;
THREE.QuadraticBezierCurve.prototype.getPoint=function(a){var b=new THREE.Vector2;b.x=THREE.Shape.Utils.b2(a,this.v0.x,this.v1.x,this.v2.x);b.y=THREE.Shape.Utils.b2(a,this.v0.y,this.v1.y,this.v2.y);return b};THREE.QuadraticBezierCurve.prototype.getTangent=function(a){var b=new THREE.Vector2;b.x=THREE.Curve.Utils.tangentQuadraticBezier(a,this.v0.x,this.v1.x,this.v2.x);b.y=THREE.Curve.Utils.tangentQuadraticBezier(a,this.v0.y,this.v1.y,this.v2.y);return b.normalize()};
THREE.CubicBezierCurve=function(a,b,d,e){this.v0=a;this.v1=b;this.v2=d;this.v3=e};THREE.CubicBezierCurve.prototype=Object.create(THREE.Curve.prototype);THREE.CubicBezierCurve.prototype.constructor=THREE.CubicBezierCurve;THREE.CubicBezierCurve.prototype.getPoint=function(a){var b;b=THREE.Shape.Utils.b3(a,this.v0.x,this.v1.x,this.v2.x,this.v3.x);a=THREE.Shape.Utils.b3(a,this.v0.y,this.v1.y,this.v2.y,this.v3.y);return new THREE.Vector2(b,a)};
THREE.CubicBezierCurve.prototype.getTangent=function(a){var b;b=THREE.Curve.Utils.tangentCubicBezier(a,this.v0.x,this.v1.x,this.v2.x,this.v3.x);a=THREE.Curve.Utils.tangentCubicBezier(a,this.v0.y,this.v1.y,this.v2.y,this.v3.y);b=new THREE.Vector2(b,a);b.normalize();return b};THREE.SplineCurve=function(a){this.points=void 0==a?[]:a};THREE.SplineCurve.prototype=Object.create(THREE.Curve.prototype);THREE.SplineCurve.prototype.constructor=THREE.SplineCurve;
THREE.SplineCurve.prototype.getPoint=function(a){var b=this.points;a*=b.length-1;var d=Math.floor(a);a-=d;var e=b[0==d?d:d-1],f=b[d],g=b[d>b.length-2?b.length-1:d+1],b=b[d>b.length-3?b.length-1:d+2],d=new THREE.Vector2;d.x=THREE.Curve.Utils.interpolate(e.x,f.x,g.x,b.x,a);d.y=THREE.Curve.Utils.interpolate(e.y,f.y,g.y,b.y,a);return d};THREE.EllipseCurve=function(a,b,d,e,f,g,h){this.aX=a;this.aY=b;this.xRadius=d;this.yRadius=e;this.aStartAngle=f;this.aEndAngle=g;this.aClockwise=h};
THREE.EllipseCurve.prototype=Object.create(THREE.Curve.prototype);THREE.EllipseCurve.prototype.constructor=THREE.EllipseCurve;THREE.EllipseCurve.prototype.getPoint=function(a){var b=this.aEndAngle-this.aStartAngle;0>b&&(b+=2*Math.PI);b>2*Math.PI&&(b-=2*Math.PI);a=!0===this.aClockwise?this.aEndAngle+(1-a)*(2*Math.PI-b):this.aStartAngle+a*b;b=new THREE.Vector2;b.x=this.aX+this.xRadius*Math.cos(a);b.y=this.aY+this.yRadius*Math.sin(a);return b};
THREE.ArcCurve=function(a,b,d,e,f,g){THREE.EllipseCurve.call(this,a,b,d,d,e,f,g)};THREE.ArcCurve.prototype=Object.create(THREE.EllipseCurve.prototype);THREE.ArcCurve.prototype.constructor=THREE.ArcCurve;THREE.LineCurve3=THREE.Curve.create(function(a,b){this.v1=a;this.v2=b},function(a){var b=new THREE.Vector3;b.subVectors(this.v2,this.v1);b.multiplyScalar(a);b.add(this.v1);return b});
THREE.QuadraticBezierCurve3=THREE.Curve.create(function(a,b,d){this.v0=a;this.v1=b;this.v2=d},function(a){var b=new THREE.Vector3;b.x=THREE.Shape.Utils.b2(a,this.v0.x,this.v1.x,this.v2.x);b.y=THREE.Shape.Utils.b2(a,this.v0.y,this.v1.y,this.v2.y);b.z=THREE.Shape.Utils.b2(a,this.v0.z,this.v1.z,this.v2.z);return b});
THREE.CubicBezierCurve3=THREE.Curve.create(function(a,b,d,e){this.v0=a;this.v1=b;this.v2=d;this.v3=e},function(a){var b=new THREE.Vector3;b.x=THREE.Shape.Utils.b3(a,this.v0.x,this.v1.x,this.v2.x,this.v3.x);b.y=THREE.Shape.Utils.b3(a,this.v0.y,this.v1.y,this.v2.y,this.v3.y);b.z=THREE.Shape.Utils.b3(a,this.v0.z,this.v1.z,this.v2.z,this.v3.z);return b});
THREE.SplineCurve3=THREE.Curve.create(function(a){this.points=void 0==a?[]:a},function(a){var b=this.points;a*=b.length-1;var d=Math.floor(a);a-=d;var e=b[0==d?d:d-1],f=b[d],g=b[d>b.length-2?b.length-1:d+1],b=b[d>b.length-3?b.length-1:d+2],d=new THREE.Vector3;d.x=THREE.Curve.Utils.interpolate(e.x,f.x,g.x,b.x,a);d.y=THREE.Curve.Utils.interpolate(e.y,f.y,g.y,b.y,a);d.z=THREE.Curve.Utils.interpolate(e.z,f.z,g.z,b.z,a);return d});
THREE.ClosedSplineCurve3=THREE.Curve.create(function(a){this.points=void 0==a?[]:a},function(a){var b=this.points;a*=b.length-0;var d=Math.floor(a);a-=d;var d=d+(0<d?0:(Math.floor(Math.abs(d)/b.length)+1)*b.length),e=b[(d-1)%b.length],f=b[d%b.length],g=b[(d+1)%b.length],b=b[(d+2)%b.length],d=new THREE.Vector3;d.x=THREE.Curve.Utils.interpolate(e.x,f.x,g.x,b.x,a);d.y=THREE.Curve.Utils.interpolate(e.y,f.y,g.y,b.y,a);d.z=THREE.Curve.Utils.interpolate(e.z,f.z,g.z,b.z,a);return d});
THREE.AnimationHandler={LINEAR:0,CATMULLROM:1,CATMULLROM_FORWARD:2,add:function(){THREE.warn("THREE.AnimationHandler.add() has been deprecated.")},get:function(){THREE.warn("THREE.AnimationHandler.get() has been deprecated.")},remove:function(){THREE.warn("THREE.AnimationHandler.remove() has been deprecated.")},animations:[],init:function(a){if(!0===a.initialized)return a;for(var b=0;b<a.hierarchy.length;b++){for(var d=0;d<a.hierarchy[b].keys.length;d++)if(0>a.hierarchy[b].keys[d].time&&(a.hierarchy[b].keys[d].time=
0),void 0!==a.hierarchy[b].keys[d].rot&&!(a.hierarchy[b].keys[d].rot instanceof THREE.Quaternion)){var e=a.hierarchy[b].keys[d].rot;a.hierarchy[b].keys[d].rot=(new THREE.Quaternion).fromArray(e)}if(a.hierarchy[b].keys.length&&void 0!==a.hierarchy[b].keys[0].morphTargets){e={};for(d=0;d<a.hierarchy[b].keys.length;d++)for(var f=0;f<a.hierarchy[b].keys[d].morphTargets.length;f++){var g=a.hierarchy[b].keys[d].morphTargets[f];e[g]=-1}a.hierarchy[b].usedMorphTargets=e;for(d=0;d<a.hierarchy[b].keys.length;d++){var h=
{};for(g in e){for(f=0;f<a.hierarchy[b].keys[d].morphTargets.length;f++)if(a.hierarchy[b].keys[d].morphTargets[f]===g){h[g]=a.hierarchy[b].keys[d].morphTargetsInfluences[f];break}f===a.hierarchy[b].keys[d].morphTargets.length&&(h[g]=0)}a.hierarchy[b].keys[d].morphTargetsInfluences=h}}for(d=1;d<a.hierarchy[b].keys.length;d++)a.hierarchy[b].keys[d].time===a.hierarchy[b].keys[d-1].time&&(a.hierarchy[b].keys.splice(d,1),d--);for(d=0;d<a.hierarchy[b].keys.length;d++)a.hierarchy[b].keys[d].index=d}a.initialized=
!0;return a},parse:function(a){var b=function(a,d){d.push(a);for(var e=0;e<a.children.length;e++)b(a.children[e],d)},d=[];if(a instanceof THREE.SkinnedMesh)for(var e=0;e<a.skeleton.bones.length;e++)d.push(a.skeleton.bones[e]);else b(a,d);return d},play:function(a){-1===this.animations.indexOf(a)&&this.animations.push(a)},stop:function(a){a=this.animations.indexOf(a);-1!==a&&this.animations.splice(a,1)},update:function(a){for(var b=0;b<this.animations.length;b++)this.animations[b].resetBlendWeights();
for(b=0;b<this.animations.length;b++)this.animations[b].update(a)}};THREE.Animation=function(a,b){this.root=a;this.data=THREE.AnimationHandler.init(b);this.hierarchy=THREE.AnimationHandler.parse(a);this.currentTime=0;this.timeScale=1;this.isPlaying=!1;this.loop=!0;this.weight=0;this.interpolationType=THREE.AnimationHandler.LINEAR};
THREE.Animation.prototype={constructor:THREE.Animation,keyTypes:["pos","rot","scl"],play:function(a,b){this.currentTime=void 0!==a?a:0;this.weight=void 0!==b?b:1;this.isPlaying=!0;this.reset();THREE.AnimationHandler.play(this)},stop:function(){this.isPlaying=!1;THREE.AnimationHandler.stop(this)},reset:function(){for(var a=0,b=this.hierarchy.length;a<b;a++){var d=this.hierarchy[a];void 0===d.animationCache&&(d.animationCache={animations:{},blending:{positionWeight:0,quaternionWeight:0,scaleWeight:0}});
var e=this.data.name,f=d.animationCache.animations,g=f[e];void 0===g&&(g={prevKey:{pos:0,rot:0,scl:0},nextKey:{pos:0,rot:0,scl:0},originalMatrix:d.matrix},f[e]=g);for(d=0;3>d;d++){for(var e=this.keyTypes[d],f=this.data.hierarchy[a].keys[0],h=this.getNextKeyWith(e,a,1);h.time<this.currentTime&&h.index>f.index;)f=h,h=this.getNextKeyWith(e,a,h.index+1);g.prevKey[e]=f;g.nextKey[e]=h}}},resetBlendWeights:function(){for(var a=0,b=this.hierarchy.length;a<b;a++){var d=this.hierarchy[a].animationCache;void 0!==
d&&(d=d.blending,d.positionWeight=0,d.quaternionWeight=0,d.scaleWeight=0)}},update:function(){var a=[],b=new THREE.Vector3,d=new THREE.Vector3,e=new THREE.Quaternion,f=function(a,b){var d=[],e=[],f,r,p,v,t,u;f=(a.length-1)*b;r=Math.floor(f);f-=r;d[0]=0===r?r:r-1;d[1]=r;d[2]=r>a.length-2?r:r+1;d[3]=r>a.length-3?r:r+2;r=a[d[0]];v=a[d[1]];t=a[d[2]];u=a[d[3]];d=f*f;p=f*d;e[0]=g(r[0],v[0],t[0],u[0],f,d,p);e[1]=g(r[1],v[1],t[1],u[1],f,d,p);e[2]=g(r[2],v[2],t[2],u[2],f,d,p);return e},g=function(a,b,d,e,
f,g,p){a=.5*(d-a);e=.5*(e-b);return(2*(b-d)+a+e)*p+(-3*(b-d)-2*a-e)*g+a*f+b};return function(g){if(!1!==this.isPlaying&&(this.currentTime+=g*this.timeScale,0!==this.weight)){g=this.data.length;if(this.currentTime>g||0>this.currentTime)this.loop?(this.currentTime%=g,0>this.currentTime&&(this.currentTime+=g),this.reset()):this.stop();g=0;for(var k=this.hierarchy.length;g<k;g++)for(var l=this.hierarchy[g],m=l.animationCache.animations[this.data.name],q=l.animationCache.blending,r=0;3>r;r++){var p=this.keyTypes[r],
v=m.prevKey[p],t=m.nextKey[p];if(0<this.timeScale&&t.time<=this.currentTime||0>this.timeScale&&v.time>=this.currentTime){v=this.data.hierarchy[g].keys[0];for(t=this.getNextKeyWith(p,g,1);t.time<this.currentTime&&t.index>v.index;)v=t,t=this.getNextKeyWith(p,g,t.index+1);m.prevKey[p]=v;m.nextKey[p]=t}var u=(this.currentTime-v.time)/(t.time-v.time),w=v[p],x=t[p];0>u&&(u=0);1<u&&(u=1);if("pos"===p)if(this.interpolationType===THREE.AnimationHandler.LINEAR)d.x=w[0]+(x[0]-w[0])*u,d.y=w[1]+(x[1]-w[1])*u,
d.z=w[2]+(x[2]-w[2])*u,v=this.weight/(this.weight+q.positionWeight),l.position.lerp(d,v),q.positionWeight+=this.weight;else{if(this.interpolationType===THREE.AnimationHandler.CATMULLROM||this.interpolationType===THREE.AnimationHandler.CATMULLROM_FORWARD)a[0]=this.getPrevKeyWith("pos",g,v.index-1).pos,a[1]=w,a[2]=x,a[3]=this.getNextKeyWith("pos",g,t.index+1).pos,u=.33*u+.33,t=f(a,u),v=this.weight/(this.weight+q.positionWeight),q.positionWeight+=this.weight,p=l.position,p.x+=(t[0]-p.x)*v,p.y+=(t[1]-
p.y)*v,p.z+=(t[2]-p.z)*v,this.interpolationType===THREE.AnimationHandler.CATMULLROM_FORWARD&&(u=f(a,1.01*u),b.set(u[0],u[1],u[2]),b.sub(p),b.y=0,b.normalize(),u=Math.atan2(b.x,b.z),l.rotation.set(0,u,0))}else"rot"===p?(THREE.Quaternion.slerp(w,x,e,u),0===q.quaternionWeight?(l.quaternion.copy(e),q.quaternionWeight=this.weight):(v=this.weight/(this.weight+q.quaternionWeight),THREE.Quaternion.slerp(l.quaternion,e,l.quaternion,v),q.quaternionWeight+=this.weight)):"scl"===p&&(d.x=w[0]+(x[0]-w[0])*u,d.y=
w[1]+(x[1]-w[1])*u,d.z=w[2]+(x[2]-w[2])*u,v=this.weight/(this.weight+q.scaleWeight),l.scale.lerp(d,v),q.scaleWeight+=this.weight)}return!0}}}(),getNextKeyWith:function(a,b,d){var e=this.data.hierarchy[b].keys;for(d=this.interpolationType===THREE.AnimationHandler.CATMULLROM||this.interpolationType===THREE.AnimationHandler.CATMULLROM_FORWARD?d<e.length-1?d:e.length-1:d%e.length;d<e.length;d++)if(void 0!==e[d][a])return e[d];return this.data.hierarchy[b].keys[0]},getPrevKeyWith:function(a,b,d){var e=
this.data.hierarchy[b].keys;for(d=this.interpolationType===THREE.AnimationHandler.CATMULLROM||this.interpolationType===THREE.AnimationHandler.CATMULLROM_FORWARD?0<d?d:0:0<=d?d:d+e.length;0<=d;d--)if(void 0!==e[d][a])return e[d];return this.data.hierarchy[b].keys[e.length-1]}};
THREE.KeyFrameAnimation=function(a){this.root=a.node;this.data=THREE.AnimationHandler.init(a);this.hierarchy=THREE.AnimationHandler.parse(this.root);this.currentTime=0;this.timeScale=.001;this.isPlaying=!1;this.loop=this.isPaused=!0;a=0;for(var b=this.hierarchy.length;a<b;a++){var d=this.data.hierarchy[a].sids,e=this.hierarchy[a];if(this.data.hierarchy[a].keys.length&&d){for(var f=0;f<d.length;f++){var g=d[f],h=this.getNextKeyWith(g,a,0);h&&h.apply(g)}e.matrixAutoUpdate=!1;this.data.hierarchy[a].node.updateMatrix();
e.matrixWorldNeedsUpdate=!0}}};
THREE.KeyFrameAnimation.prototype={constructor:THREE.KeyFrameAnimation,play:function(a){this.currentTime=void 0!==a?a:0;if(!1===this.isPlaying){this.isPlaying=!0;var b=this.hierarchy.length,d,e;for(a=0;a<b;a++)d=this.hierarchy[a],e=this.data.hierarchy[a],void 0===e.animationCache&&(e.animationCache={},e.animationCache.prevKey=null,e.animationCache.nextKey=null,e.animationCache.originalMatrix=d.matrix),d=this.data.hierarchy[a].keys,d.length&&(e.animationCache.prevKey=d[0],e.animationCache.nextKey=
d[1],this.startTime=Math.min(d[0].time,this.startTime),this.endTime=Math.max(d[d.length-1].time,this.endTime));this.update(0)}this.isPaused=!1;THREE.AnimationHandler.play(this)},stop:function(){this.isPaused=this.isPlaying=!1;THREE.AnimationHandler.stop(this);for(var a=0;a<this.data.hierarchy.length;a++){var b=this.hierarchy[a],d=this.data.hierarchy[a];if(void 0!==d.animationCache){var e=d.animationCache.originalMatrix;e.copy(b.matrix);b.matrix=e;delete d.animationCache}}},update:function(a){if(!1!==
this.isPlaying){this.currentTime+=a*this.timeScale;a=this.data.length;!0===this.loop&&this.currentTime>a&&(this.currentTime%=a);this.currentTime=Math.min(this.currentTime,a);a=0;for(var b=this.hierarchy.length;a<b;a++){var d=this.hierarchy[a],e=this.data.hierarchy[a],f=e.keys,e=e.animationCache;if(f.length){var g=e.prevKey,h=e.nextKey;if(h.time<=this.currentTime){for(;h.time<this.currentTime&&h.index>g.index;)g=h,h=f[g.index+1];e.prevKey=g;e.nextKey=h}h.time>=this.currentTime?g.interpolate(h,this.currentTime):
g.interpolate(h,h.time);this.data.hierarchy[a].node.updateMatrix();d.matrixWorldNeedsUpdate=!0}}}},getNextKeyWith:function(a,b,d){b=this.data.hierarchy[b].keys;for(d%=b.length;d<b.length;d++)if(b[d].hasTarget(a))return b[d];return b[0]},getPrevKeyWith:function(a,b,d){b=this.data.hierarchy[b].keys;for(d=0<=d?d:d+b.length;0<=d;d--)if(b[d].hasTarget(a))return b[d];return b[b.length-1]}};
THREE.MorphAnimation=function(a){this.mesh=a;this.frames=a.morphTargetInfluences.length;this.currentTime=0;this.duration=1E3;this.loop=!0;this.currentFrame=this.lastFrame=0;this.isPlaying=!1};
THREE.MorphAnimation.prototype={constructor:THREE.MorphAnimation,play:function(){this.isPlaying=!0},pause:function(){this.isPlaying=!1},update:function(a){if(!1!==this.isPlaying){this.currentTime+=a;!0===this.loop&&this.currentTime>this.duration&&(this.currentTime%=this.duration);this.currentTime=Math.min(this.currentTime,this.duration);a=this.duration/this.frames;var b=Math.floor(this.currentTime/a),d=this.mesh.morphTargetInfluences;b!=this.currentFrame&&(d[this.lastFrame]=0,d[this.currentFrame]=
1,d[b]=0,this.lastFrame=this.currentFrame,this.currentFrame=b);d[b]=this.currentTime%a/a;d[this.lastFrame]=1-d[b]}}};
THREE.BoxGeometry=function(a,b,d,e,f,g){function h(a,b,d,e,f,g,h,u){var w,x=k.widthSegments,z=k.heightSegments,F=f/2,y=g/2,A=k.vertices.length;if("x"===a&&"y"===b||"y"===a&&"x"===b)w="z";else if("x"===a&&"z"===b||"z"===a&&"x"===b)w="y",z=k.depthSegments;else if("z"===a&&"y"===b||"y"===a&&"z"===b)w="x",x=k.depthSegments;var C=x+1,G=z+1,I=f/x,H=g/z,B=new THREE.Vector3;B[w]=0<h?1:-1;for(f=0;f<G;f++)for(g=0;g<C;g++){var K=new THREE.Vector3;K[a]=(g*I-F)*d;K[b]=(f*H-y)*e;K[w]=h;k.vertices.push(K)}for(f=
0;f<z;f++)for(g=0;g<x;g++)y=g+C*f,a=g+C*(f+1),b=g+1+C*(f+1),d=g+1+C*f,e=new THREE.Vector2(g/x,1-f/z),h=new THREE.Vector2(g/x,1-(f+1)/z),w=new THREE.Vector2((g+1)/x,1-(f+1)/z),F=new THREE.Vector2((g+1)/x,1-f/z),y=new THREE.Face3(y+A,a+A,d+A),y.normal.copy(B),y.vertexNormals.push(B.clone(),B.clone(),B.clone()),y.materialIndex=u,k.faces.push(y),k.faceVertexUvs[0].push([e,h,F]),y=new THREE.Face3(a+A,b+A,d+A),y.normal.copy(B),y.vertexNormals.push(B.clone(),B.clone(),B.clone()),y.materialIndex=u,k.faces.push(y),
k.faceVertexUvs[0].push([h.clone(),w,F.clone()])}THREE.Geometry.call(this);this.type="BoxGeometry";this.parameters={width:a,height:b,depth:d,widthSegments:e,heightSegments:f,depthSegments:g};this.widthSegments=e||1;this.heightSegments=f||1;this.depthSegments=g||1;var k=this;e=a/2;f=b/2;g=d/2;h("z","y",-1,-1,d,b,e,0);h("z","y",1,-1,d,b,-e,1);h("x","z",1,1,a,d,f,2);h("x","z",1,-1,a,d,-f,3);h("x","y",1,-1,a,b,g,4);h("x","y",-1,-1,a,b,-g,5);this.mergeVertices()};THREE.BoxGeometry.prototype=Object.create(THREE.Geometry.prototype);
THREE.BoxGeometry.prototype.constructor=THREE.BoxGeometry;
THREE.CircleGeometry=function(a,b,d,e){THREE.Geometry.call(this);this.type="CircleGeometry";this.parameters={radius:a,segments:b,thetaStart:d,thetaLength:e};a=a||50;b=void 0!==b?Math.max(3,b):8;d=void 0!==d?d:0;e=void 0!==e?e:2*Math.PI;var f,g=[];f=new THREE.Vector3;var h=new THREE.Vector2(.5,.5);this.vertices.push(f);g.push(h);for(f=0;f<=b;f++){var k=new THREE.Vector3,l=d+f/b*e;k.x=a*Math.cos(l);k.y=a*Math.sin(l);this.vertices.push(k);g.push(new THREE.Vector2((k.x/a+1)/2,(k.y/a+1)/2))}d=new THREE.Vector3(0,
0,1);for(f=1;f<=b;f++)this.faces.push(new THREE.Face3(f,f+1,0,[d.clone(),d.clone(),d.clone()])),this.faceVertexUvs[0].push([g[f].clone(),g[f+1].clone(),h.clone()]);this.computeFaceNormals();this.boundingSphere=new THREE.Sphere(new THREE.Vector3,a)};THREE.CircleGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.CircleGeometry.prototype.constructor=THREE.CircleGeometry;
THREE.CubeGeometry=function(a,b,d,e,f,g){THREE.warn("THREE.CubeGeometry has been renamed to THREE.BoxGeometry.");return new THREE.BoxGeometry(a,b,d,e,f,g)};
THREE.CylinderGeometry=function(a,b,d,e,f,g,h,k){THREE.Geometry.call(this);this.type="CylinderGeometry";this.parameters={radiusTop:a,radiusBottom:b,height:d,radialSegments:e,heightSegments:f,openEnded:g,thetaStart:h,thetaLength:k};a=void 0!==a?a:20;b=void 0!==b?b:20;d=void 0!==d?d:100;e=e||8;f=f||1;g=void 0!==g?g:!1;h=void 0!==h?h:0;k=void 0!==k?k:2*Math.PI;var l=d/2,m,q,r=[],p=[];for(q=0;q<=f;q++){var v=[],t=[],u=q/f,w=u*(b-a)+a;for(m=0;m<=e;m++){var x=m/e,z=new THREE.Vector3;z.x=w*Math.sin(x*k+
h);z.y=-u*d+l;z.z=w*Math.cos(x*k+h);this.vertices.push(z);v.push(this.vertices.length-1);t.push(new THREE.Vector2(x,1-u))}r.push(v);p.push(t)}d=(b-a)/d;for(m=0;m<e;m++)for(0!==a?(h=this.vertices[r[0][m]].clone(),k=this.vertices[r[0][m+1]].clone()):(h=this.vertices[r[1][m]].clone(),k=this.vertices[r[1][m+1]].clone()),h.setY(Math.sqrt(h.x*h.x+h.z*h.z)*d).normalize(),k.setY(Math.sqrt(k.x*k.x+k.z*k.z)*d).normalize(),q=0;q<f;q++){var v=r[q][m],t=r[q+1][m],u=r[q+1][m+1],w=r[q][m+1],x=h.clone(),z=h.clone(),
F=k.clone(),y=k.clone(),A=p[q][m].clone(),C=p[q+1][m].clone(),G=p[q+1][m+1].clone(),I=p[q][m+1].clone();this.faces.push(new THREE.Face3(v,t,w,[x,z,y]));this.faceVertexUvs[0].push([A,C,I]);this.faces.push(new THREE.Face3(t,u,w,[z.clone(),F,y.clone()]));this.faceVertexUvs[0].push([C.clone(),G,I.clone()])}if(!1===g&&0<a)for(this.vertices.push(new THREE.Vector3(0,l,0)),m=0;m<e;m++)v=r[0][m],t=r[0][m+1],u=this.vertices.length-1,x=new THREE.Vector3(0,1,0),z=new THREE.Vector3(0,1,0),F=new THREE.Vector3(0,
1,0),A=p[0][m].clone(),C=p[0][m+1].clone(),G=new THREE.Vector2(C.x,0),this.faces.push(new THREE.Face3(v,t,u,[x,z,F])),this.faceVertexUvs[0].push([A,C,G]);if(!1===g&&0<b)for(this.vertices.push(new THREE.Vector3(0,-l,0)),m=0;m<e;m++)v=r[f][m+1],t=r[f][m],u=this.vertices.length-1,x=new THREE.Vector3(0,-1,0),z=new THREE.Vector3(0,-1,0),F=new THREE.Vector3(0,-1,0),A=p[f][m+1].clone(),C=p[f][m].clone(),G=new THREE.Vector2(C.x,1),this.faces.push(new THREE.Face3(v,t,u,[x,z,F])),this.faceVertexUvs[0].push([A,
C,G]);this.computeFaceNormals()};THREE.CylinderGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.CylinderGeometry.prototype.constructor=THREE.CylinderGeometry;THREE.ExtrudeGeometry=function(a,b){"undefined"!==typeof a&&(THREE.Geometry.call(this),this.type="ExtrudeGeometry",a=a instanceof Array?a:[a],this.addShapeList(a,b),this.computeFaceNormals())};THREE.ExtrudeGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.ExtrudeGeometry.prototype.constructor=THREE.ExtrudeGeometry;
THREE.ExtrudeGeometry.prototype.addShapeList=function(a,b){for(var d=a.length,e=0;e<d;e++)this.addShape(a[e],b)};
THREE.ExtrudeGeometry.prototype.addShape=function(a,b){function d(a,b,d){b||THREE.error("THREE.ExtrudeGeometry: vec does not exist");return b.clone().multiplyScalar(d).add(a)}function e(a,b,d){var e=1,e=a.x-b.x,f=a.y-b.y,g=d.x-a.x,h=d.y-a.y,k=e*e+f*f;if(1E-10<Math.abs(e*h-f*g)){var l=Math.sqrt(k),m=Math.sqrt(g*g+h*h),k=b.x-f/l;b=b.y+e/l;g=((d.x-h/m-k)*h-(d.y+g/m-b)*g)/(e*h-f*g);d=k+e*g-a.x;a=b+f*g-a.y;e=d*d+a*a;if(2>=e)return new THREE.Vector2(d,a);e=Math.sqrt(e/2)}else a=!1,1E-10<e?1E-10<g&&(a=!0):
-1E-10>e?-1E-10>g&&(a=!0):Math.sign(f)==Math.sign(h)&&(a=!0),a?(d=-f,a=e,e=Math.sqrt(k)):(d=e,a=f,e=Math.sqrt(k/2));return new THREE.Vector2(d/e,a/e)}function f(a,b){var d,e;for(Q=a.length;0<=--Q;){d=Q;e=Q-1;0>e&&(e=a.length-1);for(var f=0,g=v+2*q,f=0;f<g;f++){var h=ra*f,k=ra*(f+1),l=b+d+h,h=b+e+h,m=b+e+k,k=b+d+k,l=l+W,h=h+W,m=m+W,k=k+W;K.faces.push(new THREE.Face3(l,h,k,null,null,z));K.faces.push(new THREE.Face3(h,m,k,null,null,z));l=F.generateSideWallUV(K,l,h,m,k);K.faceVertexUvs[0].push([l[0],
l[1],l[3]]);K.faceVertexUvs[0].push([l[1],l[2],l[3]])}}}function g(a,b,d){K.vertices.push(new THREE.Vector3(a,b,d))}function h(a,b,d){a+=W;b+=W;d+=W;K.faces.push(new THREE.Face3(a,b,d,null,null,x));a=F.generateTopUV(K,a,b,d);K.faceVertexUvs[0].push(a)}var k=void 0!==b.amount?b.amount:100,l=void 0!==b.bevelThickness?b.bevelThickness:6,m=void 0!==b.bevelSize?b.bevelSize:l-2,q=void 0!==b.bevelSegments?b.bevelSegments:3,r=void 0!==b.bevelEnabled?b.bevelEnabled:!0,p=void 0!==b.curveSegments?b.curveSegments:
12,v=void 0!==b.steps?b.steps:1,t=b.extrudePath,u,w=!1,x=b.material,z=b.extrudeMaterial,F=void 0!==b.UVGenerator?b.UVGenerator:THREE.ExtrudeGeometry.WorldUVGenerator,y,A,C,G;t&&(u=t.getSpacedPoints(v),w=!0,r=!1,y=void 0!==b.frames?b.frames:new THREE.TubeGeometry.FrenetFrames(t,v,!1),A=new THREE.Vector3,C=new THREE.Vector3,G=new THREE.Vector3);r||(m=l=q=0);var I,H,B,K=this,W=this.vertices.length,t=a.extractPoints(p),p=t.shape,O=t.holes;if(t=!THREE.Shape.Utils.isClockWise(p)){p=p.reverse();H=0;for(B=
O.length;H<B;H++)I=O[H],THREE.Shape.Utils.isClockWise(I)&&(O[H]=I.reverse());t=!1}var J=THREE.Shape.Utils.triangulateShape(p,O),N=p;H=0;for(B=O.length;H<B;H++)I=O[H],p=p.concat(I);var R,P,T,X,L,ra=p.length,ma,ka=J.length,t=[],Q=0;T=N.length;R=T-1;for(P=Q+1;Q<T;Q++,R++,P++)R===T&&(R=0),P===T&&(P=0),t[Q]=e(N[Q],N[R],N[P]);var fa=[],ea,ta=t.concat();H=0;for(B=O.length;H<B;H++){I=O[H];ea=[];Q=0;T=I.length;R=T-1;for(P=Q+1;Q<T;Q++,R++,P++)R===T&&(R=0),P===T&&(P=0),ea[Q]=e(I[Q],I[R],I[P]);fa.push(ea);ta=
ta.concat(ea)}for(R=0;R<q;R++){T=R/q;X=l*(1-T);P=m*Math.sin(T*Math.PI/2);Q=0;for(T=N.length;Q<T;Q++)L=d(N[Q],t[Q],P),g(L.x,L.y,-X);H=0;for(B=O.length;H<B;H++)for(I=O[H],ea=fa[H],Q=0,T=I.length;Q<T;Q++)L=d(I[Q],ea[Q],P),g(L.x,L.y,-X)}P=m;for(Q=0;Q<ra;Q++)L=r?d(p[Q],ta[Q],P):p[Q],w?(C.copy(y.normals[0]).multiplyScalar(L.x),A.copy(y.binormals[0]).multiplyScalar(L.y),G.copy(u[0]).add(C).add(A),g(G.x,G.y,G.z)):g(L.x,L.y,0);for(T=1;T<=v;T++)for(Q=0;Q<ra;Q++)L=r?d(p[Q],ta[Q],P):p[Q],w?(C.copy(y.normals[T]).multiplyScalar(L.x),
A.copy(y.binormals[T]).multiplyScalar(L.y),G.copy(u[T]).add(C).add(A),g(G.x,G.y,G.z)):g(L.x,L.y,k/v*T);for(R=q-1;0<=R;R--){T=R/q;X=l*(1-T);P=m*Math.sin(T*Math.PI/2);Q=0;for(T=N.length;Q<T;Q++)L=d(N[Q],t[Q],P),g(L.x,L.y,k+X);H=0;for(B=O.length;H<B;H++)for(I=O[H],ea=fa[H],Q=0,T=I.length;Q<T;Q++)L=d(I[Q],ea[Q],P),w?g(L.x,L.y+u[v-1].y,u[v-1].x+X):g(L.x,L.y,k+X)}(function(){if(r){var a;a=0*ra;for(Q=0;Q<ka;Q++)ma=J[Q],h(ma[2]+a,ma[1]+a,ma[0]+a);a=v+2*q;a*=ra;for(Q=0;Q<ka;Q++)ma=J[Q],h(ma[0]+a,ma[1]+a,ma[2]+
a)}else{for(Q=0;Q<ka;Q++)ma=J[Q],h(ma[2],ma[1],ma[0]);for(Q=0;Q<ka;Q++)ma=J[Q],h(ma[0]+ra*v,ma[1]+ra*v,ma[2]+ra*v)}})();(function(){var a=0;f(N,a);a+=N.length;H=0;for(B=O.length;H<B;H++)I=O[H],f(I,a),a+=I.length})()};
THREE.ExtrudeGeometry.WorldUVGenerator={generateTopUV:function(a,b,d,e){a=a.vertices;b=a[b];d=a[d];e=a[e];return[new THREE.Vector2(b.x,b.y),new THREE.Vector2(d.x,d.y),new THREE.Vector2(e.x,e.y)]},generateSideWallUV:function(a,b,d,e,f){a=a.vertices;b=a[b];d=a[d];e=a[e];f=a[f];return.01>Math.abs(b.y-d.y)?[new THREE.Vector2(b.x,1-b.z),new THREE.Vector2(d.x,1-d.z),new THREE.Vector2(e.x,1-e.z),new THREE.Vector2(f.x,1-f.z)]:[new THREE.Vector2(b.y,1-b.z),new THREE.Vector2(d.y,1-d.z),new THREE.Vector2(e.y,
1-e.z),new THREE.Vector2(f.y,1-f.z)]}};THREE.ShapeGeometry=function(a,b){THREE.Geometry.call(this);this.type="ShapeGeometry";!1===a instanceof Array&&(a=[a]);this.addShapeList(a,b);this.computeFaceNormals()};THREE.ShapeGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.ShapeGeometry.prototype.constructor=THREE.ShapeGeometry;THREE.ShapeGeometry.prototype.addShapeList=function(a,b){for(var d=0,e=a.length;d<e;d++)this.addShape(a[d],b);return this};
THREE.ShapeGeometry.prototype.addShape=function(a,b){void 0===b&&(b={});var d=b.material,e=void 0===b.UVGenerator?THREE.ExtrudeGeometry.WorldUVGenerator:b.UVGenerator,f,g,h,k=this.vertices.length;f=a.extractPoints(void 0!==b.curveSegments?b.curveSegments:12);var l=f.shape,m=f.holes;if(!THREE.Shape.Utils.isClockWise(l))for(l=l.reverse(),f=0,g=m.length;f<g;f++)h=m[f],THREE.Shape.Utils.isClockWise(h)&&(m[f]=h.reverse());var q=THREE.Shape.Utils.triangulateShape(l,m);f=0;for(g=m.length;f<g;f++)h=m[f],
l=l.concat(h);m=l.length;g=q.length;for(f=0;f<m;f++)h=l[f],this.vertices.push(new THREE.Vector3(h.x,h.y,0));for(f=0;f<g;f++)m=q[f],l=m[0]+k,h=m[1]+k,m=m[2]+k,this.faces.push(new THREE.Face3(l,h,m,null,null,d)),this.faceVertexUvs[0].push(e.generateTopUV(this,l,h,m))};
THREE.LatheGeometry=function(a,b,d,e){THREE.Geometry.call(this);this.type="LatheGeometry";this.parameters={points:a,segments:b,phiStart:d,phiLength:e};b=b||12;d=d||0;e=e||2*Math.PI;for(var f=1/(a.length-1),g=1/b,h=0,k=b;h<=k;h++)for(var l=d+h*g*e,m=Math.cos(l),q=Math.sin(l),l=0,r=a.length;l<r;l++){var p=a[l],v=new THREE.Vector3;v.x=m*p.x-q*p.y;v.y=q*p.x+m*p.y;v.z=p.z;this.vertices.push(v)}d=a.length;h=0;for(k=b;h<k;h++)for(l=0,r=a.length-1;l<r;l++){b=q=l+d*h;e=q+d;var m=q+1+d,q=q+1,p=h*g,v=l*f,t=
p+g,u=v+f;this.faces.push(new THREE.Face3(b,e,q));this.faceVertexUvs[0].push([new THREE.Vector2(p,v),new THREE.Vector2(t,v),new THREE.Vector2(p,u)]);this.faces.push(new THREE.Face3(e,m,q));this.faceVertexUvs[0].push([new THREE.Vector2(t,v),new THREE.Vector2(t,u),new THREE.Vector2(p,u)])}this.mergeVertices();this.computeFaceNormals();this.computeVertexNormals()};THREE.LatheGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.LatheGeometry.prototype.constructor=THREE.LatheGeometry;
THREE.PlaneGeometry=function(a,b,d,e){console.info("THREE.PlaneGeometry: Consider using THREE.PlaneBufferGeometry for lower memory footprint.");THREE.Geometry.call(this);this.type="PlaneGeometry";this.parameters={width:a,height:b,widthSegments:d,heightSegments:e};this.fromBufferGeometry(new THREE.PlaneBufferGeometry(a,b,d,e))};THREE.PlaneGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.PlaneGeometry.prototype.constructor=THREE.PlaneGeometry;
THREE.PlaneBufferGeometry=function(a,b,d,e){THREE.BufferGeometry.call(this);this.type="PlaneBufferGeometry";this.parameters={width:a,height:b,widthSegments:d,heightSegments:e};var f=a/2,g=b/2;d=d||1;e=e||1;var h=d+1,k=e+1,l=a/d,m=b/e;b=new Float32Array(h*k*3);a=new Float32Array(h*k*3);for(var q=new Float32Array(h*k*2),r=0,p=0,v=0;v<k;v++)for(var t=v*m-g,u=0;u<h;u++)b[r]=u*l-f,b[r+1]=-t,a[r+2]=1,q[p]=u/d,q[p+1]=1-v/e,r+=3,p+=2;r=0;f=new (65535<b.length/3?Uint32Array:Uint16Array)(d*e*6);for(v=0;v<e;v++)for(u=
0;u<d;u++)g=u+h*(v+1),k=u+1+h*(v+1),l=u+1+h*v,f[r]=u+h*v,f[r+1]=g,f[r+2]=l,f[r+3]=g,f[r+4]=k,f[r+5]=l,r+=6;this.addAttribute("index",new THREE.BufferAttribute(f,1));this.addAttribute("position",new THREE.BufferAttribute(b,3));this.addAttribute("normal",new THREE.BufferAttribute(a,3));this.addAttribute("uv",new THREE.BufferAttribute(q,2))};THREE.PlaneBufferGeometry.prototype=Object.create(THREE.BufferGeometry.prototype);THREE.PlaneBufferGeometry.prototype.constructor=THREE.PlaneBufferGeometry;
THREE.RingGeometry=function(a,b,d,e,f,g){THREE.Geometry.call(this);this.type="RingGeometry";this.parameters={innerRadius:a,outerRadius:b,thetaSegments:d,phiSegments:e,thetaStart:f,thetaLength:g};a=a||0;b=b||50;f=void 0!==f?f:0;g=void 0!==g?g:2*Math.PI;d=void 0!==d?Math.max(3,d):8;e=void 0!==e?Math.max(1,e):8;var h,k=[],l=a,m=(b-a)/e;for(a=0;a<e+1;a++){for(h=0;h<d+1;h++){var q=new THREE.Vector3,r=f+h/d*g;q.x=l*Math.cos(r);q.y=l*Math.sin(r);this.vertices.push(q);k.push(new THREE.Vector2((q.x/b+1)/2,
(q.y/b+1)/2))}l+=m}b=new THREE.Vector3(0,0,1);for(a=0;a<e;a++)for(f=a*(d+1),h=0;h<d;h++)g=r=h+f,m=r+d+1,q=r+d+2,this.faces.push(new THREE.Face3(g,m,q,[b.clone(),b.clone(),b.clone()])),this.faceVertexUvs[0].push([k[g].clone(),k[m].clone(),k[q].clone()]),g=r,m=r+d+2,q=r+1,this.faces.push(new THREE.Face3(g,m,q,[b.clone(),b.clone(),b.clone()])),this.faceVertexUvs[0].push([k[g].clone(),k[m].clone(),k[q].clone()]);this.computeFaceNormals();this.boundingSphere=new THREE.Sphere(new THREE.Vector3,l)};
THREE.RingGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.RingGeometry.prototype.constructor=THREE.RingGeometry;
THREE.SphereGeometry=function(a,b,d,e,f,g,h){THREE.Geometry.call(this);this.type="SphereGeometry";this.parameters={radius:a,widthSegments:b,heightSegments:d,phiStart:e,phiLength:f,thetaStart:g,thetaLength:h};a=a||50;b=Math.max(3,Math.floor(b)||8);d=Math.max(2,Math.floor(d)||6);e=void 0!==e?e:0;f=void 0!==f?f:2*Math.PI;g=void 0!==g?g:0;h=void 0!==h?h:Math.PI;var k,l,m=[],q=[];for(l=0;l<=d;l++){var r=[],p=[];for(k=0;k<=b;k++){var v=k/b,t=l/d,u=new THREE.Vector3;u.x=-a*Math.cos(e+v*f)*Math.sin(g+t*h);
u.y=a*Math.cos(g+t*h);u.z=a*Math.sin(e+v*f)*Math.sin(g+t*h);this.vertices.push(u);r.push(this.vertices.length-1);p.push(new THREE.Vector2(v,1-t))}m.push(r);q.push(p)}for(l=0;l<d;l++)for(k=0;k<b;k++){e=m[l][k+1];f=m[l][k];g=m[l+1][k];h=m[l+1][k+1];var r=this.vertices[e].clone().normalize(),p=this.vertices[f].clone().normalize(),v=this.vertices[g].clone().normalize(),t=this.vertices[h].clone().normalize(),u=q[l][k+1].clone(),w=q[l][k].clone(),x=q[l+1][k].clone(),z=q[l+1][k+1].clone();Math.abs(this.vertices[e].y)===
a?(u.x=(u.x+w.x)/2,this.faces.push(new THREE.Face3(e,g,h,[r,v,t])),this.faceVertexUvs[0].push([u,x,z])):Math.abs(this.vertices[g].y)===a?(x.x=(x.x+z.x)/2,this.faces.push(new THREE.Face3(e,f,g,[r,p,v])),this.faceVertexUvs[0].push([u,w,x])):(this.faces.push(new THREE.Face3(e,f,h,[r,p,t])),this.faceVertexUvs[0].push([u,w,z]),this.faces.push(new THREE.Face3(f,g,h,[p.clone(),v,t.clone()])),this.faceVertexUvs[0].push([w.clone(),x,z.clone()]))}this.computeFaceNormals();this.boundingSphere=new THREE.Sphere(new THREE.Vector3,
a)};THREE.SphereGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.SphereGeometry.prototype.constructor=THREE.SphereGeometry;THREE.TextGeometry=function(a,b){b=b||{};var d=THREE.FontUtils.generateShapes(a,b);b.amount=void 0!==b.height?b.height:50;void 0===b.bevelThickness&&(b.bevelThickness=10);void 0===b.bevelSize&&(b.bevelSize=8);void 0===b.bevelEnabled&&(b.bevelEnabled=!1);THREE.ExtrudeGeometry.call(this,d,b);this.type="TextGeometry"};THREE.TextGeometry.prototype=Object.create(THREE.ExtrudeGeometry.prototype);
THREE.TextGeometry.prototype.constructor=THREE.TextGeometry;
THREE.TorusGeometry=function(a,b,d,e,f){THREE.Geometry.call(this);this.type="TorusGeometry";this.parameters={radius:a,tube:b,radialSegments:d,tubularSegments:e,arc:f};a=a||100;b=b||40;d=d||8;e=e||6;f=f||2*Math.PI;for(var g=new THREE.Vector3,h=[],k=[],l=0;l<=d;l++)for(var m=0;m<=e;m++){var q=m/e*f,r=l/d*Math.PI*2;g.x=a*Math.cos(q);g.y=a*Math.sin(q);var p=new THREE.Vector3;p.x=(a+b*Math.cos(r))*Math.cos(q);p.y=(a+b*Math.cos(r))*Math.sin(q);p.z=b*Math.sin(r);this.vertices.push(p);h.push(new THREE.Vector2(m/
e,l/d));k.push(p.clone().sub(g).normalize())}for(l=1;l<=d;l++)for(m=1;m<=e;m++)a=(e+1)*l+m-1,b=(e+1)*(l-1)+m-1,f=(e+1)*(l-1)+m,g=(e+1)*l+m,q=new THREE.Face3(a,b,g,[k[a].clone(),k[b].clone(),k[g].clone()]),this.faces.push(q),this.faceVertexUvs[0].push([h[a].clone(),h[b].clone(),h[g].clone()]),q=new THREE.Face3(b,f,g,[k[b].clone(),k[f].clone(),k[g].clone()]),this.faces.push(q),this.faceVertexUvs[0].push([h[b].clone(),h[f].clone(),h[g].clone()]);this.computeFaceNormals()};
THREE.TorusGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.TorusGeometry.prototype.constructor=THREE.TorusGeometry;
THREE.TorusKnotGeometry=function(a,b,d,e,f,g,h){function k(a,b,d,e,f){var g=Math.cos(a),h=Math.sin(a);a*=b/d;b=Math.cos(a);g*=e*(2+b)*.5;h=e*(2+b)*h*.5;e=f*e*Math.sin(a)*.5;return new THREE.Vector3(g,h,e)}THREE.Geometry.call(this);this.type="TorusKnotGeometry";this.parameters={radius:a,tube:b,radialSegments:d,tubularSegments:e,p:f,q:g,heightScale:h};a=a||100;b=b||40;d=d||64;e=e||8;f=f||2;g=g||3;h=h||1;for(var l=Array(d),m=new THREE.Vector3,q=new THREE.Vector3,r=new THREE.Vector3,p=0;p<d;++p){l[p]=
Array(e);var v=p/d*2*f*Math.PI,t=k(v,g,f,a,h),v=k(v+.01,g,f,a,h);m.subVectors(v,t);q.addVectors(v,t);r.crossVectors(m,q);q.crossVectors(r,m);r.normalize();q.normalize();for(v=0;v<e;++v){var u=v/e*2*Math.PI,w=-b*Math.cos(u),u=b*Math.sin(u),x=new THREE.Vector3;x.x=t.x+w*q.x+u*r.x;x.y=t.y+w*q.y+u*r.y;x.z=t.z+w*q.z+u*r.z;l[p][v]=this.vertices.push(x)-1}}for(p=0;p<d;++p)for(v=0;v<e;++v)f=(p+1)%d,g=(v+1)%e,a=l[p][v],b=l[f][v],f=l[f][g],g=l[p][g],h=new THREE.Vector2(p/d,v/e),m=new THREE.Vector2((p+1)/d,
v/e),q=new THREE.Vector2((p+1)/d,(v+1)/e),r=new THREE.Vector2(p/d,(v+1)/e),this.faces.push(new THREE.Face3(a,b,g)),this.faceVertexUvs[0].push([h,m,r]),this.faces.push(new THREE.Face3(b,f,g)),this.faceVertexUvs[0].push([m.clone(),q,r.clone()]);this.computeFaceNormals();this.computeVertexNormals()};THREE.TorusKnotGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.TorusKnotGeometry.prototype.constructor=THREE.TorusKnotGeometry;
THREE.TubeGeometry=function(a,b,d,e,f,g){THREE.Geometry.call(this);this.type="TubeGeometry";this.parameters={path:a,segments:b,radius:d,radialSegments:e,closed:f};b=b||64;d=d||1;e=e||8;f=f||!1;g=g||THREE.TubeGeometry.NoTaper;var h=[],k,l,m=b+1,q,r,p,v,t,u=new THREE.Vector3,w,x,z;w=new THREE.TubeGeometry.FrenetFrames(a,b,f);x=w.normals;z=w.binormals;this.tangents=w.tangents;this.normals=x;this.binormals=z;for(w=0;w<m;w++)for(h[w]=[],q=w/(m-1),t=a.getPointAt(q),k=x[w],l=z[w],p=d*g(q),q=0;q<e;q++)r=
q/e*2*Math.PI,v=-p*Math.cos(r),r=p*Math.sin(r),u.copy(t),u.x+=v*k.x+r*l.x,u.y+=v*k.y+r*l.y,u.z+=v*k.z+r*l.z,h[w][q]=this.vertices.push(new THREE.Vector3(u.x,u.y,u.z))-1;for(w=0;w<b;w++)for(q=0;q<e;q++)g=f?(w+1)%b:w+1,m=(q+1)%e,a=h[w][q],d=h[g][q],g=h[g][m],m=h[w][m],u=new THREE.Vector2(w/b,q/e),x=new THREE.Vector2((w+1)/b,q/e),z=new THREE.Vector2((w+1)/b,(q+1)/e),k=new THREE.Vector2(w/b,(q+1)/e),this.faces.push(new THREE.Face3(a,d,m)),this.faceVertexUvs[0].push([u,x,k]),this.faces.push(new THREE.Face3(d,
g,m)),this.faceVertexUvs[0].push([x.clone(),z,k.clone()]);this.computeFaceNormals();this.computeVertexNormals()};THREE.TubeGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.TubeGeometry.prototype.constructor=THREE.TubeGeometry;THREE.TubeGeometry.NoTaper=function(a){return 1};THREE.TubeGeometry.SinusoidalTaper=function(a){return Math.sin(Math.PI*a)};
THREE.TubeGeometry.FrenetFrames=function(a,b,d){var e=new THREE.Vector3,f=[],g=[],h=[],k=new THREE.Vector3,l=new THREE.Matrix4;b+=1;var m,q,r;this.tangents=f;this.normals=g;this.binormals=h;for(m=0;m<b;m++)q=m/(b-1),f[m]=a.getTangentAt(q),f[m].normalize();g[0]=new THREE.Vector3;h[0]=new THREE.Vector3;a=Number.MAX_VALUE;m=Math.abs(f[0].x);q=Math.abs(f[0].y);r=Math.abs(f[0].z);m<=a&&(a=m,e.set(1,0,0));q<=a&&(a=q,e.set(0,1,0));r<=a&&e.set(0,0,1);k.crossVectors(f[0],e).normalize();g[0].crossVectors(f[0],
k);h[0].crossVectors(f[0],g[0]);for(m=1;m<b;m++)g[m]=g[m-1].clone(),h[m]=h[m-1].clone(),k.crossVectors(f[m-1],f[m]),1E-4<k.length()&&(k.normalize(),e=Math.acos(THREE.Math.clamp(f[m-1].dot(f[m]),-1,1)),g[m].applyMatrix4(l.makeRotationAxis(k,e))),h[m].crossVectors(f[m],g[m]);if(d)for(e=Math.acos(THREE.Math.clamp(g[0].dot(g[b-1]),-1,1)),e/=b-1,0<f[0].dot(k.crossVectors(g[0],g[b-1]))&&(e=-e),m=1;m<b;m++)g[m].applyMatrix4(l.makeRotationAxis(f[m],e*m)),h[m].crossVectors(f[m],g[m])};
THREE.PolyhedronGeometry=function(a,b,d,e){function f(a){var b=a.normalize().clone();b.index=l.vertices.push(b)-1;var d=Math.atan2(a.z,-a.x)/2/Math.PI+.5;a=Math.atan2(-a.y,Math.sqrt(a.x*a.x+a.z*a.z))/Math.PI+.5;b.uv=new THREE.Vector2(d,1-a);return b}function g(a,b,d){var e=new THREE.Face3(a.index,b.index,d.index,[a.clone(),b.clone(),d.clone()]);l.faces.push(e);w.copy(a).add(b).add(d).divideScalar(3);e=Math.atan2(w.z,-w.x);l.faceVertexUvs[0].push([k(a.uv,a,e),k(b.uv,b,e),k(d.uv,d,e)])}function h(a,
b){for(var d=Math.pow(2,b),e=f(l.vertices[a.a]),h=f(l.vertices[a.b]),k=f(l.vertices[a.c]),m=[],p=0;p<=d;p++){m[p]=[];for(var q=f(e.clone().lerp(k,p/d)),r=f(h.clone().lerp(k,p/d)),u=d-p,t=0;t<=u;t++)m[p][t]=0==t&&p==d?q:f(q.clone().lerp(r,t/u))}for(p=0;p<d;p++)for(t=0;t<2*(d-p)-1;t++)e=Math.floor(t/2),0==t%2?g(m[p][e+1],m[p+1][e],m[p][e]):g(m[p][e+1],m[p+1][e+1],m[p+1][e])}function k(a,b,d){0>d&&1===a.x&&(a=new THREE.Vector2(a.x-1,a.y));0===b.x&&0===b.z&&(a=new THREE.Vector2(d/2/Math.PI+.5,a.y));return a.clone()}
THREE.Geometry.call(this);this.type="PolyhedronGeometry";this.parameters={vertices:a,indices:b,radius:d,detail:e};d=d||1;e=e||0;for(var l=this,m=0,q=a.length;m<q;m+=3)f(new THREE.Vector3(a[m],a[m+1],a[m+2]));a=this.vertices;for(var r=[],p=m=0,q=b.length;m<q;m+=3,p++){var v=a[b[m]],t=a[b[m+1]],u=a[b[m+2]];r[p]=new THREE.Face3(v.index,t.index,u.index,[v.clone(),t.clone(),u.clone()])}for(var w=new THREE.Vector3,m=0,q=r.length;m<q;m++)h(r[m],e);m=0;for(q=this.faceVertexUvs[0].length;m<q;m++)b=this.faceVertexUvs[0][m],
e=b[0].x,a=b[1].x,r=b[2].x,p=Math.max(e,Math.max(a,r)),v=Math.min(e,Math.min(a,r)),.9<p&&.1>v&&(.2>e&&(b[0].x+=1),.2>a&&(b[1].x+=1),.2>r&&(b[2].x+=1));m=0;for(q=this.vertices.length;m<q;m++)this.vertices[m].multiplyScalar(d);this.mergeVertices();this.computeFaceNormals();this.boundingSphere=new THREE.Sphere(new THREE.Vector3,d)};THREE.PolyhedronGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.PolyhedronGeometry.prototype.constructor=THREE.PolyhedronGeometry;
THREE.DodecahedronGeometry=function(a,b){this.parameters={radius:a,detail:b};var d=(1+Math.sqrt(5))/2,e=1/d;THREE.PolyhedronGeometry.call(this,[-1,-1,-1,-1,-1,1,-1,1,-1,-1,1,1,1,-1,-1,1,-1,1,1,1,-1,1,1,1,0,-e,-d,0,-e,d,0,e,-d,0,e,d,-e,-d,0,-e,d,0,e,-d,0,e,d,0,-d,0,-e,d,0,-e,-d,0,e,d,0,e],[3,11,7,3,7,15,3,15,13,7,19,17,7,17,6,7,6,15,17,4,8,17,8,10,17,10,6,8,0,16,8,16,2,8,2,10,0,12,1,0,1,18,0,18,16,6,10,2,6,2,13,6,13,15,2,16,18,2,18,3,2,3,13,18,1,9,18,9,11,18,11,3,4,14,12,4,12,0,4,0,8,11,9,5,11,5,19,
11,19,7,19,5,14,19,14,4,19,4,17,1,12,14,1,14,5,1,5,9],a,b)};THREE.DodecahedronGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.DodecahedronGeometry.prototype.constructor=THREE.DodecahedronGeometry;
THREE.IcosahedronGeometry=function(a,b){var d=(1+Math.sqrt(5))/2;THREE.PolyhedronGeometry.call(this,[-1,d,0,1,d,0,-1,-d,0,1,-d,0,0,-1,d,0,1,d,0,-1,-d,0,1,-d,d,0,-1,d,0,1,-d,0,-1,-d,0,1],[0,11,5,0,5,1,0,1,7,0,7,10,0,10,11,1,5,9,5,11,4,11,10,2,10,7,6,7,1,8,3,9,4,3,4,2,3,2,6,3,6,8,3,8,9,4,9,5,2,4,11,6,2,10,8,6,7,9,8,1],a,b);this.type="IcosahedronGeometry";this.parameters={radius:a,detail:b}};THREE.IcosahedronGeometry.prototype=Object.create(THREE.Geometry.prototype);
THREE.IcosahedronGeometry.prototype.constructor=THREE.IcosahedronGeometry;THREE.OctahedronGeometry=function(a,b){this.parameters={radius:a,detail:b};THREE.PolyhedronGeometry.call(this,[1,0,0,-1,0,0,0,1,0,0,-1,0,0,0,1,0,0,-1],[0,2,4,0,4,3,0,3,5,0,5,2,1,2,5,1,5,3,1,3,4,1,4,2],a,b);this.type="OctahedronGeometry";this.parameters={radius:a,detail:b}};THREE.OctahedronGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.OctahedronGeometry.prototype.constructor=THREE.OctahedronGeometry;
THREE.TetrahedronGeometry=function(a,b){THREE.PolyhedronGeometry.call(this,[1,1,1,-1,-1,1,-1,1,-1,1,-1,-1],[2,1,0,0,3,2,1,3,0,2,3,1],a,b);this.type="TetrahedronGeometry";this.parameters={radius:a,detail:b}};THREE.TetrahedronGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.TetrahedronGeometry.prototype.constructor=THREE.TetrahedronGeometry;
THREE.ParametricGeometry=function(a,b,d){THREE.Geometry.call(this);this.type="ParametricGeometry";this.parameters={func:a,slices:b,stacks:d};var e=this.vertices,f=this.faces,g=this.faceVertexUvs[0],h,k,l,m,q=b+1;for(h=0;h<=d;h++)for(m=h/d,k=0;k<=b;k++)l=k/b,l=a(l,m),e.push(l);var r,p,v,t;for(h=0;h<d;h++)for(k=0;k<b;k++)a=h*q+k,e=h*q+k+1,m=(h+1)*q+k+1,l=(h+1)*q+k,r=new THREE.Vector2(k/b,h/d),p=new THREE.Vector2((k+1)/b,h/d),v=new THREE.Vector2((k+1)/b,(h+1)/d),t=new THREE.Vector2(k/b,(h+1)/d),f.push(new THREE.Face3(a,
e,l)),g.push([r,p,t]),f.push(new THREE.Face3(e,m,l)),g.push([p.clone(),v,t.clone()]);this.computeFaceNormals();this.computeVertexNormals()};THREE.ParametricGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.ParametricGeometry.prototype.constructor=THREE.ParametricGeometry;
THREE.AxisHelper=function(a){a=a||1;var b=new Float32Array([0,0,0,a,0,0,0,0,0,0,a,0,0,0,0,0,0,a]),d=new Float32Array([1,0,0,1,.6,0,0,1,0,.6,1,0,0,0,1,0,.6,1]);a=new THREE.BufferGeometry;a.addAttribute("position",new THREE.BufferAttribute(b,3));a.addAttribute("color",new THREE.BufferAttribute(d,3));b=new THREE.LineBasicMaterial({vertexColors:THREE.VertexColors});THREE.Line.call(this,a,b,THREE.LinePieces)};THREE.AxisHelper.prototype=Object.create(THREE.Line.prototype);
THREE.AxisHelper.prototype.constructor=THREE.AxisHelper;
THREE.ArrowHelper=function(){var a=new THREE.Geometry;a.vertices.push(new THREE.Vector3(0,0,0),new THREE.Vector3(0,1,0));var b=new THREE.CylinderGeometry(0,.5,1,5,1);b.applyMatrix((new THREE.Matrix4).makeTranslation(0,-.5,0));return function(d,e,f,g,h,k){THREE.Object3D.call(this);void 0===g&&(g=16776960);void 0===f&&(f=1);void 0===h&&(h=.2*f);void 0===k&&(k=.2*h);this.position.copy(e);this.line=new THREE.Line(a,new THREE.LineBasicMaterial({color:g}));this.line.matrixAutoUpdate=!1;this.add(this.line);
this.cone=new THREE.Mesh(b,new THREE.MeshBasicMaterial({color:g}));this.cone.matrixAutoUpdate=!1;this.add(this.cone);this.setDirection(d);this.setLength(f,h,k)}}();THREE.ArrowHelper.prototype=Object.create(THREE.Object3D.prototype);THREE.ArrowHelper.prototype.constructor=THREE.ArrowHelper;
THREE.ArrowHelper.prototype.setDirection=function(){var a=new THREE.Vector3,b;return function(d){.99999<d.y?this.quaternion.set(0,0,0,1):-.99999>d.y?this.quaternion.set(1,0,0,0):(a.set(d.z,0,-d.x).normalize(),b=Math.acos(d.y),this.quaternion.setFromAxisAngle(a,b))}}();THREE.ArrowHelper.prototype.setLength=function(a,b,d){void 0===b&&(b=.2*a);void 0===d&&(d=.2*b);this.line.scale.set(1,a-b,1);this.line.updateMatrix();this.cone.scale.set(d,b,d);this.cone.position.y=a;this.cone.updateMatrix()};
THREE.ArrowHelper.prototype.setColor=function(a){this.line.material.color.set(a);this.cone.material.color.set(a)};THREE.BoxHelper=function(a){var b=new THREE.BufferGeometry;b.addAttribute("position",new THREE.BufferAttribute(new Float32Array(72),3));THREE.Line.call(this,b,new THREE.LineBasicMaterial({color:16776960}),THREE.LinePieces);void 0!==a&&this.update(a)};THREE.BoxHelper.prototype=Object.create(THREE.Line.prototype);THREE.BoxHelper.prototype.constructor=THREE.BoxHelper;
THREE.BoxHelper.prototype.update=function(a){var b=a.geometry;null===b.boundingBox&&b.computeBoundingBox();var d=b.boundingBox.min,b=b.boundingBox.max,e=this.geometry.attributes.position.array;e[0]=b.x;e[1]=b.y;e[2]=b.z;e[3]=d.x;e[4]=b.y;e[5]=b.z;e[6]=d.x;e[7]=b.y;e[8]=b.z;e[9]=d.x;e[10]=d.y;e[11]=b.z;e[12]=d.x;e[13]=d.y;e[14]=b.z;e[15]=b.x;e[16]=d.y;e[17]=b.z;e[18]=b.x;e[19]=d.y;e[20]=b.z;e[21]=b.x;e[22]=b.y;e[23]=b.z;e[24]=b.x;e[25]=b.y;e[26]=d.z;e[27]=d.x;e[28]=b.y;e[29]=d.z;e[30]=d.x;e[31]=b.y;
e[32]=d.z;e[33]=d.x;e[34]=d.y;e[35]=d.z;e[36]=d.x;e[37]=d.y;e[38]=d.z;e[39]=b.x;e[40]=d.y;e[41]=d.z;e[42]=b.x;e[43]=d.y;e[44]=d.z;e[45]=b.x;e[46]=b.y;e[47]=d.z;e[48]=b.x;e[49]=b.y;e[50]=b.z;e[51]=b.x;e[52]=b.y;e[53]=d.z;e[54]=d.x;e[55]=b.y;e[56]=b.z;e[57]=d.x;e[58]=b.y;e[59]=d.z;e[60]=d.x;e[61]=d.y;e[62]=b.z;e[63]=d.x;e[64]=d.y;e[65]=d.z;e[66]=b.x;e[67]=d.y;e[68]=b.z;e[69]=b.x;e[70]=d.y;e[71]=d.z;this.geometry.attributes.position.needsUpdate=!0;this.geometry.computeBoundingSphere();this.matrix=a.matrixWorld;
this.matrixAutoUpdate=!1};THREE.BoundingBoxHelper=function(a,b){var d=void 0!==b?b:8947848;this.object=a;this.box=new THREE.Box3;THREE.Mesh.call(this,new THREE.BoxGeometry(1,1,1),new THREE.MeshBasicMaterial({color:d,wireframe:!0}))};THREE.BoundingBoxHelper.prototype=Object.create(THREE.Mesh.prototype);THREE.BoundingBoxHelper.prototype.constructor=THREE.BoundingBoxHelper;THREE.BoundingBoxHelper.prototype.update=function(){this.box.setFromObject(this.object);this.box.size(this.scale);this.box.center(this.position)};
THREE.CameraHelper=function(a){function b(a,b,e){d(a,e);d(b,e)}function d(a,b){e.vertices.push(new THREE.Vector3);e.colors.push(new THREE.Color(b));void 0===g[a]&&(g[a]=[]);g[a].push(e.vertices.length-1)}var e=new THREE.Geometry,f=new THREE.LineBasicMaterial({color:16777215,vertexColors:THREE.FaceColors}),g={};b("n1","n2",16755200);b("n2","n4",16755200);b("n4","n3",16755200);b("n3","n1",16755200);b("f1","f2",16755200);b("f2","f4",16755200);b("f4","f3",16755200);b("f3","f1",16755200);b("n1","f1",16755200);
b("n2","f2",16755200);b("n3","f3",16755200);b("n4","f4",16755200);b("p","n1",16711680);b("p","n2",16711680);b("p","n3",16711680);b("p","n4",16711680);b("u1","u2",43775);b("u2","u3",43775);b("u3","u1",43775);b("c","t",16777215);b("p","c",3355443);b("cn1","cn2",3355443);b("cn3","cn4",3355443);b("cf1","cf2",3355443);b("cf3","cf4",3355443);THREE.Line.call(this,e,f,THREE.LinePieces);this.camera=a;this.matrix=a.matrixWorld;this.matrixAutoUpdate=!1;this.pointMap=g;this.update()};
THREE.CameraHelper.prototype=Object.create(THREE.Line.prototype);THREE.CameraHelper.prototype.constructor=THREE.CameraHelper;
THREE.CameraHelper.prototype.update=function(){var a,b,d=new THREE.Vector3,e=new THREE.Camera,f=function(f,h,k,l){d.set(h,k,l).unproject(e);f=b[f];if(void 0!==f)for(h=0,k=f.length;h<k;h++)a.vertices[f[h]].copy(d)};return function(){a=this.geometry;b=this.pointMap;e.projectionMatrix.copy(this.camera.projectionMatrix);f("c",0,0,-1);f("t",0,0,1);f("n1",-1,-1,-1);f("n2",1,-1,-1);f("n3",-1,1,-1);f("n4",1,1,-1);f("f1",-1,-1,1);f("f2",1,-1,1);f("f3",-1,1,1);f("f4",1,1,1);f("u1",.7,1.1,-1);f("u2",-.7,1.1,
-1);f("u3",0,2,-1);f("cf1",-1,0,1);f("cf2",1,0,1);f("cf3",0,-1,1);f("cf4",0,1,1);f("cn1",-1,0,-1);f("cn2",1,0,-1);f("cn3",0,-1,-1);f("cn4",0,1,-1);a.verticesNeedUpdate=!0}}();
THREE.DirectionalLightHelper=function(a,b){THREE.Object3D.call(this);this.light=a;this.light.updateMatrixWorld();this.matrix=a.matrixWorld;this.matrixAutoUpdate=!1;b=b||1;var d=new THREE.Geometry;d.vertices.push(new THREE.Vector3(-b,b,0),new THREE.Vector3(b,b,0),new THREE.Vector3(b,-b,0),new THREE.Vector3(-b,-b,0),new THREE.Vector3(-b,b,0));var e=new THREE.LineBasicMaterial({fog:!1});e.color.copy(this.light.color).multiplyScalar(this.light.intensity);this.lightPlane=new THREE.Line(d,e);this.add(this.lightPlane);
d=new THREE.Geometry;d.vertices.push(new THREE.Vector3,new THREE.Vector3);e=new THREE.LineBasicMaterial({fog:!1});e.color.copy(this.light.color).multiplyScalar(this.light.intensity);this.targetLine=new THREE.Line(d,e);this.add(this.targetLine);this.update()};THREE.DirectionalLightHelper.prototype=Object.create(THREE.Object3D.prototype);THREE.DirectionalLightHelper.prototype.constructor=THREE.DirectionalLightHelper;
THREE.DirectionalLightHelper.prototype.dispose=function(){this.lightPlane.geometry.dispose();this.lightPlane.material.dispose();this.targetLine.geometry.dispose();this.targetLine.material.dispose()};
THREE.DirectionalLightHelper.prototype.update=function(){var a=new THREE.Vector3,b=new THREE.Vector3,d=new THREE.Vector3;return function(){a.setFromMatrixPosition(this.light.matrixWorld);b.setFromMatrixPosition(this.light.target.matrixWorld);d.subVectors(b,a);this.lightPlane.lookAt(d);this.lightPlane.material.color.copy(this.light.color).multiplyScalar(this.light.intensity);this.targetLine.geometry.vertices[1].copy(d);this.targetLine.geometry.verticesNeedUpdate=!0;this.targetLine.material.color.copy(this.lightPlane.material.color)}}();
THREE.EdgesHelper=function(a,b,d){b=void 0!==b?b:16777215;d=Math.cos(THREE.Math.degToRad(void 0!==d?d:1));var e=[0,0],f={},g=function(a,b){return a-b},h=["a","b","c"],k=new THREE.BufferGeometry,l;a.geometry instanceof THREE.BufferGeometry?(l=new THREE.Geometry,l.fromBufferGeometry(a.geometry)):l=a.geometry.clone();l.mergeVertices();l.computeFaceNormals();var m=l.vertices;l=l.faces;for(var q=0,r=0,p=l.length;r<p;r++)for(var v=l[r],t=0;3>t;t++){e[0]=v[h[t]];e[1]=v[h[(t+1)%3]];e.sort(g);var u=e.toString();
void 0===f[u]?(f[u]={vert1:e[0],vert2:e[1],face1:r,face2:void 0},q++):f[u].face2=r}e=new Float32Array(6*q);g=0;for(u in f)if(h=f[u],void 0===h.face2||l[h.face1].normal.dot(l[h.face2].normal)<=d)q=m[h.vert1],e[g++]=q.x,e[g++]=q.y,e[g++]=q.z,q=m[h.vert2],e[g++]=q.x,e[g++]=q.y,e[g++]=q.z;k.addAttribute("position",new THREE.BufferAttribute(e,3));THREE.Line.call(this,k,new THREE.LineBasicMaterial({color:b}),THREE.LinePieces);this.matrix=a.matrixWorld;this.matrixAutoUpdate=!1};
THREE.EdgesHelper.prototype=Object.create(THREE.Line.prototype);THREE.EdgesHelper.prototype.constructor=THREE.EdgesHelper;
THREE.FaceNormalsHelper=function(a,b,d,e){this.object=a;this.size=void 0!==b?b:1;a=void 0!==d?d:16776960;e=void 0!==e?e:1;b=new THREE.Geometry;d=0;for(var f=this.object.geometry.faces.length;d<f;d++)b.vertices.push(new THREE.Vector3,new THREE.Vector3);THREE.Line.call(this,b,new THREE.LineBasicMaterial({color:a,linewidth:e}),THREE.LinePieces);this.matrixAutoUpdate=!1;this.normalMatrix=new THREE.Matrix3;this.update()};THREE.FaceNormalsHelper.prototype=Object.create(THREE.Line.prototype);
THREE.FaceNormalsHelper.prototype.constructor=THREE.FaceNormalsHelper;
THREE.FaceNormalsHelper.prototype.update=function(){var a=this.geometry.vertices,b=this.object,d=b.geometry.vertices,e=b.geometry.faces,f=b.matrixWorld;b.updateMatrixWorld(!0);this.normalMatrix.getNormalMatrix(f);for(var g=b=0,h=e.length;b<h;b++,g+=2){var k=e[b];a[g].copy(d[k.a]).add(d[k.b]).add(d[k.c]).divideScalar(3).applyMatrix4(f);a[g+1].copy(k.normal).applyMatrix3(this.normalMatrix).normalize().multiplyScalar(this.size).add(a[g])}this.geometry.verticesNeedUpdate=!0;return this};
THREE.GridHelper=function(a,b){var d=new THREE.Geometry,e=new THREE.LineBasicMaterial({vertexColors:THREE.VertexColors});this.color1=new THREE.Color(4473924);this.color2=new THREE.Color(8947848);for(var f=-a;f<=a;f+=b){d.vertices.push(new THREE.Vector3(-a,0,f),new THREE.Vector3(a,0,f),new THREE.Vector3(f,0,-a),new THREE.Vector3(f,0,a));var g=0===f?this.color1:this.color2;d.colors.push(g,g,g,g)}THREE.Line.call(this,d,e,THREE.LinePieces)};THREE.GridHelper.prototype=Object.create(THREE.Line.prototype);
THREE.GridHelper.prototype.constructor=THREE.GridHelper;THREE.GridHelper.prototype.setColors=function(a,b){this.color1.set(a);this.color2.set(b);this.geometry.colorsNeedUpdate=!0};
THREE.HemisphereLightHelper=function(a,b){THREE.Object3D.call(this);this.light=a;this.light.updateMatrixWorld();this.matrix=a.matrixWorld;this.matrixAutoUpdate=!1;this.colors=[new THREE.Color,new THREE.Color];var d=new THREE.SphereGeometry(b,4,2);d.applyMatrix((new THREE.Matrix4).makeRotationX(-Math.PI/2));for(var e=0;8>e;e++)d.faces[e].color=this.colors[4>e?0:1];e=new THREE.MeshBasicMaterial({vertexColors:THREE.FaceColors,wireframe:!0});this.lightSphere=new THREE.Mesh(d,e);this.add(this.lightSphere);
this.update()};THREE.HemisphereLightHelper.prototype=Object.create(THREE.Object3D.prototype);THREE.HemisphereLightHelper.prototype.constructor=THREE.HemisphereLightHelper;THREE.HemisphereLightHelper.prototype.dispose=function(){this.lightSphere.geometry.dispose();this.lightSphere.material.dispose()};
THREE.HemisphereLightHelper.prototype.update=function(){var a=new THREE.Vector3;return function(){this.colors[0].copy(this.light.color).multiplyScalar(this.light.intensity);this.colors[1].copy(this.light.groundColor).multiplyScalar(this.light.intensity);this.lightSphere.lookAt(a.setFromMatrixPosition(this.light.matrixWorld).negate());this.lightSphere.geometry.colorsNeedUpdate=!0}}();
THREE.PointLightHelper=function(a,b){this.light=a;this.light.updateMatrixWorld();var d=new THREE.SphereGeometry(b,4,2),e=new THREE.MeshBasicMaterial({wireframe:!0,fog:!1});e.color.copy(this.light.color).multiplyScalar(this.light.intensity);THREE.Mesh.call(this,d,e);this.matrix=this.light.matrixWorld;this.matrixAutoUpdate=!1};THREE.PointLightHelper.prototype=Object.create(THREE.Mesh.prototype);THREE.PointLightHelper.prototype.constructor=THREE.PointLightHelper;
THREE.PointLightHelper.prototype.dispose=function(){this.geometry.dispose();this.material.dispose()};THREE.PointLightHelper.prototype.update=function(){this.material.color.copy(this.light.color).multiplyScalar(this.light.intensity)};
THREE.SkeletonHelper=function(a){this.bones=this.getBoneList(a);for(var b=new THREE.Geometry,d=0;d<this.bones.length;d++)this.bones[d].parent instanceof THREE.Bone&&(b.vertices.push(new THREE.Vector3),b.vertices.push(new THREE.Vector3),b.colors.push(new THREE.Color(0,0,1)),b.colors.push(new THREE.Color(0,1,0)));d=new THREE.LineBasicMaterial({vertexColors:THREE.VertexColors,depthTest:!1,depthWrite:!1,transparent:!0});THREE.Line.call(this,b,d,THREE.LinePieces);this.root=a;this.matrix=a.matrixWorld;
this.matrixAutoUpdate=!1;this.update()};THREE.SkeletonHelper.prototype=Object.create(THREE.Line.prototype);THREE.SkeletonHelper.prototype.constructor=THREE.SkeletonHelper;THREE.SkeletonHelper.prototype.getBoneList=function(a){var b=[];a instanceof THREE.Bone&&b.push(a);for(var d=0;d<a.children.length;d++)b.push.apply(b,this.getBoneList(a.children[d]));return b};
THREE.SkeletonHelper.prototype.update=function(){for(var a=this.geometry,b=(new THREE.Matrix4).getInverse(this.root.matrixWorld),d=new THREE.Matrix4,e=0,f=0;f<this.bones.length;f++){var g=this.bones[f];g.parent instanceof THREE.Bone&&(d.multiplyMatrices(b,g.matrixWorld),a.vertices[e].setFromMatrixPosition(d),d.multiplyMatrices(b,g.parent.matrixWorld),a.vertices[e+1].setFromMatrixPosition(d),e+=2)}a.verticesNeedUpdate=!0;a.computeBoundingSphere()};
THREE.SpotLightHelper=function(a){THREE.Object3D.call(this);this.light=a;this.light.updateMatrixWorld();this.matrix=a.matrixWorld;this.matrixAutoUpdate=!1;a=new THREE.CylinderGeometry(0,1,1,8,1,!0);a.applyMatrix((new THREE.Matrix4).makeTranslation(0,-.5,0));a.applyMatrix((new THREE.Matrix4).makeRotationX(-Math.PI/2));var b=new THREE.MeshBasicMaterial({wireframe:!0,fog:!1});this.cone=new THREE.Mesh(a,b);this.add(this.cone);this.update()};THREE.SpotLightHelper.prototype=Object.create(THREE.Object3D.prototype);
THREE.SpotLightHelper.prototype.constructor=THREE.SpotLightHelper;THREE.SpotLightHelper.prototype.dispose=function(){this.cone.geometry.dispose();this.cone.material.dispose()};
THREE.SpotLightHelper.prototype.update=function(){var a=new THREE.Vector3,b=new THREE.Vector3;return function(){var d=this.light.distance?this.light.distance:1E4,e=d*Math.tan(this.light.angle);this.cone.scale.set(e,e,d);a.setFromMatrixPosition(this.light.matrixWorld);b.setFromMatrixPosition(this.light.target.matrixWorld);this.cone.lookAt(b.sub(a));this.cone.material.color.copy(this.light.color).multiplyScalar(this.light.intensity)}}();
THREE.VertexNormalsHelper=function(a,b,d,e){this.object=a;this.size=void 0!==b?b:1;b=void 0!==d?d:16711680;e=void 0!==e?e:1;d=new THREE.Geometry;a=a.geometry.faces;for(var f=0,g=a.length;f<g;f++)for(var h=0,k=a[f].vertexNormals.length;h<k;h++)d.vertices.push(new THREE.Vector3,new THREE.Vector3);THREE.Line.call(this,d,new THREE.LineBasicMaterial({color:b,linewidth:e}),THREE.LinePieces);this.matrixAutoUpdate=!1;this.normalMatrix=new THREE.Matrix3;this.update()};THREE.VertexNormalsHelper.prototype=Object.create(THREE.Line.prototype);
THREE.VertexNormalsHelper.prototype.constructor=THREE.VertexNormalsHelper;
THREE.VertexNormalsHelper.prototype.update=function(a){var b=new THREE.Vector3;return function(a){a=["a","b","c","d"];this.object.updateMatrixWorld(!0);this.normalMatrix.getNormalMatrix(this.object.matrixWorld);for(var e=this.geometry.vertices,f=this.object.geometry.vertices,g=this.object.geometry.faces,h=this.object.matrixWorld,k=0,l=0,m=g.length;l<m;l++)for(var q=g[l],r=0,p=q.vertexNormals.length;r<p;r++){var v=q.vertexNormals[r];e[k].copy(f[q[a[r]]]).applyMatrix4(h);b.copy(v).applyMatrix3(this.normalMatrix).normalize().multiplyScalar(this.size);
b.add(e[k]);k+=1;e[k].copy(b);k+=1}this.geometry.verticesNeedUpdate=!0;return this}}();
THREE.VertexTangentsHelper=function(a,b,d,e){this.object=a;this.size=void 0!==b?b:1;b=void 0!==d?d:255;e=void 0!==e?e:1;d=new THREE.Geometry;a=a.geometry.faces;for(var f=0,g=a.length;f<g;f++)for(var h=0,k=a[f].vertexTangents.length;h<k;h++)d.vertices.push(new THREE.Vector3),d.vertices.push(new THREE.Vector3);THREE.Line.call(this,d,new THREE.LineBasicMaterial({color:b,linewidth:e}),THREE.LinePieces);this.matrixAutoUpdate=!1;this.update()};THREE.VertexTangentsHelper.prototype=Object.create(THREE.Line.prototype);
THREE.VertexTangentsHelper.prototype.constructor=THREE.VertexTangentsHelper;
THREE.VertexTangentsHelper.prototype.update=function(a){var b=new THREE.Vector3;return function(a){a=["a","b","c","d"];this.object.updateMatrixWorld(!0);for(var e=this.geometry.vertices,f=this.object.geometry.vertices,g=this.object.geometry.faces,h=this.object.matrixWorld,k=0,l=0,m=g.length;l<m;l++)for(var q=g[l],r=0,p=q.vertexTangents.length;r<p;r++){var v=q.vertexTangents[r];e[k].copy(f[q[a[r]]]).applyMatrix4(h);b.copy(v).transformDirection(h).multiplyScalar(this.size);b.add(e[k]);k+=1;e[k].copy(b);
k+=1}this.geometry.verticesNeedUpdate=!0;return this}}();
THREE.WireframeHelper=function(a,b){var d=void 0!==b?b:16777215,e=[0,0],f={},g=function(a,b){return a-b},h=["a","b","c"],k=new THREE.BufferGeometry;if(a.geometry instanceof THREE.Geometry){for(var l=a.geometry.vertices,m=a.geometry.faces,q=0,r=new Uint32Array(6*m.length),p=0,v=m.length;p<v;p++)for(var t=m[p],u=0;3>u;u++){e[0]=t[h[u]];e[1]=t[h[(u+1)%3]];e.sort(g);var w=e.toString();void 0===f[w]&&(r[2*q]=e[0],r[2*q+1]=e[1],f[w]=!0,q++)}e=new Float32Array(6*q);p=0;for(v=q;p<v;p++)for(u=0;2>u;u++)q=
l[r[2*p+u]],h=6*p+3*u,e[h+0]=q.x,e[h+1]=q.y,e[h+2]=q.z;k.addAttribute("position",new THREE.BufferAttribute(e,3))}else if(a.geometry instanceof THREE.BufferGeometry){if(void 0!==a.geometry.attributes.index){l=a.geometry.attributes.position.array;v=a.geometry.attributes.index.array;m=a.geometry.drawcalls;q=0;0===m.length&&(m=[{count:v.length,index:0,start:0}]);for(var r=new Uint32Array(2*v.length),t=0,x=m.length;t<x;++t)for(var u=m[t].start,w=m[t].count,h=m[t].index,p=u,z=u+w;p<z;p+=3)for(u=0;3>u;u++)e[0]=
h+v[p+u],e[1]=h+v[p+(u+1)%3],e.sort(g),w=e.toString(),void 0===f[w]&&(r[2*q]=e[0],r[2*q+1]=e[1],f[w]=!0,q++);e=new Float32Array(6*q);p=0;for(v=q;p<v;p++)for(u=0;2>u;u++)h=6*p+3*u,q=3*r[2*p+u],e[h+0]=l[q],e[h+1]=l[q+1],e[h+2]=l[q+2]}else for(l=a.geometry.attributes.position.array,q=l.length/3,r=q/3,e=new Float32Array(6*q),p=0,v=r;p<v;p++)for(u=0;3>u;u++)h=18*p+6*u,r=9*p+3*u,e[h+0]=l[r],e[h+1]=l[r+1],e[h+2]=l[r+2],q=9*p+(u+1)%3*3,e[h+3]=l[q],e[h+4]=l[q+1],e[h+5]=l[q+2];k.addAttribute("position",new THREE.BufferAttribute(e,
3))}THREE.Line.call(this,k,new THREE.LineBasicMaterial({color:d}),THREE.LinePieces);this.matrix=a.matrixWorld;this.matrixAutoUpdate=!1};THREE.WireframeHelper.prototype=Object.create(THREE.Line.prototype);THREE.WireframeHelper.prototype.constructor=THREE.WireframeHelper;THREE.ImmediateRenderObject=function(){THREE.Object3D.call(this);this.render=function(a){}};THREE.ImmediateRenderObject.prototype=Object.create(THREE.Object3D.prototype);THREE.ImmediateRenderObject.prototype.constructor=THREE.ImmediateRenderObject;
THREE.MorphBlendMesh=function(a,b){THREE.Mesh.call(this,a,b);this.animationsMap={};this.animationsList=[];var d=this.geometry.morphTargets.length;this.createAnimation("__default",0,d-1,d/1);this.setAnimationWeight("__default",1)};THREE.MorphBlendMesh.prototype=Object.create(THREE.Mesh.prototype);THREE.MorphBlendMesh.prototype.constructor=THREE.MorphBlendMesh;
THREE.MorphBlendMesh.prototype.createAnimation=function(a,b,d,e){b={startFrame:b,endFrame:d,length:d-b+1,fps:e,duration:(d-b)/e,lastFrame:0,currentFrame:0,active:!1,time:0,direction:1,weight:1,directionBackwards:!1,mirroredLoop:!1};this.animationsMap[a]=b;this.animationsList.push(b)};
THREE.MorphBlendMesh.prototype.autoCreateAnimations=function(a){for(var b=/([a-z]+)_?(\d+)/,d,e={},f=this.geometry,g=0,h=f.morphTargets.length;g<h;g++){var k=f.morphTargets[g].name.match(b);if(k&&1<k.length){var l=k[1];e[l]||(e[l]={start:Infinity,end:-Infinity});k=e[l];g<k.start&&(k.start=g);g>k.end&&(k.end=g);d||(d=l)}}for(l in e)k=e[l],this.createAnimation(l,k.start,k.end,a);this.firstAnimation=d};
THREE.MorphBlendMesh.prototype.setAnimationDirectionForward=function(a){if(a=this.animationsMap[a])a.direction=1,a.directionBackwards=!1};THREE.MorphBlendMesh.prototype.setAnimationDirectionBackward=function(a){if(a=this.animationsMap[a])a.direction=-1,a.directionBackwards=!0};THREE.MorphBlendMesh.prototype.setAnimationFPS=function(a,b){var d=this.animationsMap[a];d&&(d.fps=b,d.duration=(d.end-d.start)/d.fps)};
THREE.MorphBlendMesh.prototype.setAnimationDuration=function(a,b){var d=this.animationsMap[a];d&&(d.duration=b,d.fps=(d.end-d.start)/d.duration)};THREE.MorphBlendMesh.prototype.setAnimationWeight=function(a,b){var d=this.animationsMap[a];d&&(d.weight=b)};THREE.MorphBlendMesh.prototype.setAnimationTime=function(a,b){var d=this.animationsMap[a];d&&(d.time=b)};THREE.MorphBlendMesh.prototype.getAnimationTime=function(a){var b=0;if(a=this.animationsMap[a])b=a.time;return b};
THREE.MorphBlendMesh.prototype.getAnimationDuration=function(a){var b=-1;if(a=this.animationsMap[a])b=a.duration;return b};THREE.MorphBlendMesh.prototype.playAnimation=function(a){var b=this.animationsMap[a];b?(b.time=0,b.active=!0):THREE.warn("THREE.MorphBlendMesh: animation["+a+"] undefined in .playAnimation()")};THREE.MorphBlendMesh.prototype.stopAnimation=function(a){if(a=this.animationsMap[a])a.active=!1};
THREE.MorphBlendMesh.prototype.update=function(a){for(var b=0,d=this.animationsList.length;b<d;b++){var e=this.animationsList[b];if(e.active){var f=e.duration/e.length;e.time+=e.direction*a;if(e.mirroredLoop){if(e.time>e.duration||0>e.time)e.direction*=-1,e.time>e.duration&&(e.time=e.duration,e.directionBackwards=!0),0>e.time&&(e.time=0,e.directionBackwards=!1)}else e.time%=e.duration,0>e.time&&(e.time+=e.duration);var g=e.startFrame+THREE.Math.clamp(Math.floor(e.time/f),0,e.length-1),h=e.weight;
g!==e.currentFrame&&(this.morphTargetInfluences[e.lastFrame]=0,this.morphTargetInfluences[e.currentFrame]=1*h,this.morphTargetInfluences[g]=0,e.lastFrame=e.currentFrame,e.currentFrame=g);f=e.time%f/f;e.directionBackwards&&(f=1-f);this.morphTargetInfluences[e.currentFrame]=f*h;this.morphTargetInfluences[e.lastFrame]=(1-f)*h}}};function animate(a,b,d,e,f){var g=new Date,h=setInterval(function(){var a=(new Date-g)/d;1<a&&(a=1);var l=b(a);e(l);1==a&&(clearInterval(h),f())},a);return h}
var config={roomHeight:8E3,roomWidth:8E3,zVel:160,enemyLinearVel:81,coin:{radius:150,thick:10,omega:.1,distBetween:400,number:7,scoreMult:10},accelMag:10,playerSize:100,lightPos:60,cameraPos:240,los:2E4,cameraLos:2E4,roomDepth:5E4,enemyGenDist:6E3,enemyTypesNo:14,speedUpAfter:15E3,fuelConsumeRate:{timeSlow:.3},startTimeFactor:20,timeSlowFactor:10,scoreFactor:1E3,maxTimeFactor:10};
function Enemy(a,b,d,e,f){this.size=b;b=new THREE.BoxGeometry(this.size.x,this.size.y,this.size.z);f=new THREE.MeshPhongMaterial({color:f,transparent:!0});f.opacity=.6;this.en=new THREE.Mesh(b,f);this.en.position.copy(a);"tiltRight"==e?(this.en.rotation.z=Math.atan(-config.roomHeight/config.roomWidth),this.axis=new THREE.Vector3(-config.roomWidth,config.roomHeight,0)):"tiltLeft"==e&&(this.en.rotation.z=Math.atan(config.roomHeight/config.roomWidth),this.axis=new THREE.Vector3(config.roomWidth,config.roomHeight,
0));this.velocity=new THREE.Vector3(0,0,d);"normalMoveHrz"==e?1>2*Math.random()?this.velocity.x=config.enemyLinearVel:this.velocity.x=-config.enemyLinearVel:"normalMoveVer"==e&&(1>2*Math.random()?this.velocity.y=config.enemyLinearVel:this.velocity.y=-config.enemyLinearVel);this.type=e}
Enemy.prototype.checkCollideWithEnvY=function(){var a=this.en.position;a.y-this.size.y/2<=-config.roomHeight/2?(this.en.position.y=-config.roomHeight/2+this.size.y/2,this.velocity.y=-this.velocity.y):a.y+this.size.y/2>=config.roomHeight/2&&(this.en.position.y=config.roomHeight/2-this.size.y/2,this.velocity.y=-this.velocity.y)};
Enemy.prototype.checkCollideWithEnvX=function(){var a=this.en.position;a.x-this.size.x/2<=-config.roomWidth/2?(this.en.position.x=-config.roomWidth/2+this.size.x/2,this.velocity.x=-this.velocity.x):a.x+this.size.x/2>=config.roomWidth/2&&(this.en.position.x=config.roomWidth/2-this.size.x/2,this.velocity.x=-this.velocity.x)};
function generateOneEnemy(a){var b=0,d=0,e,f=65535,g={z:200};1>a?(g.x=config.roomWidth/2,g.y=config.roomHeight,b=-config.roomWidth/2+g.x/2,e="normal"):2>a?(g.x=config.roomWidth/2,g.y=config.roomHeight,b=config.roomWidth/2-g.x/2,e="normal"):3>a?(g.x=config.roomWidth,g.y=config.roomHeight/2,d=config.roomHeight/2-g.y/2,e="normal"):4>a?(g.x=config.roomWidth,g.y=config.roomHeight/2,d=-config.roomHeight/2+g.y/2,e="normal"):5>a?(g.x=2*config.roomWidth,g.y=config.roomHeight,e="tiltLeft"):6>a?(g.x=2*config.roomWidth,
g.y=config.roomHeight,e="tiltRight"):7>a?(g.x=config.roomWidth/2,g.y=config.roomHeight,e="normalMoveHrz",f=61504):8>a&&(g.x=config.roomWidth,g.y=config.roomHeight/2,e="normalMoveVer",f=61504);return new Enemy(new THREE.Vector3(b,d,-config.los-g.z/2),g,config.zVel,e,f)}
function generateTwoEnemies(a){var b=[],d=[0,0],e=[0,0],f={z:7E3};9>a?(f.x=800,f.y=config.roomHeight,d[0]=-config.roomWidth/2+f.x/2,d[1]=config.roomWidth/2-f.x/2):10>a&&(f.x=config.roomWidth,f.y=800,f.z/=2,e[0]=-config.roomHeight/2+f.y/2,e[1]=config.roomHeight/2-f.y/2);b.push(new Enemy(new THREE.Vector3(d[0],e[0],-config.los-f.z/2),f,config.zVel,"normal",16777215),new Enemy(new THREE.Vector3(d[1],e[1],-config.los-f.z/2),f,config.zVel,"normal",16711680));return b}
function Environment(){var a=new THREE.PlaneBufferGeometry(config.roomWidth,config.roomDepth),b=new THREE.PlaneBufferGeometry(config.roomHeight,config.roomDepth),d=new THREE.MeshPhongMaterial({color:16777215});this.floor0=new THREE.Mesh(a,d);this.floor0.position.set(0,-config.roomHeight/2,-config.roomDepth/2);this.floor0.rotation.x=-Math.PI/2;this.floor1=new THREE.Mesh(a,d);this.floor1.position.set(0,-config.roomHeight/2,-3*config.roomDepth/2);this.floor1.rotation.x=-Math.PI/2;this.roof0=new THREE.Mesh(a,
d);this.roof0.rotation.x=Math.PI/2;this.roof0.position.set(0,config.roomHeight/2,-config.roomDepth/2);this.roof1=new THREE.Mesh(a,d);this.roof1.rotation.x=Math.PI/2;this.roof1.position.set(0,config.roomHeight/2,-3*config.roomDepth/2);this.leftWall0=new THREE.Mesh(b,d);this.leftWall0.rotation.y=Math.PI/2;this.leftWall0.rotation.z=Math.PI/2;this.leftWall0.position.set(-config.roomWidth/2,0,-config.roomDepth/2);this.leftWall1=new THREE.Mesh(b,d);this.leftWall1.rotation.y=Math.PI/2;this.leftWall1.rotation.z=
Math.PI/2;this.leftWall1.position.set(-config.roomWidth/2,0,-3*config.roomDepth/2);this.rightWall0=new THREE.Mesh(b,d);this.rightWall0.rotation.y=-Math.PI/2;this.rightWall0.rotation.z=Math.PI/2;this.rightWall0.position.set(config.roomWidth/2,0,-config.roomDepth/2);this.rightWall1=new THREE.Mesh(b,d);this.rightWall1.rotation.y=-Math.PI/2;this.rightWall1.rotation.z=Math.PI/2;this.rightWall1.position.set(config.roomWidth/2,0,-3*config.roomDepth/2)}
Environment.prototype.wrapWalls=function(a){var b=this["floor"+(+a+1)%2].position.z;this["floor"+a].position.z=b-config.roomDepth;this["roof"+a].position.z=b-config.roomDepth;this["leftWall"+a].position.z=b-config.roomDepth;this["rightWall"+a].position.z=b-config.roomDepth};function makeBackWall(){var a=new THREE.MeshPhongMaterial({color:0}),b=new THREE.PlaneBufferGeometry(config.roomWidth,config.roomHeight),a=new THREE.Mesh(b,a);a.position.set(0,0,-config.los);return a}
function Coin(a,b,d){var e=new THREE.CylinderGeometry(b.r,b.r,b.t,32),f=new THREE.MeshPhongMaterial({color:11306798,transparent:!0,shininess:100,specular:11306798});f.opacity=.8;this.cn=new THREE.Mesh(e,f);this.cn.position.copy(a);this.size=b;this.velocity=new THREE.Vector3(0,0,d);this.omega=config.coin.omega}
function generateCoins(a,b){var d=[],e,f={r:config.coin.radius,t:config.coin.thick},g=new THREE.Vector3(0,0,-config.los-f.t/2);1>a?(g.y=config.roomHeight/2-f.r,g.x=config.roomWidth/2-f.r):2>a?(g.y=-config.roomHeight/2+f.r,g.x=config.roomWidth/2-f.r):3>a?(g.y=config.roomHeight/2-f.r,g.x=-config.roomWidth/2+f.r):4>a&&(g.y=-config.roomHeight/2+f.r,g.x=-config.roomWidth/2+f.r);for(var h=0;h<b;++h)e=new Coin(g,f,config.zVel),e.cn.rotation.x=Math.PI/2,e.cn.rotation.z=Math.random()*Math.PI,d.push(e),g.z-=
config.coin.distBetween;return d}function Player(){this.size=config.playerSize;var a=new THREE.BoxGeometry(this.size,this.size,this.size),b=new THREE.MeshPhongMaterial({color:4210752,transparent:!0});b.opacity=.85;this.pl=new THREE.Mesh(a,b);this.pl.position.set(0,0,-120);this.velocity=new THREE.Vector3(0,0,0)}
Player.prototype.checkCollide=function(a,b,d){var e=this.pl.position,f=!1;e.y-this.size/2<=-config.roomHeight/2&&(this.pl.position.y=-config.roomHeight/2+this.size/2,b?this.velocity.y=-0:Math.abs(this.velocity.y)-.05<Math.abs(a.y*d)?this.velocity.y=0:(this.velocity.y=.15*-this.velocity.y,f=!0));e.y+this.size/2>=config.roomHeight/2&&(this.pl.position.y=config.roomHeight/2-this.size/2,b?this.velocity.y=-0:Math.abs(this.velocity.y)-.05<Math.abs(a.y*d)?this.velocity.y=0:(this.velocity.y=.15*-this.velocity.y,
f=!0));e.x+this.size/2>=config.roomWidth/2&&(this.pl.position.x=config.roomWidth/2-this.size/2,b?this.velocity.x=-0:Math.abs(this.velocity.x)-.05<Math.abs(a.x*d)?this.velocity.x=0:(this.velocity.x=.15*-this.velocity.x,f=!0));e.x-this.size/2<=-config.roomWidth/2&&(this.pl.position.x=-config.roomWidth/2+this.size/2,b?this.velocity.x=-0:Math.abs(this.velocity.x)-.05<Math.abs(a.x*d)?this.velocity.x=0:(this.velocity.x=.15*-this.velocity.x,f=!0));return f};
var con=document.getElementById("con"),startMenu=document.getElementById("start"),restartMenu=document.getElementById("restart"),pauseMenu=document.getElementById("pause"),prevTime;
function Game(){this.renderer=new THREE.WebGLRenderer({antialias:!0});this.renderer.setClearColor(16777215,1);this.renderer.setSize(con.offsetWidth,con.offsetHeight);con.appendChild(this.renderer.domElement);this.scene=new THREE.Scene;this.camera=new THREE.PerspectiveCamera(114,con.offsetWidth/con.offsetHeight,1,config.cameraLos+1E3);this.camera.position.set(0,0,-config.cameraPos);this.camera.rotation.z=Math.PI/2;this.env=new Environment;this.light=new THREE.PointLight(16777215,1,config.los);this.light.position.set(0,
0,-60);this.lightAnim=null;this.player=new Player;this.coins=[];this.enemies=[];this.timeToSpeedUp=0;this.powers={keyPressed:{timeSlow:!1},fuel:{timeSlow:100},elt:{timeSlow:document.querySelector("#time-icon"),timeSlowFuel:document.querySelector("#time-icon .fuel-indicator")}};this.sounds={thud:new Audio("./audio/thud.mp3"),coin:new Audio("./audio/coin.mp3"),time:new Audio("./audio/time.mp3"),grav:new Audio("./audio/grav.mp3"),end:new Audio("./audio/boom.mp3"),music:new Audio("./audio/back.mp3")};
for(sound in this.sounds)this.sounds.hasOwnProperty(sound)&&this.sounds[sound].load();this.sounds.thud.volume=.15;this.sounds.coin.volume=.25;this.sounds.time.volume=.4;this.sounds.grav.volume=.25;this.sounds.end.volume=.4;this.sounds.grav.playbackRate=3.5;this.sounds.time.playbackRate=4;this.sounds.end.playbackRate=2;this.sounds.music.loop=!0;this.sounds.music.play();this.scene.add(this.light);for(var a in this.env)this.env.hasOwnProperty(a)&&this.scene.add(this.env[a]);this.backWall=makeBackWall();
this.scene.add(this.backWall);this.scene.add(this.player.pl);this.gravity=new THREE.Vector3(0,-config.accelMag,0);this.gravChange=!1;this.curWallSet=0;this.enemyGenDist=config.los;this.curEnemyTypes=10;this.lost=!1;this.zVel=config.zVel;this.timeFactor=config.startTimeFactor;this.start=this.paused=!1;this.score=0;this.scoreCard=document.getElementById("score")}
Game.prototype.reInitialize=function(){this.env=new Environment;this.player=new Player;this.camera.rotation.set(0,0,Math.PI/2);this.camera.position.set(0,0,-config.cameraPos);this.coins=[];this.enemies=[];clearInterval(this.lightAnim);this.light.color.setHex(16777215);this.lightAnim=null;this.timeToSpeedUp=0;this.powers={keyPressed:{timeSlow:!1},fuel:{timeSlow:100},elt:{timeSlow:document.querySelector("#time-icon"),timeSlowFuel:document.querySelector("#time-icon .fuel-indicator")}};this.powers.elt.timeSlowFuel.style.width=
"100%";this.powers.elt.timeSlow.className=this.powers.elt.timeSlow.className.replace(" active","");this.sounds.grav.playbackRate=3.5;this.sounds.music.playbackRate=1;this.sounds.music.currentTime=0;this.sounds.music.play();for(var a in this.env)this.env.hasOwnProperty(a)&&this.scene.add(this.env[a]);this.scene.add(this.player.pl);this.gravity=new THREE.Vector3(0,-config.accelMag,0);this.gravChange=!1;this.curWallSet=0;this.enemyGenDist=config.los;this.curEnemyTypes=10;this.lost=!1;this.timeFactor=
config.startTimeFactor;this.start=this.paused=!1;this.score=0;this.scoreCard.innerHTML="Hi !"};
Game.prototype.playerBlockCollideCheck=function(){for(var a=this.player.pl.position,b=this.player.size,d,e,f,g,h=new THREE.Vector3,k=0;k<this.enemies.length;++k)if(d=this.enemies[k].en.position,e=this.enemies[k].size,f=this.enemies[k].type,g=this.enemies[k].axis,Math.abs(a.z-d.z)<=b/2+e.z/2)if(/normal/.test(f)){if(Math.abs(a.y-d.y)<=b/2+e.y/2&&Math.abs(a.x-d.x)<=b/2+e.x/2){this.lost=!0;break}}else if(/tilt/.test(f)){d=new THREE.Vector3;d.copy(a);d.z=0;h.copy(d);if(0>g.x&&0<h.x||0<g.x&&0>h.x)g.x=-g.x,
g.y=-g.y;h.projectOnVector(g);h=h.sub(d);if(h.length()<b/2*Math.sqrt(2)+e.y/2){this.lost=!0;break}}return this.lost?!0:!1};Game.prototype.playerCoinCollideCheck=function(a){var b=this.player.pl.position,d=this.player.size;return Math.abs(a.cn.position.z-b.z)<=d/2+a.size.r&&Math.abs(a.cn.position.y-b.y)<=d/2+a.size.r&&Math.abs(a.cn.position.x-b.x)<=d/2+a.size.r?!0:!1};
Game.prototype.changeLights=function(){for(var a="",b=0;3>b;++b)a+=Math.ceil(159*Math.random()+96).toString(16);var a=new THREE.Color(parseInt(a,16)),d=this.light.color;this.lightAnim&&clearInterval(this.lightAnim);this.lightAnim=animate(50,function(a){return a},3E3,function(b){for(c in this.light.color)this.light.color.hasOwnProperty(c)&&(this.light.color[c]=d[c]+b*(a[c]-d[c]))}.bind(this),function(){}.bind(this))};
Game.prototype.update=function(a){var b,d=[];a/=this.timeFactor;this.powers.keyPressed.timeSlow?(/active/.test(this.powers.elt.timeSlow.className)||(this.powers.elt.timeSlow.className+=" active"),0<this.powers.fuel.timeSlow&&(a/=config.timeSlowFactor,this.powers.fuel.timeSlow-=config.fuelConsumeRate.timeSlow,this.powers.elt.timeSlowFuel.style.width=this.powers.fuel.timeSlow+"%")):100>this.powers.fuel.timeSlow&&(this.powers.fuel.timeSlow+=config.fuelConsumeRate.timeSlow/5,this.powers.elt.timeSlowFuel.style.width=
this.powers.fuel.timeSlow+"%");this.timeToSpeedUp>config.speedUpAfter&&(this.timeToSpeedUp=0,this.timeFactor>config.maxTimeFactor&&this.timeFactor--,this.changeLights(),this.curEnemyTypes<config.enemyTypesNo&&(this.curEnemyTypes+=2));var e=new THREE.Vector3(0,0,0);if(this.playerBlockCollideCheck())this.sounds.music.pause(),this.sounds.end.play(),this.light.color.setHex(16711680);else{0>=this.enemyGenDist&&(this.enemyGenDist=0,b=Math.random()*this.curEnemyTypes,4>b?(b=generateCoins(b,config.coin.number),
b.forEach(function(a){this.coins.push(a);this.scene.add(a.cn)},this),this.enemyGenDist+=config.coin.number*config.coin.distBetween-config.enemyGenDist/6):12>b?(b=generateOneEnemy(b-4),this.enemies.push(b),this.scene.add(b.en)):14>b&&(b=generateTwoEnemies(b-4),this.enemies.push(b[0],b[1]),this.scene.add(b[0].en),this.scene.add(b[1].en),this.enemyGenDist+=b[0].size.z),this.enemyGenDist+=config.enemyGenDist);for(var f in this.env)this.env.hasOwnProperty(f)&&(this.env[f].position.z+=this.zVel*a);for(f=
0;f<this.enemies.length;++f)b=this.enemies[f],0<=b.en.position.z-b.size.z/2&&d.push(f),b=this.enemies[f],"normalMoveVer"==b.type?b.checkCollideWithEnvY():"normalMoveHrz"==b.type&&b.checkCollideWithEnvX(),e.copy(b.velocity),e.multiplyScalar(a),b.en.position.add(e);for(f=d.length-1;0<=f;--f)this.scene.remove(this.enemies[f].en),this.enemies.splice(this.enemies[f],1);d=[];for(f=0;f<this.coins.length;++f)coin=this.coins[f],this.playerCoinCollideCheck(coin)?(this.sounds.coin.currentTime=0,this.sounds.coin.play(),
d.push(f),this.score+=config.zVel*a*config.coin.scoreMult):0<=coin.cn.position.z-coin.size.t/2&&d.push(f),coin.cn.position.z+=coin.velocity.z*a,coin.cn.rotation.z+=coin.omega*a;for(f=d.length-1;0<=f;--f)this.scene.remove(this.coins[f].cn),this.coins.splice(f,1);this.enemyGenDist-=this.zVel*a;this.env["leftWall"+this.curWallSet].position.z-config.cameraLos>=config.roomDepth/2&&(this.env.wrapWalls(this.curWallSet),this.curWallSet=(this.curWallSet+1)%2);this.powers.keyPressed.timeSlow&&0<this.powers.fuel.timeSlow?
(e.copy(this.gravity),e.multiplyScalar(a*config.timeSlowFactor/2),this.player.velocity.add(e),e.copy(this.player.velocity),e.multiplyScalar(a*config.timeSlowFactor/2)):(e.copy(this.gravity),e.multiplyScalar(a),this.player.velocity.add(e),e.copy(this.player.velocity),e.multiplyScalar(a));this.player.pl.position.add(e);this.powers.keyPressed.timeSlow&&0<this.powers.fuel.timeSlow?this.player.checkCollide(this.gravity,this.gravChange,a*config.timeSlowFactor)&&this.sounds.thud.play():this.player.checkCollide(this.gravity,
this.gravChange,a)&&(this.sounds.thud.currentTime=0,this.sounds.thud.play());this.gravChange=!1;this.camera.position.copy(this.player.pl.position);this.camera.position.z+=config.cameraPos;this.camera.position.y/=(config.roomHeight-this.player.size)/(config.roomHeight-3*this.player.size);this.score+=config.zVel*a;this.scoreCard.innerHTML=Math.floor(this.score/config.scoreFactor);this.camera.rotation.z=(config.roomHeight/2-this.player.size/2+this.player.pl.position.y)/(config.roomHeight-this.player.size)*
Math.PI}};Game.prototype.startEvents=function(){window.addEventListener("keydown",onKeyDown);window.addEventListener("keyup",onKeyUp)};Game.prototype.stopEvents=function(){window.removeEventListener("keydown",onKeyDown);window.removeEventListener("keyup",onKeyUp)};
Game.prototype.cleanup=function(){console.log("So long, suckah!");this.enemies.forEach(function(a){this.scene.remove(a.en)},this);this.coins.forEach(function(a){this.scene.remove(a.cn)},this);for(var a in this.env)this.env.hasOwnProperty(a)&&this.scene.remove(this.env[a]);this.scene.remove(this.player.pl);this.stopEvents();window.removeEventListener("keydown",pauseToggle);restartMenu.style.display="block";window.addEventListener("keydown",restartGame)};
function startGame(a){32==a.keyCode&&(window.removeEventListener("keydown",startGame),window.addEventListener("keydown",pauseToggle),game.startEvents(),startMenu.style.display="none",requestAnimationFrame(mainLoop))}function restartGame(a){32==a.keyCode&&(window.removeEventListener("keydown",restartGame),restartMenu.style.display="none",game.reInitialize(),main())}var game=new Game;
function mainLoop(a){if(game.lost)game.cleanup();else{prevTime||(prevTime=a);var b=Math.min(a-prevTime,100);game.paused?requestAnimationFrame(mainLoop):(game.timeToSpeedUp+=b,game.update(b),requestAnimationFrame(mainLoop),game.renderer.render(game.scene,game.camera),prevTime=a)}}function main(){windowResize();window.addEventListener("resize",windowResize);game.renderer.render(game.scene,game.camera);startMenu.style.display="block";prevTime=void 0;window.addEventListener("keydown",startGame)}
function onKeyDown(a){83==a.keyCode&&(game.powers.keyPressed.timeSlow||(game.sounds.time.currentTime=0,game.sounds.time.play()),game.powers.keyPressed.timeSlow=!0,game.sounds.music.pause(),game.sounds.grav.playbackRate=1);36<a.keyCode&&41>a.keyCode&&(game.sounds.grav.currentTime=0,game.sounds.grav.play());37==a.keyCode?(a.preventDefault(),game.gravity.x=0>game.gravity.y?-config.accelMag:config.accelMag,game.gravChange=!0):38==a.keyCode?(a.preventDefault(),game.gravity.y=0>game.gravity.y?config.accelMag:
-config.accelMag,game.gravChange=!0):39==a.keyCode?(a.preventDefault(),game.gravity.x=0>game.gravity.y?config.accelMag:-config.accelMag,game.gravChange=!0):40==a.keyCode&&(a.preventDefault(),game.gravity.y=0>game.gravity.y?-config.accelMag:config.accelMag,game.gravChange=!0)}function onKeyUp(a){83==a.keyCode&&(game.sounds.music.play(),game.sounds.grav.playbackRate=3.5,game.powers.keyPressed.timeSlow=!1,game.powers.elt.timeSlow.className=game.powers.elt.timeSlow.className.replace(" active",""))}
function pauseToggle(a){27==a.keyCode&&(game.paused?(game.paused=!1,pauseMenu.style.display="none",game.startEvents(),game.sounds.music.play()):(game.stopEvents(),onKeyUp({keyCode:83}),pauseMenu.style.display="block",game.sounds.music.pause(),game.paused=!0))}function windowResize(){game.camera.aspect=window.innerWidth/window.innerHeight;game.camera.updateProjectionMatrix();game.renderer.setSize(window.innerWidth,window.innerHeight);game.paused&&game.renderer.render(game.scene,game.camera)}
window.onload=main;})()